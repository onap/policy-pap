<?xml version="1.0" encoding="UTF-8"?>
<!--
  ============LICENSE_START=======================================================
  ONAP Policy PAP
  ================================================================================
  Copyright (C) 2019 AT&T Intellectual Property. All rights reserved.
  Modifications Copyright (C) 2020-2021,2024 Nordix Foundation.
  Modifications Copyright (C) 2020,2022 Bell Canada. All rights reserved.
  ================================================================================
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at
       http://www.apache.org/licenses/LICENSE-2.0
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  ============LICENSE_END=========================================================
  -->
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.6.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Policy PAP Stability" enabled="true">
      <stringProp name="TestPlan.comments">Policy PAP Stability Tests</stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="PAP_HOST" elementType="Argument">
            <stringProp name="Argument.name">PAP_HOST</stringProp>
            <stringProp name="Argument.value">localhost</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="PAP_PORT" elementType="Argument">
            <stringProp name="Argument.name">PAP_PORT</stringProp>
            <stringProp name="Argument.value">30003</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="API_HOST" elementType="Argument">
            <stringProp name="Argument.name">API_HOST</stringProp>
            <stringProp name="Argument.value">localhost</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="API_PORT" elementType="Argument">
            <stringProp name="Argument.name">API_PORT</stringProp>
            <stringProp name="Argument.value">30002</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager">
        <collectionProp name="AuthManager.auth_list">
          <elementProp name="" elementType="Authorization">
            <stringProp name="Authorization.url">http://${PAP_HOST}:${PAP_PORT}/policy/pap/v1</stringProp>
            <stringProp name="Authorization.username">policyadmin</stringProp>
            <stringProp name="Authorization.password">zb!XztG34</stringProp>
            <stringProp name="Authorization.domain"></stringProp>
            <stringProp name="Authorization.realm"></stringProp>
          </elementProp>
          <elementProp name="" elementType="Authorization">
            <stringProp name="Authorization.url">http://${API_HOST}:${API_PORT}/policy/api/v1</stringProp>
            <stringProp name="Authorization.username">policyadmin</stringProp>
            <stringProp name="Authorization.password">zb!XztG34</stringProp>
            <stringProp name="Authorization.domain"></stringProp>
            <stringProp name="Authorization.realm"></stringProp>
          </elementProp>
          <elementProp name="" elementType="Authorization">
            <stringProp name="Authorization.url">http://${PAP_HOST}:${PAP_PORT}/metrics</stringProp>
            <stringProp name="Authorization.username">policyadmin</stringProp>
            <stringProp name="Authorization.password">zb!XztG34</stringProp>
            <stringProp name="Authorization.domain"></stringProp>
            <stringProp name="Authorization.realm"></stringProp>
          </elementProp>
        </collectionProp>
        <boolProp name="AuthManager.clearEachIteration">true</boolProp>
        <boolProp name="AuthManager.controlledByThreadGroup">false</boolProp>
      </AuthManager>
      <hashTree/>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Content-Type</stringProp>
            <stringProp name="Header.value">application/json</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <SetupThreadGroup guiclass="SetupThreadGroupGui" testclass="SetupThreadGroup" testname="setUp Thread Group">
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <longProp name="ThreadGroup.duration">260000</longProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </SetupThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Policy">
          <intProp name="HTTPSampler.concurrentPool">6</intProp>
          <stringProp name="HTTPSampler.domain">${API_HOST}</stringProp>
          <stringProp name="HTTPSampler.port">${API_PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.path">/policy/api/v1/policytypes/onap.policies.controlloop.operational.common.Apex/versions/1.0.0/policies</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;tosca_definitions_version&quot;: &quot;tosca_simple_yaml_1_1_0&quot;,&#xd;
  &quot;topology_template&quot;: {&#xd;
    &quot;policies&quot;: [&#xd;
      {&#xd;
        &quot;operational.apex.stabilityTestDefaultDomain&quot;: {&#xd;
          &quot;type&quot;: &quot;onap.policies.controlloop.operational.common.Apex&quot;,&#xd;
          &quot;type_version&quot;: &quot;1.0.0&quot;,&#xd;
          &quot;version&quot;: &quot;1.0.0&quot;,&#xd;
          &quot;metadata&quot;: {&#xd;
            &quot;policy-id&quot;: &quot;operational.apex.defaultDomain&quot;,&#xd;
            &quot;policy-version&quot;: 1&#xd;
          },&#xd;
          &quot;properties&quot;: {&#xd;
            &quot;engineServiceParameters&quot;: {&#xd;
              &quot;name&quot;: &quot;MyApexEngine&quot;,&#xd;
              &quot;version&quot;: &quot;0.0.1&quot;,&#xd;
              &quot;id&quot;: 45,&#xd;
              &quot;instanceCount&quot;: 4,&#xd;
              &quot;deploymentPort&quot;: 12561,&#xd;
              &quot;policy_type_impl&quot;: {&#xd;
                &quot;apexPolicyModel&quot;: {&#xd;
                  &quot;key&quot;: {&#xd;
                    &quot;name&quot;: &quot;SamplePolicyModelJAVASCRIPT&quot;,&#xd;
                    &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                  },&#xd;
                  &quot;keyInformation&quot;: {&#xd;
                    &quot;key&quot;: {&#xd;
                      &quot;name&quot;: &quot;KeyInformation&quot;,&#xd;
                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                    },&#xd;
                    &quot;keyInfoMap&quot;: {&#xd;
                      &quot;entry&quot;: [&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;Context&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;Context&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;ca36bfd8-6042-3633-8c85-89c66507c3bf&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;Context:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;Event0000&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;Event0000&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;465a81cc-885f-3a4d-bc4e-1508da92b236&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;Event0000:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;Event0001&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;Event0001&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;36b2d570-fff7-3a4b-bab2-6bf492f5129a&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;Event0001:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;Event0002&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;Event0002&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;ff6160a7-fb5e-379c-a6d2-2cd28053eacf&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;Event0002:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;Event0003&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;Event0003&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;5899e216-2abf-3781-abc4-2c257b92721e&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;Event0003:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;Event0004&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;Event0004&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;7c2692a7-4587-3d09-abf9-d96b339a316f&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;Event0004:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;Event0100&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;Event0100&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;b696048c-c0b0-34c1-8dbe-32ab6c8bc0c7&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;Event0100:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;Event0101&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;Event0101&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;edbfa868-2ab2-30fd-8078-4c7f67ca6122&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;Event0101:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;Event0102&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;Event0102&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;6b6ad2ff-ef63-3f7b-aabb-fba44f8de9d4&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;Event0102:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;Event0103&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;Event0103&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;c2550912-10d9-3000-8826-377288cd6cb1&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;Event0103:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;Event0104&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;Event0104&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;f6d75b71-c8a7-3337-a121-88d68c389f5a&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;Event0104:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;Events&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;Events&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;0215644c-4531-375c-8335-d558b4de8c03&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;Events:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;ExternalContextAlbum&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;ExternalContextAlbum&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;976a79e7-5c80-3c03-9503-da3f41fec395&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;ExternalContextAlbum:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;GlobalContextAlbum&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;GlobalContextAlbum&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;c95e9e5f-d2c7-3ac7-a205-ea3574530cb7&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;GlobalContextAlbum:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;KeyInformation&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;KeyInformation&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;1ff2f905-685c-3caf-95bc-0bbc90345888&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;KeyInformation:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;Policies&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;Policies&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;f54c3b2b-be76-31c4-adfc-87c494c06808&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;Policies:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;Policy0&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;Policy0&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;3410e939-30ca-32c4-a2d8-c30b6fee6eec&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;Policy0:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;Policy0ContextAlbum&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;Policy0ContextAlbum&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;e27564c4-3cbf-3db2-9bf3-83ae80a2f907&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;Policy0ContextAlbum:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;Policy1&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;Policy1&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;d0b2b585-f344-33b8-af9e-250e7f4cfbce&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;Policy1:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;Policy1ContextAlbum&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;Policy1ContextAlbum&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;815d74ae-6fc0-3221-87b9-2bb1dfdfa7f0&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;Policy1ContextAlbum:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;SamplePolicyModelJAVASCRIPT&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;SamplePolicyModelJAVASCRIPT&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;bc8ee312-81ce-3c4a-92d5-4a73b8077148&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;SamplePolicyModelJAVASCRIPT:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;Task_Act0&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;Task_Act0&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;0589ff20-adcc-3ce5-95fe-8d7978ed54ed&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;Task_Act0:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;Task_Act1&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;Task_Act1&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;095b126d-ca8b-32c9-ad52-d744e817a79c&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;Task_Act1:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;Task_Act2&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;Task_Act2&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;3d786b4c-d9ee-3367-ab71-c67271a4ea2f&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;Task_Act2:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;Task_Act3&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;Task_Act3&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;9231753e-20c5-3436-982f-9100340cc570&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;Task_Act3:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;Task_Decide0&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;Task_Decide0&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;502383d3-483f-3a56-a426-2f0406674c8d&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;Task_Decide0:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;Task_Decide1&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;Task_Decide1&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;16598106-41c8-3b5a-99c6-5fcf6d1a5ddf&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;Task_Decide1:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;Task_Decide2&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;Task_Decide2&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;ad3a89f5-e369-3c66-b22c-669f7b3653b8&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;Task_Decide2:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;Task_Decide3&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;Task_Decide3&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;56815939-1164-3867-9ed1-0a27ff8aafb3&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;Task_Decide3:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;Task_Establish0&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;Task_Establish0&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;0db0c566-ecd7-3e27-9865-4b82c893abdb&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;Task_Establish0:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;Task_Establish1&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;Task_Establish1&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;6944a4c1-6201-317c-8d7e-eaa7f2ee0ea0&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;Task_Establish1:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;Task_Establish2&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;Task_Establish2&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;0f766ea9-11cd-3e7d-a8c8-28c8dee6a85a&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;Task_Establish2:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;Task_Establish3&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;Task_Establish3&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;c3237a38-cc6d-3418-b1e1-0dc8b4bdcc66&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;Task_Establish3:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;Task_Match0&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;Task_Match0&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;051bcfd5-cf73-3c89-8ee7-ea6e005ec059&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;Task_Match0:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;Task_Match1&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;Task_Match1&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;3754fe19-98f2-34a1-9f45-db31052208d8&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;Task_Match1:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;Task_Match2&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;Task_Match2&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;8c200709-a180-3c8b-916f-275ff49ce194&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;Task_Match2:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;Task_Match3&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;Task_Match3&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;a1a879c6-4510-33b0-bbd0-ad6256189a37&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;Task_Match3:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;Tasks&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;Tasks&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;a7fab96b-ce1c-37ce-bbb2-556b6db524a5&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;Tasks:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;0a652886-c88d-3f8c-8994-ae9161e7c963&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;TestCase:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;TestContextItem000&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;TestContextItem000&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;8efba9fa-371e-33df-a7d6-88b0284e7fd0&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;TestContextItem000:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;TestContextItem001&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;TestContextItem001&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;3740077c-a2b3-356b-81dc-5ded2118a951&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;TestContextItem001:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;TestContextItem002&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;TestContextItem002&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;b5c7df95-9af5-322f-9ea8-eb440a2bf926&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;TestContextItem002:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;TestContextItem003&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;TestContextItem003&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;b36f0aa5-0fb9-3e2c-8fa2-fddb7fd05f4b&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;TestContextItem003:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;TestContextItem004&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;TestContextItem004&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;093cda11-eaeb-3a46-a5b6-d5e30c00935b&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;TestContextItem004:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;TestContextItem005&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;TestContextItem005&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;569a758d-ba40-37c0-aebb-7ad138df25ac&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;TestContextItem005:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;TestContextItem006&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;TestContextItem006&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;252818d9-b61f-3962-a905-8865fb00fb04&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;TestContextItem006:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;TestContextItem007&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;TestContextItem007&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;fe1a5f7c-c083-377b-a797-752b01fc6c73&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;TestContextItem007:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;TestContextItem008&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;TestContextItem008&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;aa87d007-d07e-3f67-8c6d-0ebc3d85479d&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;TestContextItem008:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;TestContextItem009&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;TestContextItem009&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;126e7a3a-11b6-3f88-9397-c21d8819f859&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;TestContextItem009:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;TestContextItem00A&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;TestContextItem00A&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;0e0e3dec-e03d-3379-a87b-1ecd4aa3d8cc&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;TestContextItem00A:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;TestContextItem00B&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;TestContextItem00B&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;dbdc98df-3ff4-360c-b8d3-a7a836ac3de6&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;TestContextItem00B:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;TestContextItem00C&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;TestContextItem00C&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;32a2f355-77f3-3b25-ace6-7a9c5763a5ad&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;TestContextItem00C:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;TestDatatypes&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;TestDatatypes&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;3f95472c-973e-30e2-95f1-bf00cbef909a&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;TestDatatypes:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;TestExternalContextItem&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;TestExternalContextItem&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;610dbbd4-9149-3b3c-9af4-819056f0e169&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;TestExternalContextItem:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;TestGlobalContextItem&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;TestGlobalContextItem&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;07fa8f68-55f1-3fd0-81c1-749a379753a7&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;TestGlobalContextItem:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;TestPolicyContextItem&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;TestPolicyContextItem&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;d9c93cd1-539e-35c5-aaec-bb711ceb1251&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;TestPolicyContextItem:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;TestSlogan&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;TestSlogan&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;683fe492-7eae-3ac7-9924-bb7850208d05&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;TestSlogan:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;TestTemperature&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;TestTemperature&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;bba25b6f-e3cd-3060-9022-4ef3a79f8eb0&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;TestTemperature:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;97b73937-c344-33c0-924c-4d26b6449564&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;TestTimestamp:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        }&#xd;
                      ]&#xd;
                    }&#xd;
                  },&#xd;
                  &quot;policies&quot;: {&#xd;
                    &quot;key&quot;: {&#xd;
                      &quot;name&quot;: &quot;Policies&quot;,&#xd;
                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                    },&#xd;
                    &quot;policyMap&quot;: {&#xd;
                      &quot;entry&quot;: [&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;Policy0&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;policyKey&quot;: {&#xd;
                              &quot;name&quot;: &quot;Policy0&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;template&quot;: &quot;MEDA&quot;,&#xd;
                            &quot;state&quot;: {&#xd;
                              &quot;entry&quot;: [&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;Act&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;stateKey&quot;: {&#xd;
                                      &quot;parentKeyName&quot;: &quot;Policy0&quot;,&#xd;
                                      &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                      &quot;parentLocalName&quot;: &quot;NULL&quot;,&#xd;
                                      &quot;localName&quot;: &quot;Act&quot;&#xd;
                                    },&#xd;
                                    &quot;trigger&quot;: {&#xd;
                                      &quot;name&quot;: &quot;Event0003&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;stateOutputs&quot;: {&#xd;
                                      &quot;entry&quot;: [&#xd;
                                        {&#xd;
                                          &quot;key&quot;: &quot;Act_NULL&quot;,&#xd;
                                          &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;Policy0&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;Act&quot;,&#xd;
                                              &quot;localName&quot;: &quot;Act_NULL&quot;&#xd;
                                            },&#xd;
                                            &quot;outgoingEvent&quot;: {&#xd;
                                              &quot;name&quot;: &quot;Event0004&quot;,&#xd;
                                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                            },&#xd;
                                            &quot;nextState&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;NULL&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.0&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;NULL&quot;,&#xd;
                                              &quot;localName&quot;: &quot;NULL&quot;&#xd;
                                            }&#xd;
                                          }&#xd;
                                        }&#xd;
                                      ]&#xd;
                                    },&#xd;
                                    &quot;contextAlbumReference&quot;: [&#xd;
                                      {&#xd;
                                        &quot;name&quot;: &quot;GlobalContextAlbum&quot;,&#xd;
                                        &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                      }&#xd;
                                    ],&#xd;
                                    &quot;taskSelectionLogic&quot;: {&#xd;
                                      &quot;key&quot;: &quot;TaskSelectionLigic&quot;,&#xd;
                                      &quot;logicFlavour&quot;: &quot;JAVASCRIPT&quot;,&#xd;
                                      &quot;logic&quot;: &quot;/*\n * ============LICENSE_START=======================================================\n *  Copyright (C) 2016-2018 Ericsson. All rights reserved.\n * ================================================================================\n * Licensed under the Apache License, Version 2.0 (the \&quot;License\&quot;);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *      http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \&quot;AS IS\&quot; BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * \n * SPDX-License-Identifier: Apache-2.0\n * ============LICENSE_END=========================================================\n */\n\nexecutor.logger.debug(executor.subject.id);\nvar gc = executor.getContextAlbum(\&quot;GlobalContextAlbum\&quot;);\nexecutor.logger.debug(gc.name);\nexecutor.subject.defaultTaskKey.copyTo(executor.selectedTask)\n\ntrue;&quot;&#xd;
                                    },&#xd;
                                    &quot;stateFinalizerLogicMap&quot;: {&#xd;
                                      &quot;entry&quot;: []&#xd;
                                    },&#xd;
                                    &quot;defaultTask&quot;: {&#xd;
                                      &quot;name&quot;: &quot;Task_Act1&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;taskReferences&quot;: {&#xd;
                                      &quot;entry&quot;: [&#xd;
                                        {&#xd;
                                          &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;Task_Act0&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                          },&#xd;
                                          &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;Policy0&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;Act&quot;,&#xd;
                                              &quot;localName&quot;: &quot;Task_Act0_DIRECT_Act_NULL&quot;&#xd;
                                            },&#xd;
                                            &quot;outputType&quot;: &quot;DIRECT&quot;,&#xd;
                                            &quot;output&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;Policy0&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;Act&quot;,&#xd;
                                              &quot;localName&quot;: &quot;Act_NULL&quot;&#xd;
                                            }&#xd;
                                          }&#xd;
                                        },&#xd;
                                        {&#xd;
                                          &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;Task_Act1&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                          },&#xd;
                                          &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;Policy0&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;Act&quot;,&#xd;
                                              &quot;localName&quot;: &quot;Task_Act1_DIRECT_Act_NULL&quot;&#xd;
                                            },&#xd;
                                            &quot;outputType&quot;: &quot;DIRECT&quot;,&#xd;
                                            &quot;output&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;Policy0&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;Act&quot;,&#xd;
                                              &quot;localName&quot;: &quot;Act_NULL&quot;&#xd;
                                            }&#xd;
                                          }&#xd;
                                        },&#xd;
                                        {&#xd;
                                          &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;Task_Act2&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                          },&#xd;
                                          &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;Policy0&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;Act&quot;,&#xd;
                                              &quot;localName&quot;: &quot;Task_Act2_DIRECT_Act_NULL&quot;&#xd;
                                            },&#xd;
                                            &quot;outputType&quot;: &quot;DIRECT&quot;,&#xd;
                                            &quot;output&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;Policy0&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;Act&quot;,&#xd;
                                              &quot;localName&quot;: &quot;Act_NULL&quot;&#xd;
                                            }&#xd;
                                          }&#xd;
                                        },&#xd;
                                        {&#xd;
                                          &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;Task_Act3&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                          },&#xd;
                                          &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;Policy0&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;Act&quot;,&#xd;
                                              &quot;localName&quot;: &quot;Task_Act3_DIRECT_Act_NULL&quot;&#xd;
                                            },&#xd;
                                            &quot;outputType&quot;: &quot;DIRECT&quot;,&#xd;
                                            &quot;output&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;Policy0&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;Act&quot;,&#xd;
                                              &quot;localName&quot;: &quot;Act_NULL&quot;&#xd;
                                            }&#xd;
                                          }&#xd;
                                        }&#xd;
                                      ]&#xd;
                                    }&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;Decide&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;stateKey&quot;: {&#xd;
                                      &quot;parentKeyName&quot;: &quot;Policy0&quot;,&#xd;
                                      &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                      &quot;parentLocalName&quot;: &quot;NULL&quot;,&#xd;
                                      &quot;localName&quot;: &quot;Decide&quot;&#xd;
                                    },&#xd;
                                    &quot;trigger&quot;: {&#xd;
                                      &quot;name&quot;: &quot;Event0002&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;stateOutputs&quot;: {&#xd;
                                      &quot;entry&quot;: [&#xd;
                                        {&#xd;
                                          &quot;key&quot;: &quot;Decide_Act&quot;,&#xd;
                                          &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;Policy0&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;Decide&quot;,&#xd;
                                              &quot;localName&quot;: &quot;Decide_Act&quot;&#xd;
                                            },&#xd;
                                            &quot;outgoingEvent&quot;: {&#xd;
                                              &quot;name&quot;: &quot;Event0003&quot;,&#xd;
                                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                            },&#xd;
                                            &quot;nextState&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;Policy0&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;NULL&quot;,&#xd;
                                              &quot;localName&quot;: &quot;Act&quot;&#xd;
                                            }&#xd;
                                          }&#xd;
                                        }&#xd;
                                      ]&#xd;
                                    },&#xd;
                                    &quot;contextAlbumReference&quot;: [&#xd;
                                      {&#xd;
                                        &quot;name&quot;: &quot;ExternalContextAlbum&quot;,&#xd;
                                        &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                      },&#xd;
                                      {&#xd;
                                        &quot;name&quot;: &quot;GlobalContextAlbum&quot;,&#xd;
                                        &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                      },&#xd;
                                      {&#xd;
                                        &quot;name&quot;: &quot;Policy0ContextAlbum&quot;,&#xd;
                                        &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                      }&#xd;
                                    ],&#xd;
                                    &quot;taskSelectionLogic&quot;: {&#xd;
                                      &quot;key&quot;: &quot;TaskSelectionLigic&quot;,&#xd;
                                      &quot;logicFlavour&quot;: &quot;JAVASCRIPT&quot;,&#xd;
                                      &quot;logic&quot;: &quot;/*\n * ============LICENSE_START=======================================================\n *  Copyright (C) 2016-2018 Ericsson. All rights reserved.\n * ================================================================================\n * Licensed under the Apache License, Version 2.0 (the \&quot;License\&quot;);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *      http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \&quot;AS IS\&quot; BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * \n * SPDX-License-Identifier: Apache-2.0\n * ============LICENSE_END=========================================================\n */\n\nexecutor.logger.debug(executor.subject.id);\nvar gc = executor.getContextAlbum(\&quot;GlobalContextAlbum\&quot;);\nexecutor.logger.debug(gc.name);\nexecutor.subject.defaultTaskKey.copyTo(executor.selectedTask)\n\ntrue;&quot;&#xd;
                                    },&#xd;
                                    &quot;stateFinalizerLogicMap&quot;: {&#xd;
                                      &quot;entry&quot;: []&#xd;
                                    },&#xd;
                                    &quot;defaultTask&quot;: {&#xd;
                                      &quot;name&quot;: &quot;Task_Decide3&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;taskReferences&quot;: {&#xd;
                                      &quot;entry&quot;: [&#xd;
                                        {&#xd;
                                          &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;Task_Decide0&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                          },&#xd;
                                          &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;Policy0&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;Decide&quot;,&#xd;
                                              &quot;localName&quot;: &quot;Task_Decide0_DIRECT_Decide_Act&quot;&#xd;
                                            },&#xd;
                                            &quot;outputType&quot;: &quot;DIRECT&quot;,&#xd;
                                            &quot;output&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;Policy0&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;Decide&quot;,&#xd;
                                              &quot;localName&quot;: &quot;Decide_Act&quot;&#xd;
                                            }&#xd;
                                          }&#xd;
                                        },&#xd;
                                        {&#xd;
                                          &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;Task_Decide1&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                          },&#xd;
                                          &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;Policy0&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;Decide&quot;,&#xd;
                                              &quot;localName&quot;: &quot;Task_Decide1_DIRECT_Decide_Act&quot;&#xd;
                                            },&#xd;
                                            &quot;outputType&quot;: &quot;DIRECT&quot;,&#xd;
                                            &quot;output&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;Policy0&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;Decide&quot;,&#xd;
                                              &quot;localName&quot;: &quot;Decide_Act&quot;&#xd;
                                            }&#xd;
                                          }&#xd;
                                        },&#xd;
                                        {&#xd;
                                          &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;Task_Decide2&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                          },&#xd;
                                          &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;Policy0&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;Decide&quot;,&#xd;
                                              &quot;localName&quot;: &quot;Task_Decide2_DIRECT_Decide_Act&quot;&#xd;
                                            },&#xd;
                                            &quot;outputType&quot;: &quot;DIRECT&quot;,&#xd;
                                            &quot;output&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;Policy0&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;Decide&quot;,&#xd;
                                              &quot;localName&quot;: &quot;Decide_Act&quot;&#xd;
                                            }&#xd;
                                          }&#xd;
                                        },&#xd;
                                        {&#xd;
                                          &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;Task_Decide3&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                          },&#xd;
                                          &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;Policy0&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;Decide&quot;,&#xd;
                                              &quot;localName&quot;: &quot;Task_Decide3_DIRECT_Decide_Act&quot;&#xd;
                                            },&#xd;
                                            &quot;outputType&quot;: &quot;DIRECT&quot;,&#xd;
                                            &quot;output&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;Policy0&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;Decide&quot;,&#xd;
                                              &quot;localName&quot;: &quot;Decide_Act&quot;&#xd;
                                            }&#xd;
                                          }&#xd;
                                        }&#xd;
                                      ]&#xd;
                                    }&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;Establish&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;stateKey&quot;: {&#xd;
                                      &quot;parentKeyName&quot;: &quot;Policy0&quot;,&#xd;
                                      &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                      &quot;parentLocalName&quot;: &quot;NULL&quot;,&#xd;
                                      &quot;localName&quot;: &quot;Establish&quot;&#xd;
                                    },&#xd;
                                    &quot;trigger&quot;: {&#xd;
                                      &quot;name&quot;: &quot;Event0001&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;stateOutputs&quot;: {&#xd;
                                      &quot;entry&quot;: [&#xd;
                                        {&#xd;
                                          &quot;key&quot;: &quot;Establish_Decide&quot;,&#xd;
                                          &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;Policy0&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;Establish&quot;,&#xd;
                                              &quot;localName&quot;: &quot;Establish_Decide&quot;&#xd;
                                            },&#xd;
                                            &quot;outgoingEvent&quot;: {&#xd;
                                              &quot;name&quot;: &quot;Event0002&quot;,&#xd;
                                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                            },&#xd;
                                            &quot;nextState&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;Policy0&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;NULL&quot;,&#xd;
                                              &quot;localName&quot;: &quot;Decide&quot;&#xd;
                                            }&#xd;
                                          }&#xd;
                                        }&#xd;
                                      ]&#xd;
                                    },&#xd;
                                    &quot;contextAlbumReference&quot;: [&#xd;
                                      {&#xd;
                                        &quot;name&quot;: &quot;ExternalContextAlbum&quot;,&#xd;
                                        &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                      },&#xd;
                                      {&#xd;
                                        &quot;name&quot;: &quot;GlobalContextAlbum&quot;,&#xd;
                                        &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                      },&#xd;
                                      {&#xd;
                                        &quot;name&quot;: &quot;Policy1ContextAlbum&quot;,&#xd;
                                        &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                      }&#xd;
                                    ],&#xd;
                                    &quot;taskSelectionLogic&quot;: {&#xd;
                                      &quot;key&quot;: &quot;TaskSelectionLigic&quot;,&#xd;
                                      &quot;logicFlavour&quot;: &quot;JAVASCRIPT&quot;,&#xd;
                                      &quot;logic&quot;: &quot;/*\n * ============LICENSE_START=======================================================\n *  Copyright (C) 2016-2018 Ericsson. All rights reserved.\n * ================================================================================\n * Licensed under the Apache License, Version 2.0 (the \&quot;License\&quot;);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *      http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \&quot;AS IS\&quot; BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * \n * SPDX-License-Identifier: Apache-2.0\n * ============LICENSE_END=========================================================\n */\n\nexecutor.logger.debug(executor.subject.id);\nvar gc = executor.getContextAlbum(\&quot;GlobalContextAlbum\&quot;);\nexecutor.logger.debug(gc.name);\nexecutor.subject.defaultTaskKey.copyTo(executor.selectedTask)\n\ntrue;&quot;&#xd;
                                    },&#xd;
                                    &quot;stateFinalizerLogicMap&quot;: {&#xd;
                                      &quot;entry&quot;: []&#xd;
                                    },&#xd;
                                    &quot;defaultTask&quot;: {&#xd;
                                      &quot;name&quot;: &quot;Task_Establish2&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;taskReferences&quot;: {&#xd;
                                      &quot;entry&quot;: [&#xd;
                                        {&#xd;
                                          &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;Task_Establish0&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                          },&#xd;
                                          &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;Policy0&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;Establish&quot;,&#xd;
                                              &quot;localName&quot;: &quot;Task_Establish0_DIRECT_Establish_Decide&quot;&#xd;
                                            },&#xd;
                                            &quot;outputType&quot;: &quot;DIRECT&quot;,&#xd;
                                            &quot;output&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;Policy0&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;Establish&quot;,&#xd;
                                              &quot;localName&quot;: &quot;Establish_Decide&quot;&#xd;
                                            }&#xd;
                                          }&#xd;
                                        },&#xd;
                                        {&#xd;
                                          &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;Task_Establish1&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                          },&#xd;
                                          &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;Policy0&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;Establish&quot;,&#xd;
                                              &quot;localName&quot;: &quot;Task_Establish1_DIRECT_Establish_Decide&quot;&#xd;
                                            },&#xd;
                                            &quot;outputType&quot;: &quot;DIRECT&quot;,&#xd;
                                            &quot;output&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;Policy0&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;Establish&quot;,&#xd;
                                              &quot;localName&quot;: &quot;Establish_Decide&quot;&#xd;
                                            }&#xd;
                                          }&#xd;
                                        },&#xd;
                                        {&#xd;
                                          &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;Task_Establish2&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                          },&#xd;
                                          &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;Policy0&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;Establish&quot;,&#xd;
                                              &quot;localName&quot;: &quot;Task_Establish2_DIRECT_Establish_Decide&quot;&#xd;
                                            },&#xd;
                                            &quot;outputType&quot;: &quot;DIRECT&quot;,&#xd;
                                            &quot;output&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;Policy0&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;Establish&quot;,&#xd;
                                              &quot;localName&quot;: &quot;Establish_Decide&quot;&#xd;
                                            }&#xd;
                                          }&#xd;
                                        },&#xd;
                                        {&#xd;
                                          &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;Task_Establish3&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                          },&#xd;
                                          &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;Policy0&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;Establish&quot;,&#xd;
                                              &quot;localName&quot;: &quot;Task_Establish3_DIRECT_Establish_Decide&quot;&#xd;
                                            },&#xd;
                                            &quot;outputType&quot;: &quot;DIRECT&quot;,&#xd;
                                            &quot;output&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;Policy0&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;Establish&quot;,&#xd;
                                              &quot;localName&quot;: &quot;Establish_Decide&quot;&#xd;
                                            }&#xd;
                                          }&#xd;
                                        }&#xd;
                                      ]&#xd;
                                    }&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;Match&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;stateKey&quot;: {&#xd;
                                      &quot;parentKeyName&quot;: &quot;Policy0&quot;,&#xd;
                                      &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                      &quot;parentLocalName&quot;: &quot;NULL&quot;,&#xd;
                                      &quot;localName&quot;: &quot;Match&quot;&#xd;
                                    },&#xd;
                                    &quot;trigger&quot;: {&#xd;
                                      &quot;name&quot;: &quot;Event0000&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;stateOutputs&quot;: {&#xd;
                                      &quot;entry&quot;: [&#xd;
                                        {&#xd;
                                          &quot;key&quot;: &quot;Match_Establish&quot;,&#xd;
                                          &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;Policy0&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;Match&quot;,&#xd;
                                              &quot;localName&quot;: &quot;Match_Establish&quot;&#xd;
                                            },&#xd;
                                            &quot;outgoingEvent&quot;: {&#xd;
                                              &quot;name&quot;: &quot;Event0001&quot;,&#xd;
                                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                            },&#xd;
                                            &quot;nextState&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;Policy0&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;NULL&quot;,&#xd;
                                              &quot;localName&quot;: &quot;Establish&quot;&#xd;
                                            }&#xd;
                                          }&#xd;
                                        }&#xd;
                                      ]&#xd;
                                    },&#xd;
                                    &quot;contextAlbumReference&quot;: [&#xd;
                                      {&#xd;
                                        &quot;name&quot;: &quot;GlobalContextAlbum&quot;,&#xd;
                                        &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                      },&#xd;
                                      {&#xd;
                                        &quot;name&quot;: &quot;Policy0ContextAlbum&quot;,&#xd;
                                        &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                      }&#xd;
                                    ],&#xd;
                                    &quot;taskSelectionLogic&quot;: {&#xd;
                                      &quot;key&quot;: &quot;TaskSelectionLigic&quot;,&#xd;
                                      &quot;logicFlavour&quot;: &quot;JAVASCRIPT&quot;,&#xd;
                                      &quot;logic&quot;: &quot;/*\n * ============LICENSE_START=======================================================\n *  Copyright (C) 2016-2018 Ericsson. All rights reserved.\n * ================================================================================\n * Licensed under the Apache License, Version 2.0 (the \&quot;License\&quot;);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *      http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \&quot;AS IS\&quot; BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * \n * SPDX-License-Identifier: Apache-2.0\n * ============LICENSE_END=========================================================\n */\n\nexecutor.logger.debug(executor.subject.id);\nvar gc = executor.getContextAlbum(\&quot;GlobalContextAlbum\&quot;);\nexecutor.logger.debug(gc.name);\nexecutor.subject.defaultTaskKey.copyTo(executor.selectedTask)\n\ntrue;&quot;&#xd;
                                    },&#xd;
                                    &quot;stateFinalizerLogicMap&quot;: {&#xd;
                                      &quot;entry&quot;: []&#xd;
                                    },&#xd;
                                    &quot;defaultTask&quot;: {&#xd;
                                      &quot;name&quot;: &quot;Task_Match0&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;taskReferences&quot;: {&#xd;
                                      &quot;entry&quot;: [&#xd;
                                        {&#xd;
                                          &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;Task_Match0&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                          },&#xd;
                                          &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;Policy0&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;Match&quot;,&#xd;
                                              &quot;localName&quot;: &quot;Task_Match0_DIRECT_Match_Establish&quot;&#xd;
                                            },&#xd;
                                            &quot;outputType&quot;: &quot;DIRECT&quot;,&#xd;
                                            &quot;output&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;Policy0&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;Match&quot;,&#xd;
                                              &quot;localName&quot;: &quot;Match_Establish&quot;&#xd;
                                            }&#xd;
                                          }&#xd;
                                        },&#xd;
                                        {&#xd;
                                          &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;Task_Match1&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                          },&#xd;
                                          &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;Policy0&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;Match&quot;,&#xd;
                                              &quot;localName&quot;: &quot;Task_Match1_DIRECT_Match_Establish&quot;&#xd;
                                            },&#xd;
                                            &quot;outputType&quot;: &quot;DIRECT&quot;,&#xd;
                                            &quot;output&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;Policy0&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;Match&quot;,&#xd;
                                              &quot;localName&quot;: &quot;Match_Establish&quot;&#xd;
                                            }&#xd;
                                          }&#xd;
                                        },&#xd;
                                        {&#xd;
                                          &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;Task_Match2&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                          },&#xd;
                                          &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;Policy0&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;Match&quot;,&#xd;
                                              &quot;localName&quot;: &quot;Task_Match2_DIRECT_Match_Establish&quot;&#xd;
                                            },&#xd;
                                            &quot;outputType&quot;: &quot;DIRECT&quot;,&#xd;
                                            &quot;output&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;Policy0&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;Match&quot;,&#xd;
                                              &quot;localName&quot;: &quot;Match_Establish&quot;&#xd;
                                            }&#xd;
                                          }&#xd;
                                        },&#xd;
                                        {&#xd;
                                          &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;Task_Match3&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                          },&#xd;
                                          &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;Policy0&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;Match&quot;,&#xd;
                                              &quot;localName&quot;: &quot;Task_Match3_DIRECT_Match_Establish&quot;&#xd;
                                            },&#xd;
                                            &quot;outputType&quot;: &quot;DIRECT&quot;,&#xd;
                                            &quot;output&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;Policy0&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;Match&quot;,&#xd;
                                              &quot;localName&quot;: &quot;Match_Establish&quot;&#xd;
                                            }&#xd;
                                          }&#xd;
                                        }&#xd;
                                      ]&#xd;
                                    }&#xd;
                                  }&#xd;
                                }&#xd;
                              ]&#xd;
                            },&#xd;
                            &quot;firstState&quot;: &quot;Match&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;Policy1&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;policyKey&quot;: {&#xd;
                              &quot;name&quot;: &quot;Policy1&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;template&quot;: &quot;MEDA&quot;,&#xd;
                            &quot;state&quot;: {&#xd;
                              &quot;entry&quot;: [&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;Act&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;stateKey&quot;: {&#xd;
                                      &quot;parentKeyName&quot;: &quot;Policy1&quot;,&#xd;
                                      &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                      &quot;parentLocalName&quot;: &quot;NULL&quot;,&#xd;
                                      &quot;localName&quot;: &quot;Act&quot;&#xd;
                                    },&#xd;
                                    &quot;trigger&quot;: {&#xd;
                                      &quot;name&quot;: &quot;Event0103&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;stateOutputs&quot;: {&#xd;
                                      &quot;entry&quot;: [&#xd;
                                        {&#xd;
                                          &quot;key&quot;: &quot;Act_NULL&quot;,&#xd;
                                          &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;Policy1&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;Act&quot;,&#xd;
                                              &quot;localName&quot;: &quot;Act_NULL&quot;&#xd;
                                            },&#xd;
                                            &quot;outgoingEvent&quot;: {&#xd;
                                              &quot;name&quot;: &quot;Event0104&quot;,&#xd;
                                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                            },&#xd;
                                            &quot;nextState&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;NULL&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.0&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;NULL&quot;,&#xd;
                                              &quot;localName&quot;: &quot;NULL&quot;&#xd;
                                            }&#xd;
                                          }&#xd;
                                        }&#xd;
                                      ]&#xd;
                                    },&#xd;
                                    &quot;contextAlbumReference&quot;: [&#xd;
                                      {&#xd;
                                        &quot;name&quot;: &quot;GlobalContextAlbum&quot;,&#xd;
                                        &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                      }&#xd;
                                    ],&#xd;
                                    &quot;taskSelectionLogic&quot;: {&#xd;
                                      &quot;key&quot;: &quot;TaskSelectionLigic&quot;,&#xd;
                                      &quot;logicFlavour&quot;: &quot;JAVASCRIPT&quot;,&#xd;
                                      &quot;logic&quot;: &quot;/*\n * ============LICENSE_START=======================================================\n *  Copyright (C) 2016-2018 Ericsson. All rights reserved.\n * ================================================================================\n * Licensed under the Apache License, Version 2.0 (the \&quot;License\&quot;);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *      http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \&quot;AS IS\&quot; BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * \n * SPDX-License-Identifier: Apache-2.0\n * ============LICENSE_END=========================================================\n */\n\nexecutor.logger.debug(executor.subject.id);\nvar gc = executor.getContextAlbum(\&quot;GlobalContextAlbum\&quot;);\nexecutor.logger.debug(gc.name);\nexecutor.subject.defaultTaskKey.copyTo(executor.selectedTask)\n\ntrue;&quot;&#xd;
                                    },&#xd;
                                    &quot;stateFinalizerLogicMap&quot;: {&#xd;
                                      &quot;entry&quot;: []&#xd;
                                    },&#xd;
                                    &quot;defaultTask&quot;: {&#xd;
                                      &quot;name&quot;: &quot;Task_Act0&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;taskReferences&quot;: {&#xd;
                                      &quot;entry&quot;: [&#xd;
                                        {&#xd;
                                          &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;Task_Act0&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                          },&#xd;
                                          &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;Policy1&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;Act&quot;,&#xd;
                                              &quot;localName&quot;: &quot;Task_Act0_DIRECT_Act_NULL&quot;&#xd;
                                            },&#xd;
                                            &quot;outputType&quot;: &quot;DIRECT&quot;,&#xd;
                                            &quot;output&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;Policy1&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;Act&quot;,&#xd;
                                              &quot;localName&quot;: &quot;Act_NULL&quot;&#xd;
                                            }&#xd;
                                          }&#xd;
                                        },&#xd;
                                        {&#xd;
                                          &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;Task_Act1&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                          },&#xd;
                                          &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;Policy1&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;Act&quot;,&#xd;
                                              &quot;localName&quot;: &quot;Task_Act1_DIRECT_Act_NULL&quot;&#xd;
                                            },&#xd;
                                            &quot;outputType&quot;: &quot;DIRECT&quot;,&#xd;
                                            &quot;output&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;Policy1&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;Act&quot;,&#xd;
                                              &quot;localName&quot;: &quot;Act_NULL&quot;&#xd;
                                            }&#xd;
                                          }&#xd;
                                        },&#xd;
                                        {&#xd;
                                          &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;Task_Act2&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                          },&#xd;
                                          &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;Policy1&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;Act&quot;,&#xd;
                                              &quot;localName&quot;: &quot;Task_Act2_DIRECT_Act_NULL&quot;&#xd;
                                            },&#xd;
                                            &quot;outputType&quot;: &quot;DIRECT&quot;,&#xd;
                                            &quot;output&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;Policy1&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;Act&quot;,&#xd;
                                              &quot;localName&quot;: &quot;Act_NULL&quot;&#xd;
                                            }&#xd;
                                          }&#xd;
                                        },&#xd;
                                        {&#xd;
                                          &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;Task_Act3&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                          },&#xd;
                                          &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;Policy1&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;Act&quot;,&#xd;
                                              &quot;localName&quot;: &quot;Task_Act3_DIRECT_Act_NULL&quot;&#xd;
                                            },&#xd;
                                            &quot;outputType&quot;: &quot;DIRECT&quot;,&#xd;
                                            &quot;output&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;Policy1&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;Act&quot;,&#xd;
                                              &quot;localName&quot;: &quot;Act_NULL&quot;&#xd;
                                            }&#xd;
                                          }&#xd;
                                        }&#xd;
                                      ]&#xd;
                                    }&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;Decide&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;stateKey&quot;: {&#xd;
                                      &quot;parentKeyName&quot;: &quot;Policy1&quot;,&#xd;
                                      &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                      &quot;parentLocalName&quot;: &quot;NULL&quot;,&#xd;
                                      &quot;localName&quot;: &quot;Decide&quot;&#xd;
                                    },&#xd;
                                    &quot;trigger&quot;: {&#xd;
                                      &quot;name&quot;: &quot;Event0102&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;stateOutputs&quot;: {&#xd;
                                      &quot;entry&quot;: [&#xd;
                                        {&#xd;
                                          &quot;key&quot;: &quot;Decide_Act&quot;,&#xd;
                                          &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;Policy1&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;Decide&quot;,&#xd;
                                              &quot;localName&quot;: &quot;Decide_Act&quot;&#xd;
                                            },&#xd;
                                            &quot;outgoingEvent&quot;: {&#xd;
                                              &quot;name&quot;: &quot;Event0103&quot;,&#xd;
                                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                            },&#xd;
                                            &quot;nextState&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;Policy1&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;NULL&quot;,&#xd;
                                              &quot;localName&quot;: &quot;Act&quot;&#xd;
                                            }&#xd;
                                          }&#xd;
                                        }&#xd;
                                      ]&#xd;
                                    },&#xd;
                                    &quot;contextAlbumReference&quot;: [&#xd;
                                      {&#xd;
                                        &quot;name&quot;: &quot;ExternalContextAlbum&quot;,&#xd;
                                        &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                      },&#xd;
                                      {&#xd;
                                        &quot;name&quot;: &quot;GlobalContextAlbum&quot;,&#xd;
                                        &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                      },&#xd;
                                      {&#xd;
                                        &quot;name&quot;: &quot;Policy1ContextAlbum&quot;,&#xd;
                                        &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                      }&#xd;
                                    ],&#xd;
                                    &quot;taskSelectionLogic&quot;: {&#xd;
                                      &quot;key&quot;: &quot;TaskSelectionLigic&quot;,&#xd;
                                      &quot;logicFlavour&quot;: &quot;JAVASCRIPT&quot;,&#xd;
                                      &quot;logic&quot;: &quot;/*\n * ============LICENSE_START=======================================================\n *  Copyright (C) 2016-2018 Ericsson. All rights reserved.\n * ================================================================================\n * Licensed under the Apache License, Version 2.0 (the \&quot;License\&quot;);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *      http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \&quot;AS IS\&quot; BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * \n * SPDX-License-Identifier: Apache-2.0\n * ============LICENSE_END=========================================================\n */\n\nexecutor.logger.debug(executor.subject.id);\nvar gc = executor.getContextAlbum(\&quot;GlobalContextAlbum\&quot;);\nexecutor.logger.debug(gc.name);\nexecutor.subject.defaultTaskKey.copyTo(executor.selectedTask)\n\ntrue;&quot;&#xd;
                                    },&#xd;
                                    &quot;stateFinalizerLogicMap&quot;: {&#xd;
                                      &quot;entry&quot;: []&#xd;
                                    },&#xd;
                                    &quot;defaultTask&quot;: {&#xd;
                                      &quot;name&quot;: &quot;Task_Decide3&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;taskReferences&quot;: {&#xd;
                                      &quot;entry&quot;: [&#xd;
                                        {&#xd;
                                          &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;Task_Decide0&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                          },&#xd;
                                          &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;Policy1&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;Decide&quot;,&#xd;
                                              &quot;localName&quot;: &quot;Task_Decide0_DIRECT_Decide_Act&quot;&#xd;
                                            },&#xd;
                                            &quot;outputType&quot;: &quot;DIRECT&quot;,&#xd;
                                            &quot;output&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;Policy1&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;Decide&quot;,&#xd;
                                              &quot;localName&quot;: &quot;Decide_Act&quot;&#xd;
                                            }&#xd;
                                          }&#xd;
                                        },&#xd;
                                        {&#xd;
                                          &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;Task_Decide1&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                          },&#xd;
                                          &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;Policy1&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;Decide&quot;,&#xd;
                                              &quot;localName&quot;: &quot;Task_Decide1_DIRECT_Decide_Act&quot;&#xd;
                                            },&#xd;
                                            &quot;outputType&quot;: &quot;DIRECT&quot;,&#xd;
                                            &quot;output&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;Policy1&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;Decide&quot;,&#xd;
                                              &quot;localName&quot;: &quot;Decide_Act&quot;&#xd;
                                            }&#xd;
                                          }&#xd;
                                        },&#xd;
                                        {&#xd;
                                          &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;Task_Decide2&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                          },&#xd;
                                          &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;Policy1&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;Decide&quot;,&#xd;
                                              &quot;localName&quot;: &quot;Task_Decide2_DIRECT_Decide_Act&quot;&#xd;
                                            },&#xd;
                                            &quot;outputType&quot;: &quot;DIRECT&quot;,&#xd;
                                            &quot;output&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;Policy1&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;Decide&quot;,&#xd;
                                              &quot;localName&quot;: &quot;Decide_Act&quot;&#xd;
                                            }&#xd;
                                          }&#xd;
                                        },&#xd;
                                        {&#xd;
                                          &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;Task_Decide3&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                          },&#xd;
                                          &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;Policy1&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;Decide&quot;,&#xd;
                                              &quot;localName&quot;: &quot;Task_Decide3_DIRECT_Decide_Act&quot;&#xd;
                                            },&#xd;
                                            &quot;outputType&quot;: &quot;DIRECT&quot;,&#xd;
                                            &quot;output&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;Policy1&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;Decide&quot;,&#xd;
                                              &quot;localName&quot;: &quot;Decide_Act&quot;&#xd;
                                            }&#xd;
                                          }&#xd;
                                        }&#xd;
                                      ]&#xd;
                                    }&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;Establish&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;stateKey&quot;: {&#xd;
                                      &quot;parentKeyName&quot;: &quot;Policy1&quot;,&#xd;
                                      &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                      &quot;parentLocalName&quot;: &quot;NULL&quot;,&#xd;
                                      &quot;localName&quot;: &quot;Establish&quot;&#xd;
                                    },&#xd;
                                    &quot;trigger&quot;: {&#xd;
                                      &quot;name&quot;: &quot;Event0101&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;stateOutputs&quot;: {&#xd;
                                      &quot;entry&quot;: [&#xd;
                                        {&#xd;
                                          &quot;key&quot;: &quot;Establish_Decide&quot;,&#xd;
                                          &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;Policy1&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;Establish&quot;,&#xd;
                                              &quot;localName&quot;: &quot;Establish_Decide&quot;&#xd;
                                            },&#xd;
                                            &quot;outgoingEvent&quot;: {&#xd;
                                              &quot;name&quot;: &quot;Event0102&quot;,&#xd;
                                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                            },&#xd;
                                            &quot;nextState&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;Policy1&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;NULL&quot;,&#xd;
                                              &quot;localName&quot;: &quot;Decide&quot;&#xd;
                                            }&#xd;
                                          }&#xd;
                                        }&#xd;
                                      ]&#xd;
                                    },&#xd;
                                    &quot;contextAlbumReference&quot;: [&#xd;
                                      {&#xd;
                                        &quot;name&quot;: &quot;ExternalContextAlbum&quot;,&#xd;
                                        &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                      },&#xd;
                                      {&#xd;
                                        &quot;name&quot;: &quot;GlobalContextAlbum&quot;,&#xd;
                                        &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                      },&#xd;
                                      {&#xd;
                                        &quot;name&quot;: &quot;Policy1ContextAlbum&quot;,&#xd;
                                        &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                      }&#xd;
                                    ],&#xd;
                                    &quot;taskSelectionLogic&quot;: {&#xd;
                                      &quot;key&quot;: &quot;TaskSelectionLigic&quot;,&#xd;
                                      &quot;logicFlavour&quot;: &quot;JAVASCRIPT&quot;,&#xd;
                                      &quot;logic&quot;: &quot;/*\n * ============LICENSE_START=======================================================\n *  Copyright (C) 2016-2018 Ericsson. All rights reserved.\n * ================================================================================\n * Licensed under the Apache License, Version 2.0 (the \&quot;License\&quot;);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *      http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \&quot;AS IS\&quot; BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * \n * SPDX-License-Identifier: Apache-2.0\n * ============LICENSE_END=========================================================\n */\n\nexecutor.logger.debug(executor.subject.id);\nvar gc = executor.getContextAlbum(\&quot;GlobalContextAlbum\&quot;);\nexecutor.logger.debug(gc.name);\nexecutor.subject.defaultTaskKey.copyTo(executor.selectedTask)\n\ntrue;&quot;&#xd;
                                    },&#xd;
                                    &quot;stateFinalizerLogicMap&quot;: {&#xd;
                                      &quot;entry&quot;: []&#xd;
                                    },&#xd;
                                    &quot;defaultTask&quot;: {&#xd;
                                      &quot;name&quot;: &quot;Task_Establish1&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;taskReferences&quot;: {&#xd;
                                      &quot;entry&quot;: [&#xd;
                                        {&#xd;
                                          &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;Task_Establish0&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                          },&#xd;
                                          &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;Policy1&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;Establish&quot;,&#xd;
                                              &quot;localName&quot;: &quot;Task_Establish0_DIRECT_Establish_Decide&quot;&#xd;
                                            },&#xd;
                                            &quot;outputType&quot;: &quot;DIRECT&quot;,&#xd;
                                            &quot;output&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;Policy1&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;Establish&quot;,&#xd;
                                              &quot;localName&quot;: &quot;Establish_Decide&quot;&#xd;
                                            }&#xd;
                                          }&#xd;
                                        },&#xd;
                                        {&#xd;
                                          &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;Task_Establish1&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                          },&#xd;
                                          &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;Policy1&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;Establish&quot;,&#xd;
                                              &quot;localName&quot;: &quot;Task_Establish1_DIRECT_Establish_Decide&quot;&#xd;
                                            },&#xd;
                                            &quot;outputType&quot;: &quot;DIRECT&quot;,&#xd;
                                            &quot;output&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;Policy1&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;Establish&quot;,&#xd;
                                              &quot;localName&quot;: &quot;Establish_Decide&quot;&#xd;
                                            }&#xd;
                                          }&#xd;
                                        },&#xd;
                                        {&#xd;
                                          &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;Task_Establish2&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                          },&#xd;
                                          &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;Policy1&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;Establish&quot;,&#xd;
                                              &quot;localName&quot;: &quot;Task_Establish2_DIRECT_Establish_Decide&quot;&#xd;
                                            },&#xd;
                                            &quot;outputType&quot;: &quot;DIRECT&quot;,&#xd;
                                            &quot;output&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;Policy1&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;Establish&quot;,&#xd;
                                              &quot;localName&quot;: &quot;Establish_Decide&quot;&#xd;
                                            }&#xd;
                                          }&#xd;
                                        },&#xd;
                                        {&#xd;
                                          &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;Task_Establish3&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                          },&#xd;
                                          &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;Policy1&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;Establish&quot;,&#xd;
                                              &quot;localName&quot;: &quot;Task_Establish3_DIRECT_Establish_Decide&quot;&#xd;
                                            },&#xd;
                                            &quot;outputType&quot;: &quot;DIRECT&quot;,&#xd;
                                            &quot;output&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;Policy1&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;Establish&quot;,&#xd;
                                              &quot;localName&quot;: &quot;Establish_Decide&quot;&#xd;
                                            }&#xd;
                                          }&#xd;
                                        }&#xd;
                                      ]&#xd;
                                    }&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;Match&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;stateKey&quot;: {&#xd;
                                      &quot;parentKeyName&quot;: &quot;Policy1&quot;,&#xd;
                                      &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                      &quot;parentLocalName&quot;: &quot;NULL&quot;,&#xd;
                                      &quot;localName&quot;: &quot;Match&quot;&#xd;
                                    },&#xd;
                                    &quot;trigger&quot;: {&#xd;
                                      &quot;name&quot;: &quot;Event0100&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;stateOutputs&quot;: {&#xd;
                                      &quot;entry&quot;: [&#xd;
                                        {&#xd;
                                          &quot;key&quot;: &quot;Match_Establish&quot;,&#xd;
                                          &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;Policy1&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;Match&quot;,&#xd;
                                              &quot;localName&quot;: &quot;Match_Establish&quot;&#xd;
                                            },&#xd;
                                            &quot;outgoingEvent&quot;: {&#xd;
                                              &quot;name&quot;: &quot;Event0101&quot;,&#xd;
                                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                            },&#xd;
                                            &quot;nextState&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;Policy1&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;NULL&quot;,&#xd;
                                              &quot;localName&quot;: &quot;Establish&quot;&#xd;
                                            }&#xd;
                                          }&#xd;
                                        }&#xd;
                                      ]&#xd;
                                    },&#xd;
                                    &quot;contextAlbumReference&quot;: [&#xd;
                                      {&#xd;
                                        &quot;name&quot;: &quot;ExternalContextAlbum&quot;,&#xd;
                                        &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                      },&#xd;
                                      {&#xd;
                                        &quot;name&quot;: &quot;GlobalContextAlbum&quot;,&#xd;
                                        &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                      },&#xd;
                                      {&#xd;
                                        &quot;name&quot;: &quot;Policy1ContextAlbum&quot;,&#xd;
                                        &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                      }&#xd;
                                    ],&#xd;
                                    &quot;taskSelectionLogic&quot;: {&#xd;
                                      &quot;key&quot;: &quot;TaskSelectionLigic&quot;,&#xd;
                                      &quot;logicFlavour&quot;: &quot;JAVASCRIPT&quot;,&#xd;
                                      &quot;logic&quot;: &quot;/*\n * ============LICENSE_START=======================================================\n *  Copyright (C) 2016-2018 Ericsson. All rights reserved.\n * ================================================================================\n * Licensed under the Apache License, Version 2.0 (the \&quot;License\&quot;);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *      http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \&quot;AS IS\&quot; BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * \n * SPDX-License-Identifier: Apache-2.0\n * ============LICENSE_END=========================================================\n */\n\nexecutor.logger.debug(executor.subject.id);\nvar gc = executor.getContextAlbum(\&quot;GlobalContextAlbum\&quot;);\nexecutor.logger.debug(gc.name);\nexecutor.subject.defaultTaskKey.copyTo(executor.selectedTask)\n\ntrue;&quot;&#xd;
                                    },&#xd;
                                    &quot;stateFinalizerLogicMap&quot;: {&#xd;
                                      &quot;entry&quot;: []&#xd;
                                    },&#xd;
                                    &quot;defaultTask&quot;: {&#xd;
                                      &quot;name&quot;: &quot;Task_Match3&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;taskReferences&quot;: {&#xd;
                                      &quot;entry&quot;: [&#xd;
                                        {&#xd;
                                          &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;Task_Match0&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                          },&#xd;
                                          &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;Policy1&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;Match&quot;,&#xd;
                                              &quot;localName&quot;: &quot;Task_Match0_DIRECT_Match_Establish&quot;&#xd;
                                            },&#xd;
                                            &quot;outputType&quot;: &quot;DIRECT&quot;,&#xd;
                                            &quot;output&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;Policy1&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;Match&quot;,&#xd;
                                              &quot;localName&quot;: &quot;Match_Establish&quot;&#xd;
                                            }&#xd;
                                          }&#xd;
                                        },&#xd;
                                        {&#xd;
                                          &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;Task_Match1&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                          },&#xd;
                                          &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;Policy1&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;Match&quot;,&#xd;
                                              &quot;localName&quot;: &quot;Task_Match1_DIRECT_Match_Establish&quot;&#xd;
                                            },&#xd;
                                            &quot;outputType&quot;: &quot;DIRECT&quot;,&#xd;
                                            &quot;output&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;Policy1&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;Match&quot;,&#xd;
                                              &quot;localName&quot;: &quot;Match_Establish&quot;&#xd;
                                            }&#xd;
                                          }&#xd;
                                        },&#xd;
                                        {&#xd;
                                          &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;Task_Match2&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                          },&#xd;
                                          &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;Policy1&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;Match&quot;,&#xd;
                                              &quot;localName&quot;: &quot;Task_Match2_DIRECT_Match_Establish&quot;&#xd;
                                            },&#xd;
                                            &quot;outputType&quot;: &quot;DIRECT&quot;,&#xd;
                                            &quot;output&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;Policy1&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;Match&quot;,&#xd;
                                              &quot;localName&quot;: &quot;Match_Establish&quot;&#xd;
                                            }&#xd;
                                          }&#xd;
                                        },&#xd;
                                        {&#xd;
                                          &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;Task_Match3&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                          },&#xd;
                                          &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;Policy1&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;Match&quot;,&#xd;
                                              &quot;localName&quot;: &quot;Task_Match3_DIRECT_Match_Establish&quot;&#xd;
                                            },&#xd;
                                            &quot;outputType&quot;: &quot;DIRECT&quot;,&#xd;
                                            &quot;output&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;Policy1&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;Match&quot;,&#xd;
                                              &quot;localName&quot;: &quot;Match_Establish&quot;&#xd;
                                            }&#xd;
                                          }&#xd;
                                        }&#xd;
                                      ]&#xd;
                                    }&#xd;
                                  }&#xd;
                                }&#xd;
                              ]&#xd;
                            },&#xd;
                            &quot;firstState&quot;: &quot;Match&quot;&#xd;
                          }&#xd;
                        }&#xd;
                      ]&#xd;
                    }&#xd;
                  },&#xd;
                  &quot;tasks&quot;: {&#xd;
                    &quot;key&quot;: {&#xd;
                      &quot;name&quot;: &quot;Tasks&quot;,&#xd;
                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                    },&#xd;
                    &quot;taskMap&quot;: {&#xd;
                      &quot;entry&quot;: [&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;Task_Act0&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;Task_Act0&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;inputFields&quot;: {&#xd;
                              &quot;entry&quot;: [&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestDecideCaseSelected&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestDecideCaseSelected&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestDecideStateTime&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestDecideStateTime&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestEstablishCaseSelected&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestEstablishCaseSelected&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestEstablishStateTime&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestEstablishStateTime&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchCase&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchCase&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchCaseSelected&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchCaseSelected&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchStateTime&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchStateTime&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestSlogan&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestSlogan&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestSlogan&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestTemperature&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestTemperature&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTemperature&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestTimestamp&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestTimestamp&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                }&#xd;
                              ]&#xd;
                            },&#xd;
                            &quot;outputFields&quot;: {&#xd;
                              &quot;entry&quot;: [&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestActCaseSelected&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestActCaseSelected&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestActStateTime&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestActStateTime&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestDecideCaseSelected&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestDecideCaseSelected&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestDecideStateTime&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestDecideStateTime&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestEstablishCaseSelected&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestEstablishCaseSelected&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestEstablishStateTime&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestEstablishStateTime&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchCase&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchCase&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchCaseSelected&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchCaseSelected&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchStateTime&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchStateTime&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestSlogan&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestSlogan&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestSlogan&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestTemperature&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestTemperature&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTemperature&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestTimestamp&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestTimestamp&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                }&#xd;
                              ]&#xd;
                            },&#xd;
                            &quot;taskParameters&quot;: {&#xd;
                              &quot;entry&quot;: [&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;Parameter0&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: {&#xd;
                                      &quot;parentKeyName&quot;: &quot;Task_Act0&quot;,&#xd;
                                      &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                      &quot;parentLocalName&quot;: &quot;NULL&quot;,&#xd;
                                      &quot;localName&quot;: &quot;Parameter0&quot;&#xd;
                                    },&#xd;
                                    &quot;defaultValue&quot;: &quot;DefaultValue0&quot;&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;Parameter1&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: {&#xd;
                                      &quot;parentKeyName&quot;: &quot;Task_Act0&quot;,&#xd;
                                      &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                      &quot;parentLocalName&quot;: &quot;NULL&quot;,&#xd;
                                      &quot;localName&quot;: &quot;Parameter1&quot;&#xd;
                                    },&#xd;
                                    &quot;defaultValue&quot;: &quot;DefaultValue1&quot;&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;Parameter2&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: {&#xd;
                                      &quot;parentKeyName&quot;: &quot;Task_Act0&quot;,&#xd;
                                      &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                      &quot;parentLocalName&quot;: &quot;NULL&quot;,&#xd;
                                      &quot;localName&quot;: &quot;Parameter2&quot;&#xd;
                                    },&#xd;
                                    &quot;defaultValue&quot;: &quot;DefaultValue2&quot;&#xd;
                                  }&#xd;
                                }&#xd;
                              ]&#xd;
                            },&#xd;
                            &quot;contextAlbumReference&quot;: [&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;ExternalContextAlbum&quot;,&#xd;
                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;GlobalContextAlbum&quot;,&#xd;
                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;Policy0ContextAlbum&quot;,&#xd;
                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;Policy1ContextAlbum&quot;,&#xd;
                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                              }&#xd;
                            ],&#xd;
                            &quot;taskLogic&quot;: {&#xd;
                              &quot;key&quot;: &quot;_TaskLogic&quot;,&#xd;
                              &quot;logicFlavour&quot;: &quot;JAVASCRIPT&quot;,&#xd;
                              &quot;logic&quot;: &quot;/*\n * ============LICENSE_START=======================================================\n *  Copyright (C) 2016-2018 Ericsson. All rights reserved.\n * ================================================================================\n * Licensed under the Apache License, Version 2.0 (the \&quot;License\&quot;);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *      http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \&quot;AS IS\&quot; BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * \n * SPDX-License-Identifier: Apache-2.0\n * ============LICENSE_END=========================================================\n */\n\nexecutor.logger.debug(executor.subject.id);\nvar gc = executor.getContextAlbum(\&quot;GlobalContextAlbum\&quot;);\nexecutor.logger.debug(gc.name);\nexecutor.logger.debug(executor.inFields);\n\nvar caseSelectedType = java.lang.Byte;\nexecutor.outFields.put(\&quot;TestActCaseSelected\&quot;, new caseSelectedType(2));\n\nvar JavaDate = java.util.Date;\ntimeNow = new JavaDate();\nexecutor.outFields.put(\&quot;TestActStateTime\&quot;, timeNow.getTime());\nexecutor.logger.debug(executor.eo);\n\ntrue;&quot;&#xd;
                            }&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;Task_Act1&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;Task_Act1&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;inputFields&quot;: {&#xd;
                              &quot;entry&quot;: [&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestDecideCaseSelected&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestDecideCaseSelected&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestDecideStateTime&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestDecideStateTime&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestEstablishCaseSelected&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestEstablishCaseSelected&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestEstablishStateTime&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestEstablishStateTime&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchCase&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchCase&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchCaseSelected&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchCaseSelected&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchStateTime&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchStateTime&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestSlogan&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestSlogan&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestSlogan&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestTemperature&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestTemperature&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTemperature&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestTimestamp&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestTimestamp&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                }&#xd;
                              ]&#xd;
                            },&#xd;
                            &quot;outputFields&quot;: {&#xd;
                              &quot;entry&quot;: [&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestActCaseSelected&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestActCaseSelected&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestActStateTime&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestActStateTime&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestDecideCaseSelected&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestDecideCaseSelected&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestDecideStateTime&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestDecideStateTime&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestEstablishCaseSelected&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestEstablishCaseSelected&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestEstablishStateTime&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestEstablishStateTime&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchCase&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchCase&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchCaseSelected&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchCaseSelected&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchStateTime&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchStateTime&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestSlogan&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestSlogan&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestSlogan&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestTemperature&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestTemperature&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTemperature&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestTimestamp&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestTimestamp&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                }&#xd;
                              ]&#xd;
                            },&#xd;
                            &quot;taskParameters&quot;: {&#xd;
                              &quot;entry&quot;: [&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;Parameter0&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: {&#xd;
                                      &quot;parentKeyName&quot;: &quot;Task_Act1&quot;,&#xd;
                                      &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                      &quot;parentLocalName&quot;: &quot;NULL&quot;,&#xd;
                                      &quot;localName&quot;: &quot;Parameter0&quot;&#xd;
                                    },&#xd;
                                    &quot;defaultValue&quot;: &quot;DefaultValue0&quot;&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;Parameter1&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: {&#xd;
                                      &quot;parentKeyName&quot;: &quot;Task_Act1&quot;,&#xd;
                                      &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                      &quot;parentLocalName&quot;: &quot;NULL&quot;,&#xd;
                                      &quot;localName&quot;: &quot;Parameter1&quot;&#xd;
                                    },&#xd;
                                    &quot;defaultValue&quot;: &quot;DefaultValue1&quot;&#xd;
                                  }&#xd;
                                }&#xd;
                              ]&#xd;
                            },&#xd;
                            &quot;contextAlbumReference&quot;: [&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;GlobalContextAlbum&quot;,&#xd;
                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;Policy0ContextAlbum&quot;,&#xd;
                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                              }&#xd;
                            ],&#xd;
                            &quot;taskLogic&quot;: {&#xd;
                              &quot;key&quot;: &quot;_TaskLogic&quot;,&#xd;
                              &quot;logicFlavour&quot;: &quot;JAVASCRIPT&quot;,&#xd;
                              &quot;logic&quot;: &quot;/*\n * ============LICENSE_START=======================================================\n *  Copyright (C) 2016-2018 Ericsson. All rights reserved.\n * ================================================================================\n * Licensed under the Apache License, Version 2.0 (the \&quot;License\&quot;);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *      http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \&quot;AS IS\&quot; BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * \n * SPDX-License-Identifier: Apache-2.0\n * ============LICENSE_END=========================================================\n */\n\nexecutor.logger.debug(executor.subject.id);\nvar gc = executor.getContextAlbum(\&quot;GlobalContextAlbum\&quot;);\nexecutor.logger.debug(gc.name);\nexecutor.logger.debug(executor.inFields);\n\nvar caseSelectedType = java.lang.Byte;\nexecutor.outFields.put(\&quot;TestActCaseSelected\&quot;, new caseSelectedType(3));\n\nvar JavaDate = java.util.Date;\ntimeNow = new JavaDate();\nexecutor.outFields.put(\&quot;TestActStateTime\&quot;, timeNow.getTime());\nexecutor.logger.debug(executor.eo);\n\ntrue;&quot;&#xd;
                            }&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;Task_Act2&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;Task_Act2&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;inputFields&quot;: {&#xd;
                              &quot;entry&quot;: [&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestDecideCaseSelected&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestDecideCaseSelected&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestDecideStateTime&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestDecideStateTime&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestEstablishCaseSelected&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestEstablishCaseSelected&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestEstablishStateTime&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestEstablishStateTime&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchCase&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchCase&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchCaseSelected&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchCaseSelected&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchStateTime&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchStateTime&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestSlogan&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestSlogan&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestSlogan&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestTemperature&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestTemperature&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTemperature&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestTimestamp&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestTimestamp&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                }&#xd;
                              ]&#xd;
                            },&#xd;
                            &quot;outputFields&quot;: {&#xd;
                              &quot;entry&quot;: [&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestActCaseSelected&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestActCaseSelected&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestActStateTime&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestActStateTime&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestDecideCaseSelected&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestDecideCaseSelected&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestDecideStateTime&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestDecideStateTime&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestEstablishCaseSelected&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestEstablishCaseSelected&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestEstablishStateTime&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestEstablishStateTime&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchCase&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchCase&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchCaseSelected&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchCaseSelected&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchStateTime&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchStateTime&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestSlogan&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestSlogan&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestSlogan&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestTemperature&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestTemperature&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTemperature&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestTimestamp&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestTimestamp&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                }&#xd;
                              ]&#xd;
                            },&#xd;
                            &quot;taskParameters&quot;: {&#xd;
                              &quot;entry&quot;: [&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;Parameter0&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: {&#xd;
                                      &quot;parentKeyName&quot;: &quot;Task_Act2&quot;,&#xd;
                                      &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                      &quot;parentLocalName&quot;: &quot;NULL&quot;,&#xd;
                                      &quot;localName&quot;: &quot;Parameter0&quot;&#xd;
                                    },&#xd;
                                    &quot;defaultValue&quot;: &quot;DefaultValue0&quot;&#xd;
                                  }&#xd;
                                }&#xd;
                              ]&#xd;
                            },&#xd;
                            &quot;contextAlbumReference&quot;: [&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;GlobalContextAlbum&quot;,&#xd;
                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;Policy1ContextAlbum&quot;,&#xd;
                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                              }&#xd;
                            ],&#xd;
                            &quot;taskLogic&quot;: {&#xd;
                              &quot;key&quot;: &quot;_TaskLogic&quot;,&#xd;
                              &quot;logicFlavour&quot;: &quot;JAVASCRIPT&quot;,&#xd;
                              &quot;logic&quot;: &quot;/*\n * ============LICENSE_START=======================================================\n *  Copyright (C) 2016-2018 Ericsson. All rights reserved.\n * ================================================================================\n * Licensed under the Apache License, Version 2.0 (the \&quot;License\&quot;);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *      http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \&quot;AS IS\&quot; BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * \n * SPDX-License-Identifier: Apache-2.0\n * ============LICENSE_END=========================================================\n */\n\nexecutor.logger.debug(executor.subject.id);\nvar gc = executor.getContextAlbum(\&quot;GlobalContextAlbum\&quot;);\nexecutor.logger.debug(gc.name);\nexecutor.logger.debug(executor.inFields);\n\nvar caseSelectedType = java.lang.Byte;\nexecutor.outFields.put(\&quot;TestActCaseSelected\&quot;, new caseSelectedType(0));\n\nvar JavaDate = java.util.Date;\ntimeNow = new JavaDate();\nexecutor.outFields.put(\&quot;TestActStateTime\&quot;, timeNow.getTime());\nexecutor.logger.debug(executor.eo);\n\ntrue;&quot;&#xd;
                            }&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;Task_Act3&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;Task_Act3&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;inputFields&quot;: {&#xd;
                              &quot;entry&quot;: [&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestDecideCaseSelected&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestDecideCaseSelected&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestDecideStateTime&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestDecideStateTime&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestEstablishCaseSelected&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestEstablishCaseSelected&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestEstablishStateTime&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestEstablishStateTime&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchCase&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchCase&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchCaseSelected&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchCaseSelected&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchStateTime&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchStateTime&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestSlogan&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestSlogan&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestSlogan&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestTemperature&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestTemperature&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTemperature&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestTimestamp&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestTimestamp&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                }&#xd;
                              ]&#xd;
                            },&#xd;
                            &quot;outputFields&quot;: {&#xd;
                              &quot;entry&quot;: [&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestActCaseSelected&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestActCaseSelected&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestActStateTime&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestActStateTime&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestDecideCaseSelected&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestDecideCaseSelected&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestDecideStateTime&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestDecideStateTime&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestEstablishCaseSelected&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestEstablishCaseSelected&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestEstablishStateTime&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestEstablishStateTime&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchCase&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchCase&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchCaseSelected&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchCaseSelected&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchStateTime&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchStateTime&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestSlogan&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestSlogan&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestSlogan&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestTemperature&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestTemperature&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTemperature&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestTimestamp&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestTimestamp&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                }&#xd;
                              ]&#xd;
                            },&#xd;
                            &quot;taskParameters&quot;: {&#xd;
                              &quot;entry&quot;: [&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;Parameter0&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: {&#xd;
                                      &quot;parentKeyName&quot;: &quot;Task_Act3&quot;,&#xd;
                                      &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                      &quot;parentLocalName&quot;: &quot;NULL&quot;,&#xd;
                                      &quot;localName&quot;: &quot;Parameter0&quot;&#xd;
                                    },&#xd;
                                    &quot;defaultValue&quot;: &quot;DefaultValue0&quot;&#xd;
                                  }&#xd;
                                }&#xd;
                              ]&#xd;
                            },&#xd;
                            &quot;contextAlbumReference&quot;: [&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;ExternalContextAlbum&quot;,&#xd;
                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;GlobalContextAlbum&quot;,&#xd;
                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                              }&#xd;
                            ],&#xd;
                            &quot;taskLogic&quot;: {&#xd;
                              &quot;key&quot;: &quot;_TaskLogic&quot;,&#xd;
                              &quot;logicFlavour&quot;: &quot;JAVASCRIPT&quot;,&#xd;
                              &quot;logic&quot;: &quot;/*\n * ============LICENSE_START=======================================================\n *  Copyright (C) 2016-2018 Ericsson. All rights reserved.\n * ================================================================================\n * Licensed under the Apache License, Version 2.0 (the \&quot;License\&quot;);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *      http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \&quot;AS IS\&quot; BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * \n * SPDX-License-Identifier: Apache-2.0\n * ============LICENSE_END=========================================================\n */\n\nexecutor.logger.debug(executor.subject.id);\nvar gc = executor.getContextAlbum(\&quot;GlobalContextAlbum\&quot;);\nexecutor.logger.debug(gc.name);\nexecutor.logger.debug(executor.inFields);\n\nvar caseSelectedType = java.lang.Byte;\nexecutor.outFields.put(\&quot;TestActCaseSelected\&quot;, new caseSelectedType(1));\n\nvar JavaDate = java.util.Date;\ntimeNow = new JavaDate();\nexecutor.outFields.put(\&quot;TestActStateTime\&quot;, timeNow.getTime());\nexecutor.logger.debug(executor.eo);\n\ntrue;&quot;&#xd;
                            }&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;Task_Decide0&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;Task_Decide0&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;inputFields&quot;: {&#xd;
                              &quot;entry&quot;: [&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestEstablishCaseSelected&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestEstablishCaseSelected&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestEstablishStateTime&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestEstablishStateTime&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchCase&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchCase&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchCaseSelected&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchCaseSelected&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchStateTime&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchStateTime&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestSlogan&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestSlogan&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestSlogan&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestTemperature&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestTemperature&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTemperature&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestTimestamp&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestTimestamp&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                }&#xd;
                              ]&#xd;
                            },&#xd;
                            &quot;outputFields&quot;: {&#xd;
                              &quot;entry&quot;: [&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestDecideCaseSelected&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestDecideCaseSelected&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestDecideStateTime&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestDecideStateTime&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestEstablishCaseSelected&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestEstablishCaseSelected&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestEstablishStateTime&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestEstablishStateTime&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchCase&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchCase&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchCaseSelected&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchCaseSelected&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchStateTime&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchStateTime&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestSlogan&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestSlogan&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestSlogan&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestTemperature&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestTemperature&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTemperature&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestTimestamp&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestTimestamp&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                }&#xd;
                              ]&#xd;
                            },&#xd;
                            &quot;taskParameters&quot;: {&#xd;
                              &quot;entry&quot;: [&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;Parameter0&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: {&#xd;
                                      &quot;parentKeyName&quot;: &quot;Task_Decide0&quot;,&#xd;
                                      &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                      &quot;parentLocalName&quot;: &quot;NULL&quot;,&#xd;
                                      &quot;localName&quot;: &quot;Parameter0&quot;&#xd;
                                    },&#xd;
                                    &quot;defaultValue&quot;: &quot;DefaultValue0&quot;&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;Parameter1&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: {&#xd;
                                      &quot;parentKeyName&quot;: &quot;Task_Decide0&quot;,&#xd;
                                      &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                      &quot;parentLocalName&quot;: &quot;NULL&quot;,&#xd;
                                      &quot;localName&quot;: &quot;Parameter1&quot;&#xd;
                                    },&#xd;
                                    &quot;defaultValue&quot;: &quot;DefaultValue1&quot;&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;Parameter2&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: {&#xd;
                                      &quot;parentKeyName&quot;: &quot;Task_Decide0&quot;,&#xd;
                                      &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                      &quot;parentLocalName&quot;: &quot;NULL&quot;,&#xd;
                                      &quot;localName&quot;: &quot;Parameter2&quot;&#xd;
                                    },&#xd;
                                    &quot;defaultValue&quot;: &quot;DefaultValue2&quot;&#xd;
                                  }&#xd;
                                }&#xd;
                              ]&#xd;
                            },&#xd;
                            &quot;contextAlbumReference&quot;: [&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;ExternalContextAlbum&quot;,&#xd;
                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;GlobalContextAlbum&quot;,&#xd;
                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;Policy0ContextAlbum&quot;,&#xd;
                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;Policy1ContextAlbum&quot;,&#xd;
                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                              }&#xd;
                            ],&#xd;
                            &quot;taskLogic&quot;: {&#xd;
                              &quot;key&quot;: &quot;_TaskLogic&quot;,&#xd;
                              &quot;logicFlavour&quot;: &quot;JAVASCRIPT&quot;,&#xd;
                              &quot;logic&quot;: &quot;/*\n * ============LICENSE_START=======================================================\n *  Copyright (C) 2016-2018 Ericsson. All rights reserved.\n * ================================================================================\n * Licensed under the Apache License, Version 2.0 (the \&quot;License\&quot;);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *      http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \&quot;AS IS\&quot; BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * \n * SPDX-License-Identifier: Apache-2.0\n * ============LICENSE_END=========================================================\n */\n\nexecutor.logger.debug(executor.subject.id);\nvar gc = executor.getContextAlbum(\&quot;GlobalContextAlbum\&quot;);\nexecutor.logger.debug(gc.name);\nexecutor.logger.debug(executor.inFields);\n\nvar caseSelectedType = java.lang.Byte;\nexecutor.outFields.put(\&quot;TestDecideCaseSelected\&quot;, new caseSelectedType(2));\n\nvar JavaDate = java.util.Date;\ntimeNow = new JavaDate();\nexecutor.outFields.put(\&quot;TestDecideStateTime\&quot;, timeNow.getTime());\nexecutor.logger.debug(executor.eo);\n\ntrue;&quot;&#xd;
                            }&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;Task_Decide1&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;Task_Decide1&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;inputFields&quot;: {&#xd;
                              &quot;entry&quot;: [&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestEstablishCaseSelected&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestEstablishCaseSelected&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestEstablishStateTime&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestEstablishStateTime&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchCase&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchCase&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchCaseSelected&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchCaseSelected&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchStateTime&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchStateTime&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestSlogan&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestSlogan&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestSlogan&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestTemperature&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestTemperature&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTemperature&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestTimestamp&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestTimestamp&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                }&#xd;
                              ]&#xd;
                            },&#xd;
                            &quot;outputFields&quot;: {&#xd;
                              &quot;entry&quot;: [&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestDecideCaseSelected&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestDecideCaseSelected&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestDecideStateTime&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestDecideStateTime&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestEstablishCaseSelected&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestEstablishCaseSelected&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestEstablishStateTime&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestEstablishStateTime&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchCase&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchCase&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchCaseSelected&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchCaseSelected&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchStateTime&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchStateTime&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestSlogan&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestSlogan&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestSlogan&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestTemperature&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestTemperature&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTemperature&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestTimestamp&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestTimestamp&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                }&#xd;
                              ]&#xd;
                            },&#xd;
                            &quot;taskParameters&quot;: {&#xd;
                              &quot;entry&quot;: [&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;Parameter0&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: {&#xd;
                                      &quot;parentKeyName&quot;: &quot;Task_Decide1&quot;,&#xd;
                                      &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                      &quot;parentLocalName&quot;: &quot;NULL&quot;,&#xd;
                                      &quot;localName&quot;: &quot;Parameter0&quot;&#xd;
                                    },&#xd;
                                    &quot;defaultValue&quot;: &quot;DefaultValue0&quot;&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;Parameter1&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: {&#xd;
                                      &quot;parentKeyName&quot;: &quot;Task_Decide1&quot;,&#xd;
                                      &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                      &quot;parentLocalName&quot;: &quot;NULL&quot;,&#xd;
                                      &quot;localName&quot;: &quot;Parameter1&quot;&#xd;
                                    },&#xd;
                                    &quot;defaultValue&quot;: &quot;DefaultValue1&quot;&#xd;
                                  }&#xd;
                                }&#xd;
                              ]&#xd;
                            },&#xd;
                            &quot;contextAlbumReference&quot;: [&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;GlobalContextAlbum&quot;,&#xd;
                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;Policy0ContextAlbum&quot;,&#xd;
                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                              }&#xd;
                            ],&#xd;
                            &quot;taskLogic&quot;: {&#xd;
                              &quot;key&quot;: &quot;_TaskLogic&quot;,&#xd;
                              &quot;logicFlavour&quot;: &quot;JAVASCRIPT&quot;,&#xd;
                              &quot;logic&quot;: &quot;/*\n * ============LICENSE_START=======================================================\n *  Copyright (C) 2016-2018 Ericsson. All rights reserved.\n * ================================================================================\n * Licensed under the Apache License, Version 2.0 (the \&quot;License\&quot;);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *      http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \&quot;AS IS\&quot; BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * \n * SPDX-License-Identifier: Apache-2.0\n * ============LICENSE_END=========================================================\n */\n\nexecutor.logger.debug(executor.subject.id);\nvar gc = executor.getContextAlbum(\&quot;GlobalContextAlbum\&quot;);\nexecutor.logger.debug(gc.name);\nexecutor.logger.debug(executor.inFields);\n\nvar caseSelectedType = java.lang.Byte;\nexecutor.outFields.put(\&quot;TestDecideCaseSelected\&quot;, new caseSelectedType(3));\n\nvar JavaDate = java.util.Date;\ntimeNow = new JavaDate();\nexecutor.outFields.put(\&quot;TestDecideStateTime\&quot;, timeNow.getTime());\nexecutor.logger.debug(executor.eo);\n\ntrue;&quot;&#xd;
                            }&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;Task_Decide2&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;Task_Decide2&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;inputFields&quot;: {&#xd;
                              &quot;entry&quot;: [&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestEstablishCaseSelected&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestEstablishCaseSelected&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestEstablishStateTime&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestEstablishStateTime&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchCase&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchCase&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchCaseSelected&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchCaseSelected&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchStateTime&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchStateTime&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestSlogan&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestSlogan&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestSlogan&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestTemperature&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestTemperature&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTemperature&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestTimestamp&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestTimestamp&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                }&#xd;
                              ]&#xd;
                            },&#xd;
                            &quot;outputFields&quot;: {&#xd;
                              &quot;entry&quot;: [&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestDecideCaseSelected&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestDecideCaseSelected&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestDecideStateTime&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestDecideStateTime&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestEstablishCaseSelected&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestEstablishCaseSelected&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestEstablishStateTime&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestEstablishStateTime&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchCase&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchCase&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchCaseSelected&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchCaseSelected&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchStateTime&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchStateTime&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestSlogan&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestSlogan&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestSlogan&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestTemperature&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestTemperature&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTemperature&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestTimestamp&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestTimestamp&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                }&#xd;
                              ]&#xd;
                            },&#xd;
                            &quot;taskParameters&quot;: {&#xd;
                              &quot;entry&quot;: [&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;Parameter0&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: {&#xd;
                                      &quot;parentKeyName&quot;: &quot;Task_Decide2&quot;,&#xd;
                                      &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                      &quot;parentLocalName&quot;: &quot;NULL&quot;,&#xd;
                                      &quot;localName&quot;: &quot;Parameter0&quot;&#xd;
                                    },&#xd;
                                    &quot;defaultValue&quot;: &quot;DefaultValue0&quot;&#xd;
                                  }&#xd;
                                }&#xd;
                              ]&#xd;
                            },&#xd;
                            &quot;contextAlbumReference&quot;: [&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;GlobalContextAlbum&quot;,&#xd;
                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;Policy1ContextAlbum&quot;,&#xd;
                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                              }&#xd;
                            ],&#xd;
                            &quot;taskLogic&quot;: {&#xd;
                              &quot;key&quot;: &quot;_TaskLogic&quot;,&#xd;
                              &quot;logicFlavour&quot;: &quot;JAVASCRIPT&quot;,&#xd;
                              &quot;logic&quot;: &quot;/*\n * ============LICENSE_START=======================================================\n *  Copyright (C) 2016-2018 Ericsson. All rights reserved.\n * ================================================================================\n * Licensed under the Apache License, Version 2.0 (the \&quot;License\&quot;);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *      http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \&quot;AS IS\&quot; BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * \n * SPDX-License-Identifier: Apache-2.0\n * ============LICENSE_END=========================================================\n */\n\nexecutor.logger.debug(executor.subject.id);\nvar gc = executor.getContextAlbum(\&quot;GlobalContextAlbum\&quot;);\nexecutor.logger.debug(gc.name);\nexecutor.logger.debug(executor.inFields);\n\nvar caseSelectedType = java.lang.Byte;\nexecutor.outFields.put(\&quot;TestDecideCaseSelected\&quot;, new caseSelectedType(0));\n\nvar JavaDate = java.util.Date;\ntimeNow = new JavaDate();\nexecutor.outFields.put(\&quot;TestDecideStateTime\&quot;, timeNow.getTime());\nexecutor.logger.debug(executor.eo);\n\ntrue;&quot;&#xd;
                            }&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;Task_Decide3&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;Task_Decide3&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;inputFields&quot;: {&#xd;
                              &quot;entry&quot;: [&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestEstablishCaseSelected&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestEstablishCaseSelected&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestEstablishStateTime&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestEstablishStateTime&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchCase&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchCase&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchCaseSelected&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchCaseSelected&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchStateTime&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchStateTime&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestSlogan&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestSlogan&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestSlogan&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestTemperature&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestTemperature&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTemperature&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestTimestamp&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestTimestamp&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                }&#xd;
                              ]&#xd;
                            },&#xd;
                            &quot;outputFields&quot;: {&#xd;
                              &quot;entry&quot;: [&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestDecideCaseSelected&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestDecideCaseSelected&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestDecideStateTime&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestDecideStateTime&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestEstablishCaseSelected&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestEstablishCaseSelected&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestEstablishStateTime&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestEstablishStateTime&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchCase&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchCase&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchCaseSelected&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchCaseSelected&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchStateTime&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchStateTime&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestSlogan&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestSlogan&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestSlogan&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestTemperature&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestTemperature&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTemperature&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestTimestamp&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestTimestamp&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                }&#xd;
                              ]&#xd;
                            },&#xd;
                            &quot;taskParameters&quot;: {&#xd;
                              &quot;entry&quot;: [&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;Parameter0&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: {&#xd;
                                      &quot;parentKeyName&quot;: &quot;Task_Decide3&quot;,&#xd;
                                      &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                      &quot;parentLocalName&quot;: &quot;NULL&quot;,&#xd;
                                      &quot;localName&quot;: &quot;Parameter0&quot;&#xd;
                                    },&#xd;
                                    &quot;defaultValue&quot;: &quot;DefaultValue0&quot;&#xd;
                                  }&#xd;
                                }&#xd;
                              ]&#xd;
                            },&#xd;
                            &quot;contextAlbumReference&quot;: [&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;ExternalContextAlbum&quot;,&#xd;
                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;GlobalContextAlbum&quot;,&#xd;
                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                              }&#xd;
                            ],&#xd;
                            &quot;taskLogic&quot;: {&#xd;
                              &quot;key&quot;: &quot;_TaskLogic&quot;,&#xd;
                              &quot;logicFlavour&quot;: &quot;JAVASCRIPT&quot;,&#xd;
                              &quot;logic&quot;: &quot;/*\n * ============LICENSE_START=======================================================\n *  Copyright (C) 2016-2018 Ericsson. All rights reserved.\n * ================================================================================\n * Licensed under the Apache License, Version 2.0 (the \&quot;License\&quot;);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *      http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \&quot;AS IS\&quot; BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * \n * SPDX-License-Identifier: Apache-2.0\n * ============LICENSE_END=========================================================\n */\n\nexecutor.logger.debug(executor.subject.id);\nvar gc = executor.getContextAlbum(\&quot;GlobalContextAlbum\&quot;);\nexecutor.logger.debug(gc.name);\nexecutor.logger.debug(executor.inFields);\n\nvar caseSelectedType = java.lang.Byte;\nexecutor.outFields.put(\&quot;TestDecideCaseSelected\&quot;, new caseSelectedType(1));\n\nvar JavaDate = java.util.Date;\ntimeNow = new JavaDate();\nexecutor.outFields.put(\&quot;TestDecideStateTime\&quot;, timeNow.getTime());\nexecutor.logger.debug(executor.eo);\n\ntrue;&quot;&#xd;
                            }&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;Task_Establish0&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;Task_Establish0&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;inputFields&quot;: {&#xd;
                              &quot;entry&quot;: [&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchCase&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchCase&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchCaseSelected&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchCaseSelected&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchStateTime&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchStateTime&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestSlogan&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestSlogan&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestSlogan&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestTemperature&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestTemperature&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTemperature&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestTimestamp&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestTimestamp&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                }&#xd;
                              ]&#xd;
                            },&#xd;
                            &quot;outputFields&quot;: {&#xd;
                              &quot;entry&quot;: [&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestEstablishCaseSelected&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestEstablishCaseSelected&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestEstablishStateTime&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestEstablishStateTime&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchCase&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchCase&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchCaseSelected&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchCaseSelected&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchStateTime&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchStateTime&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestSlogan&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestSlogan&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestSlogan&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestTemperature&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestTemperature&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTemperature&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestTimestamp&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestTimestamp&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                }&#xd;
                              ]&#xd;
                            },&#xd;
                            &quot;taskParameters&quot;: {&#xd;
                              &quot;entry&quot;: [&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;Parameter0&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: {&#xd;
                                      &quot;parentKeyName&quot;: &quot;Task_Establish0&quot;,&#xd;
                                      &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                      &quot;parentLocalName&quot;: &quot;NULL&quot;,&#xd;
                                      &quot;localName&quot;: &quot;Parameter0&quot;&#xd;
                                    },&#xd;
                                    &quot;defaultValue&quot;: &quot;DefaultValue0&quot;&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;Parameter1&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: {&#xd;
                                      &quot;parentKeyName&quot;: &quot;Task_Establish0&quot;,&#xd;
                                      &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                      &quot;parentLocalName&quot;: &quot;NULL&quot;,&#xd;
                                      &quot;localName&quot;: &quot;Parameter1&quot;&#xd;
                                    },&#xd;
                                    &quot;defaultValue&quot;: &quot;DefaultValue1&quot;&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;Parameter2&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: {&#xd;
                                      &quot;parentKeyName&quot;: &quot;Task_Establish0&quot;,&#xd;
                                      &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                      &quot;parentLocalName&quot;: &quot;NULL&quot;,&#xd;
                                      &quot;localName&quot;: &quot;Parameter2&quot;&#xd;
                                    },&#xd;
                                    &quot;defaultValue&quot;: &quot;DefaultValue2&quot;&#xd;
                                  }&#xd;
                                }&#xd;
                              ]&#xd;
                            },&#xd;
                            &quot;contextAlbumReference&quot;: [&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;ExternalContextAlbum&quot;,&#xd;
                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;GlobalContextAlbum&quot;,&#xd;
                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;Policy0ContextAlbum&quot;,&#xd;
                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;Policy1ContextAlbum&quot;,&#xd;
                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                              }&#xd;
                            ],&#xd;
                            &quot;taskLogic&quot;: {&#xd;
                              &quot;key&quot;: &quot;_TaskLogic&quot;,&#xd;
                              &quot;logicFlavour&quot;: &quot;JAVASCRIPT&quot;,&#xd;
                              &quot;logic&quot;: &quot;/*\n * ============LICENSE_START=======================================================\n *  Copyright (C) 2016-2018 Ericsson. All rights reserved.\n * ================================================================================\n * Licensed under the Apache License, Version 2.0 (the \&quot;License\&quot;);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *      http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \&quot;AS IS\&quot; BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * \n * SPDX-License-Identifier: Apache-2.0\n * ============LICENSE_END=========================================================\n */\n\nexecutor.logger.debug(executor.subject.id);\nvar gc = executor.getContextAlbum(\&quot;GlobalContextAlbum\&quot;);\nexecutor.logger.debug(gc.name);\nexecutor.logger.debug(executor.inFields);\n\nvar caseSelectedType = java.lang.Byte;\nexecutor.outFields.put(\&quot;TestEstablishCaseSelected\&quot;, new caseSelectedType(2));\n\nvar JavaDate = java.util.Date;\ntimeNow = new JavaDate();\nexecutor.outFields.put(\&quot;TestEstablishStateTime\&quot;, timeNow.getTime());\nexecutor.logger.debug(executor.eo);\n\ntrue;&quot;&#xd;
                            }&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;Task_Establish1&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;Task_Establish1&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;inputFields&quot;: {&#xd;
                              &quot;entry&quot;: [&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchCase&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchCase&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchCaseSelected&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchCaseSelected&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchStateTime&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchStateTime&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestSlogan&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestSlogan&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestSlogan&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestTemperature&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestTemperature&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTemperature&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestTimestamp&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestTimestamp&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                }&#xd;
                              ]&#xd;
                            },&#xd;
                            &quot;outputFields&quot;: {&#xd;
                              &quot;entry&quot;: [&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestEstablishCaseSelected&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestEstablishCaseSelected&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestEstablishStateTime&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestEstablishStateTime&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchCase&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchCase&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchCaseSelected&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchCaseSelected&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchStateTime&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchStateTime&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestSlogan&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestSlogan&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestSlogan&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestTemperature&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestTemperature&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTemperature&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestTimestamp&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestTimestamp&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                }&#xd;
                              ]&#xd;
                            },&#xd;
                            &quot;taskParameters&quot;: {&#xd;
                              &quot;entry&quot;: [&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;Parameter0&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: {&#xd;
                                      &quot;parentKeyName&quot;: &quot;Task_Establish1&quot;,&#xd;
                                      &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                      &quot;parentLocalName&quot;: &quot;NULL&quot;,&#xd;
                                      &quot;localName&quot;: &quot;Parameter0&quot;&#xd;
                                    },&#xd;
                                    &quot;defaultValue&quot;: &quot;DefaultValue0&quot;&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;Parameter1&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: {&#xd;
                                      &quot;parentKeyName&quot;: &quot;Task_Establish1&quot;,&#xd;
                                      &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                      &quot;parentLocalName&quot;: &quot;NULL&quot;,&#xd;
                                      &quot;localName&quot;: &quot;Parameter1&quot;&#xd;
                                    },&#xd;
                                    &quot;defaultValue&quot;: &quot;DefaultValue1&quot;&#xd;
                                  }&#xd;
                                }&#xd;
                              ]&#xd;
                            },&#xd;
                            &quot;contextAlbumReference&quot;: [&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;GlobalContextAlbum&quot;,&#xd;
                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;Policy0ContextAlbum&quot;,&#xd;
                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                              }&#xd;
                            ],&#xd;
                            &quot;taskLogic&quot;: {&#xd;
                              &quot;key&quot;: &quot;_TaskLogic&quot;,&#xd;
                              &quot;logicFlavour&quot;: &quot;JAVASCRIPT&quot;,&#xd;
                              &quot;logic&quot;: &quot;/*\n * ============LICENSE_START=======================================================\n *  Copyright (C) 2016-2018 Ericsson. All rights reserved.\n * ================================================================================\n * Licensed under the Apache License, Version 2.0 (the \&quot;License\&quot;);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *      http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \&quot;AS IS\&quot; BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * \n * SPDX-License-Identifier: Apache-2.0\n * ============LICENSE_END=========================================================\n */\n\nexecutor.logger.debug(executor.subject.id);\nvar gc = executor.getContextAlbum(\&quot;GlobalContextAlbum\&quot;);\nexecutor.logger.debug(gc.name);\nexecutor.logger.debug(executor.inFields);\n\nvar caseSelectedType = java.lang.Byte;\nexecutor.outFields.put(\&quot;TestEstablishCaseSelected\&quot;, new caseSelectedType(3));\n\nvar JavaDate = java.util.Date;\ntimeNow = new JavaDate();\nexecutor.outFields.put(\&quot;TestEstablishStateTime\&quot;, timeNow.getTime());\nexecutor.logger.debug(executor.eo);\n\ntrue;&quot;&#xd;
                            }&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;Task_Establish2&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;Task_Establish2&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;inputFields&quot;: {&#xd;
                              &quot;entry&quot;: [&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchCase&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchCase&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchCaseSelected&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchCaseSelected&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchStateTime&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchStateTime&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestSlogan&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestSlogan&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestSlogan&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestTemperature&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestTemperature&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTemperature&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestTimestamp&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestTimestamp&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                }&#xd;
                              ]&#xd;
                            },&#xd;
                            &quot;outputFields&quot;: {&#xd;
                              &quot;entry&quot;: [&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestEstablishCaseSelected&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestEstablishCaseSelected&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestEstablishStateTime&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestEstablishStateTime&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchCase&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchCase&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchCaseSelected&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchCaseSelected&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchStateTime&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchStateTime&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestSlogan&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestSlogan&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestSlogan&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestTemperature&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestTemperature&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTemperature&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestTimestamp&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestTimestamp&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                }&#xd;
                              ]&#xd;
                            },&#xd;
                            &quot;taskParameters&quot;: {&#xd;
                              &quot;entry&quot;: [&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;Parameter0&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: {&#xd;
                                      &quot;parentKeyName&quot;: &quot;Task_Establish2&quot;,&#xd;
                                      &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                      &quot;parentLocalName&quot;: &quot;NULL&quot;,&#xd;
                                      &quot;localName&quot;: &quot;Parameter0&quot;&#xd;
                                    },&#xd;
                                    &quot;defaultValue&quot;: &quot;DefaultValue0&quot;&#xd;
                                  }&#xd;
                                }&#xd;
                              ]&#xd;
                            },&#xd;
                            &quot;contextAlbumReference&quot;: [&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;GlobalContextAlbum&quot;,&#xd;
                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;Policy1ContextAlbum&quot;,&#xd;
                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                              }&#xd;
                            ],&#xd;
                            &quot;taskLogic&quot;: {&#xd;
                              &quot;key&quot;: &quot;_TaskLogic&quot;,&#xd;
                              &quot;logicFlavour&quot;: &quot;JAVASCRIPT&quot;,&#xd;
                              &quot;logic&quot;: &quot;/*\n * ============LICENSE_START=======================================================\n *  Copyright (C) 2016-2018 Ericsson. All rights reserved.\n * ================================================================================\n * Licensed under the Apache License, Version 2.0 (the \&quot;License\&quot;);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *      http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \&quot;AS IS\&quot; BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * \n * SPDX-License-Identifier: Apache-2.0\n * ============LICENSE_END=========================================================\n */\n\nexecutor.logger.debug(executor.subject.id);\nvar gc = executor.getContextAlbum(\&quot;GlobalContextAlbum\&quot;);\nexecutor.logger.debug(gc.name);\nexecutor.logger.debug(executor.inFields);\n\nvar caseSelectedType = java.lang.Byte;\nexecutor.outFields.put(\&quot;TestEstablishCaseSelected\&quot;, new caseSelectedType(0));\n\nvar JavaDate = java.util.Date;\ntimeNow = new JavaDate();\nexecutor.outFields.put(\&quot;TestEstablishStateTime\&quot;, timeNow.getTime());\nexecutor.logger.debug(executor.eo);\n\ntrue;&quot;&#xd;
                            }&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;Task_Establish3&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;Task_Establish3&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;inputFields&quot;: {&#xd;
                              &quot;entry&quot;: [&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchCase&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchCase&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchCaseSelected&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchCaseSelected&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchStateTime&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchStateTime&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestSlogan&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestSlogan&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestSlogan&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestTemperature&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestTemperature&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTemperature&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestTimestamp&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestTimestamp&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                }&#xd;
                              ]&#xd;
                            },&#xd;
                            &quot;outputFields&quot;: {&#xd;
                              &quot;entry&quot;: [&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestEstablishCaseSelected&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestEstablishCaseSelected&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestEstablishStateTime&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestEstablishStateTime&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchCase&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchCase&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchCaseSelected&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchCaseSelected&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchStateTime&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchStateTime&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestSlogan&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestSlogan&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestSlogan&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestTemperature&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestTemperature&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTemperature&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestTimestamp&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestTimestamp&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                }&#xd;
                              ]&#xd;
                            },&#xd;
                            &quot;taskParameters&quot;: {&#xd;
                              &quot;entry&quot;: [&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;Parameter0&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: {&#xd;
                                      &quot;parentKeyName&quot;: &quot;Task_Establish3&quot;,&#xd;
                                      &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                      &quot;parentLocalName&quot;: &quot;NULL&quot;,&#xd;
                                      &quot;localName&quot;: &quot;Parameter0&quot;&#xd;
                                    },&#xd;
                                    &quot;defaultValue&quot;: &quot;DefaultValue0&quot;&#xd;
                                  }&#xd;
                                }&#xd;
                              ]&#xd;
                            },&#xd;
                            &quot;contextAlbumReference&quot;: [&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;ExternalContextAlbum&quot;,&#xd;
                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;GlobalContextAlbum&quot;,&#xd;
                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                              }&#xd;
                            ],&#xd;
                            &quot;taskLogic&quot;: {&#xd;
                              &quot;key&quot;: &quot;_TaskLogic&quot;,&#xd;
                              &quot;logicFlavour&quot;: &quot;JAVASCRIPT&quot;,&#xd;
                              &quot;logic&quot;: &quot;/*\n * ============LICENSE_START=======================================================\n *  Copyright (C) 2016-2018 Ericsson. All rights reserved.\n * ================================================================================\n * Licensed under the Apache License, Version 2.0 (the \&quot;License\&quot;);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *      http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \&quot;AS IS\&quot; BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * \n * SPDX-License-Identifier: Apache-2.0\n * ============LICENSE_END=========================================================\n */\n\nexecutor.logger.debug(executor.subject.id);\nvar gc = executor.getContextAlbum(\&quot;GlobalContextAlbum\&quot;);\nexecutor.logger.debug(gc.name);\nexecutor.logger.debug(executor.inFields);\n\nvar caseSelectedType = java.lang.Byte;\nexecutor.outFields.put(\&quot;TestEstablishCaseSelected\&quot;, new caseSelectedType(1));\n\nvar JavaDate = java.util.Date;\ntimeNow = new JavaDate();\nexecutor.outFields.put(\&quot;TestEstablishStateTime\&quot;, timeNow.getTime());\nexecutor.logger.debug(executor.eo);\n\ntrue;&quot;&#xd;
                            }&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;Task_Match0&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;Task_Match0&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;inputFields&quot;: {&#xd;
                              &quot;entry&quot;: [&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchCase&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchCase&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestSlogan&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestSlogan&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestSlogan&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestTemperature&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestTemperature&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTemperature&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestTimestamp&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestTimestamp&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                }&#xd;
                              ]&#xd;
                            },&#xd;
                            &quot;outputFields&quot;: {&#xd;
                              &quot;entry&quot;: [&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchCase&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchCase&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchCaseSelected&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchCaseSelected&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchStateTime&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchStateTime&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestSlogan&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestSlogan&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestSlogan&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestTemperature&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestTemperature&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTemperature&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestTimestamp&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestTimestamp&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                }&#xd;
                              ]&#xd;
                            },&#xd;
                            &quot;taskParameters&quot;: {&#xd;
                              &quot;entry&quot;: [&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;Parameter0&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: {&#xd;
                                      &quot;parentKeyName&quot;: &quot;Task_Match0&quot;,&#xd;
                                      &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                      &quot;parentLocalName&quot;: &quot;NULL&quot;,&#xd;
                                      &quot;localName&quot;: &quot;Parameter0&quot;&#xd;
                                    },&#xd;
                                    &quot;defaultValue&quot;: &quot;DefaultValue0&quot;&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;Parameter1&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: {&#xd;
                                      &quot;parentKeyName&quot;: &quot;Task_Match0&quot;,&#xd;
                                      &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                      &quot;parentLocalName&quot;: &quot;NULL&quot;,&#xd;
                                      &quot;localName&quot;: &quot;Parameter1&quot;&#xd;
                                    },&#xd;
                                    &quot;defaultValue&quot;: &quot;DefaultValue1&quot;&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;Parameter2&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: {&#xd;
                                      &quot;parentKeyName&quot;: &quot;Task_Match0&quot;,&#xd;
                                      &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                      &quot;parentLocalName&quot;: &quot;NULL&quot;,&#xd;
                                      &quot;localName&quot;: &quot;Parameter2&quot;&#xd;
                                    },&#xd;
                                    &quot;defaultValue&quot;: &quot;DefaultValue2&quot;&#xd;
                                  }&#xd;
                                }&#xd;
                              ]&#xd;
                            },&#xd;
                            &quot;contextAlbumReference&quot;: [&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;ExternalContextAlbum&quot;,&#xd;
                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;GlobalContextAlbum&quot;,&#xd;
                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;Policy0ContextAlbum&quot;,&#xd;
                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;Policy1ContextAlbum&quot;,&#xd;
                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                              }&#xd;
                            ],&#xd;
                            &quot;taskLogic&quot;: {&#xd;
                              &quot;key&quot;: &quot;_TaskLogic&quot;,&#xd;
                              &quot;logicFlavour&quot;: &quot;JAVASCRIPT&quot;,&#xd;
                              &quot;logic&quot;: &quot;/*\n * ============LICENSE_START=======================================================\n *  Copyright (C) 2016-2018 Ericsson. All rights reserved.\n * ================================================================================\n * Licensed under the Apache License, Version 2.0 (the \&quot;License\&quot;);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *      http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \&quot;AS IS\&quot; BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * \n * SPDX-License-Identifier: Apache-2.0\n * ============LICENSE_END=========================================================\n */\n\nexecutor.logger.debug(executor.subject.id);\nvar gc = executor.getContextAlbum(\&quot;GlobalContextAlbum\&quot;);\nexecutor.logger.debug(gc.name);\nexecutor.logger.debug(executor.inFields);\n\nvar caseSelectedType = java.lang.Byte;\nexecutor.outFields.put(\&quot;TestMatchCaseSelected\&quot;, new caseSelectedType(2));\n\nvar JavaDate = java.util.Date;\ntimeNow = new JavaDate();\nexecutor.outFields.put(\&quot;TestMatchStateTime\&quot;, timeNow.getTime());\nexecutor.logger.debug(executor.eo);\n\ntrue;&quot;&#xd;
                            }&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;Task_Match1&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;Task_Match1&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;inputFields&quot;: {&#xd;
                              &quot;entry&quot;: [&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchCase&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchCase&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestSlogan&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestSlogan&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestSlogan&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestTemperature&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestTemperature&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTemperature&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestTimestamp&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestTimestamp&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                }&#xd;
                              ]&#xd;
                            },&#xd;
                            &quot;outputFields&quot;: {&#xd;
                              &quot;entry&quot;: [&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchCase&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchCase&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchCaseSelected&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchCaseSelected&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchStateTime&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchStateTime&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestSlogan&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestSlogan&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestSlogan&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestTemperature&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestTemperature&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTemperature&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestTimestamp&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestTimestamp&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                }&#xd;
                              ]&#xd;
                            },&#xd;
                            &quot;taskParameters&quot;: {&#xd;
                              &quot;entry&quot;: [&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;Parameter0&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: {&#xd;
                                      &quot;parentKeyName&quot;: &quot;Task_Match1&quot;,&#xd;
                                      &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                      &quot;parentLocalName&quot;: &quot;NULL&quot;,&#xd;
                                      &quot;localName&quot;: &quot;Parameter0&quot;&#xd;
                                    },&#xd;
                                    &quot;defaultValue&quot;: &quot;DefaultValue0&quot;&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;Parameter1&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: {&#xd;
                                      &quot;parentKeyName&quot;: &quot;Task_Match1&quot;,&#xd;
                                      &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                      &quot;parentLocalName&quot;: &quot;NULL&quot;,&#xd;
                                      &quot;localName&quot;: &quot;Parameter1&quot;&#xd;
                                    },&#xd;
                                    &quot;defaultValue&quot;: &quot;DefaultValue1&quot;&#xd;
                                  }&#xd;
                                }&#xd;
                              ]&#xd;
                            },&#xd;
                            &quot;contextAlbumReference&quot;: [&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;GlobalContextAlbum&quot;,&#xd;
                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;Policy0ContextAlbum&quot;,&#xd;
                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                              }&#xd;
                            ],&#xd;
                            &quot;taskLogic&quot;: {&#xd;
                              &quot;key&quot;: &quot;_TaskLogic&quot;,&#xd;
                              &quot;logicFlavour&quot;: &quot;JAVASCRIPT&quot;,&#xd;
                              &quot;logic&quot;: &quot;/*\n * ============LICENSE_START=======================================================\n *  Copyright (C) 2016-2018 Ericsson. All rights reserved.\n * ================================================================================\n * Licensed under the Apache License, Version 2.0 (the \&quot;License\&quot;);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *      http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \&quot;AS IS\&quot; BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * \n * SPDX-License-Identifier: Apache-2.0\n * ============LICENSE_END=========================================================\n */\n\nexecutor.logger.debug(executor.subject.id);\nvar gc = executor.getContextAlbum(\&quot;GlobalContextAlbum\&quot;);\nexecutor.logger.debug(gc.name);\nexecutor.logger.debug(executor.inFields);\n\nvar caseSelectedType = java.lang.Byte;\nexecutor.outFields.put(\&quot;TestMatchCaseSelected\&quot;, new caseSelectedType(3));\n\nvar JavaDate = java.util.Date;\ntimeNow = new JavaDate();\nexecutor.outFields.put(\&quot;TestMatchStateTime\&quot;, timeNow.getTime());\nexecutor.logger.debug(executor.eo);\n\ntrue;&quot;&#xd;
                            }&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;Task_Match2&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;Task_Match2&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;inputFields&quot;: {&#xd;
                              &quot;entry&quot;: [&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchCase&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchCase&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestSlogan&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestSlogan&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestSlogan&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestTemperature&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestTemperature&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTemperature&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestTimestamp&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestTimestamp&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                }&#xd;
                              ]&#xd;
                            },&#xd;
                            &quot;outputFields&quot;: {&#xd;
                              &quot;entry&quot;: [&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchCase&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchCase&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchCaseSelected&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchCaseSelected&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchStateTime&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchStateTime&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestSlogan&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestSlogan&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestSlogan&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestTemperature&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestTemperature&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTemperature&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestTimestamp&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestTimestamp&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                }&#xd;
                              ]&#xd;
                            },&#xd;
                            &quot;taskParameters&quot;: {&#xd;
                              &quot;entry&quot;: [&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;Parameter0&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: {&#xd;
                                      &quot;parentKeyName&quot;: &quot;Task_Match2&quot;,&#xd;
                                      &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                      &quot;parentLocalName&quot;: &quot;NULL&quot;,&#xd;
                                      &quot;localName&quot;: &quot;Parameter0&quot;&#xd;
                                    },&#xd;
                                    &quot;defaultValue&quot;: &quot;DefaultValue0&quot;&#xd;
                                  }&#xd;
                                }&#xd;
                              ]&#xd;
                            },&#xd;
                            &quot;contextAlbumReference&quot;: [&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;GlobalContextAlbum&quot;,&#xd;
                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;Policy1ContextAlbum&quot;,&#xd;
                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                              }&#xd;
                            ],&#xd;
                            &quot;taskLogic&quot;: {&#xd;
                              &quot;key&quot;: &quot;_TaskLogic&quot;,&#xd;
                              &quot;logicFlavour&quot;: &quot;JAVASCRIPT&quot;,&#xd;
                              &quot;logic&quot;: &quot;/*\n * ============LICENSE_START=======================================================\n *  Copyright (C) 2016-2018 Ericsson. All rights reserved.\n * ================================================================================\n * Licensed under the Apache License, Version 2.0 (the \&quot;License\&quot;);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *      http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \&quot;AS IS\&quot; BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * \n * SPDX-License-Identifier: Apache-2.0\n * ============LICENSE_END=========================================================\n */\n\nexecutor.logger.debug(executor.subject.id);\nvar gc = executor.getContextAlbum(\&quot;GlobalContextAlbum\&quot;);\nexecutor.logger.debug(gc.name);\nexecutor.logger.debug(executor.inFields);\n\nvar caseSelectedType = java.lang.Byte;\nexecutor.outFields.put(\&quot;TestMatchCaseSelected\&quot;, new caseSelectedType(0));\n\nvar JavaDate = java.util.Date;\ntimeNow = new JavaDate();\nexecutor.outFields.put(\&quot;TestMatchStateTime\&quot;, timeNow.getTime());\nexecutor.logger.debug(executor.eo);\n\ntrue;&quot;&#xd;
                            }&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;Task_Match3&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;Task_Match3&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;inputFields&quot;: {&#xd;
                              &quot;entry&quot;: [&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchCase&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchCase&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestSlogan&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestSlogan&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestSlogan&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestTemperature&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestTemperature&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTemperature&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestTimestamp&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestTimestamp&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                }&#xd;
                              ]&#xd;
                            },&#xd;
                            &quot;outputFields&quot;: {&#xd;
                              &quot;entry&quot;: [&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchCase&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchCase&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchCaseSelected&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchCaseSelected&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchStateTime&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchStateTime&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestSlogan&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestSlogan&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestSlogan&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestTemperature&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestTemperature&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTemperature&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestTimestamp&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestTimestamp&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                }&#xd;
                              ]&#xd;
                            },&#xd;
                            &quot;taskParameters&quot;: {&#xd;
                              &quot;entry&quot;: [&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;Parameter0&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: {&#xd;
                                      &quot;parentKeyName&quot;: &quot;Task_Match3&quot;,&#xd;
                                      &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                      &quot;parentLocalName&quot;: &quot;NULL&quot;,&#xd;
                                      &quot;localName&quot;: &quot;Parameter0&quot;&#xd;
                                    },&#xd;
                                    &quot;defaultValue&quot;: &quot;DefaultValue0&quot;&#xd;
                                  }&#xd;
                                }&#xd;
                              ]&#xd;
                            },&#xd;
                            &quot;contextAlbumReference&quot;: [&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;ExternalContextAlbum&quot;,&#xd;
                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                              },&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;GlobalContextAlbum&quot;,&#xd;
                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                              }&#xd;
                            ],&#xd;
                            &quot;taskLogic&quot;: {&#xd;
                              &quot;key&quot;: &quot;_TaskLogic&quot;,&#xd;
                              &quot;logicFlavour&quot;: &quot;JAVASCRIPT&quot;,&#xd;
                              &quot;logic&quot;: &quot;/*\n * ============LICENSE_START=======================================================\n *  Copyright (C) 2016-2018 Ericsson. All rights reserved.\n * ================================================================================\n * Licensed under the Apache License, Version 2.0 (the \&quot;License\&quot;);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *      http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \&quot;AS IS\&quot; BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * \n * SPDX-License-Identifier: Apache-2.0\n * ============LICENSE_END=========================================================\n */\n\nexecutor.logger.debug(executor.subject.id);\nvar gc = executor.getContextAlbum(\&quot;GlobalContextAlbum\&quot;);\nexecutor.logger.debug(gc.name);\nexecutor.logger.debug(executor.inFields);\n\nvar caseSelectedType = java.lang.Byte;\nexecutor.outFields.put(\&quot;TestMatchCaseSelected\&quot;, new caseSelectedType(1));\n\nvar JavaDate = java.util.Date;\ntimeNow = new JavaDate();\nexecutor.outFields.put(\&quot;TestMatchStateTime\&quot;, timeNow.getTime());\nexecutor.logger.debug(executor.eo);\n\ntrue;&quot;&#xd;
                            }&#xd;
                          }&#xd;
                        }&#xd;
                      ]&#xd;
                    }&#xd;
                  },&#xd;
                  &quot;events&quot;: {&#xd;
                    &quot;key&quot;: {&#xd;
                      &quot;name&quot;: &quot;Events&quot;,&#xd;
                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                    },&#xd;
                    &quot;eventMap&quot;: {&#xd;
                      &quot;entry&quot;: [&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;Event0000&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;Event0000&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;nameSpace&quot;: &quot;org.onap.policy.apex.sample.events&quot;,&#xd;
                            &quot;source&quot;: &quot;Outside&quot;,&#xd;
                            &quot;target&quot;: &quot;Match&quot;,&#xd;
                            &quot;parameter&quot;: {&#xd;
                              &quot;entry&quot;: [&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchCase&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchCase&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestSlogan&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestSlogan&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestSlogan&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestTemperature&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestTemperature&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTemperature&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestTimestamp&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestTimestamp&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                }&#xd;
                              ]&#xd;
                            }&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;Event0001&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;Event0001&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;nameSpace&quot;: &quot;org.onap.policy.apex.sample.events&quot;,&#xd;
                            &quot;source&quot;: &quot;Match&quot;,&#xd;
                            &quot;target&quot;: &quot;Establish&quot;,&#xd;
                            &quot;parameter&quot;: {&#xd;
                              &quot;entry&quot;: [&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchCase&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchCase&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchCaseSelected&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchCaseSelected&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchStateTime&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchStateTime&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestSlogan&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestSlogan&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestSlogan&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestTemperature&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestTemperature&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTemperature&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestTimestamp&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestTimestamp&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                }&#xd;
                              ]&#xd;
                            }&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;Event0002&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;Event0002&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;nameSpace&quot;: &quot;org.onap.policy.apex.sample.events&quot;,&#xd;
                            &quot;source&quot;: &quot;Establish&quot;,&#xd;
                            &quot;target&quot;: &quot;Decide&quot;,&#xd;
                            &quot;parameter&quot;: {&#xd;
                              &quot;entry&quot;: [&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestEstablishCaseSelected&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestEstablishCaseSelected&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestEstablishStateTime&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestEstablishStateTime&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchCase&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchCase&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchCaseSelected&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchCaseSelected&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchStateTime&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchStateTime&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestSlogan&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestSlogan&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestSlogan&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestTemperature&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestTemperature&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTemperature&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestTimestamp&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestTimestamp&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                }&#xd;
                              ]&#xd;
                            }&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;Event0003&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;Event0003&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;nameSpace&quot;: &quot;org.onap.policy.apex.sample.events&quot;,&#xd;
                            &quot;source&quot;: &quot;Decide&quot;,&#xd;
                            &quot;target&quot;: &quot;Act&quot;,&#xd;
                            &quot;parameter&quot;: {&#xd;
                              &quot;entry&quot;: [&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestDecideCaseSelected&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestDecideCaseSelected&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestDecideStateTime&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestDecideStateTime&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestEstablishCaseSelected&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestEstablishCaseSelected&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestEstablishStateTime&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestEstablishStateTime&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchCase&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchCase&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchCaseSelected&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchCaseSelected&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchStateTime&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchStateTime&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestSlogan&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestSlogan&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestSlogan&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestTemperature&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestTemperature&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTemperature&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestTimestamp&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestTimestamp&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                }&#xd;
                              ]&#xd;
                            }&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;Event0004&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;Event0004&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;nameSpace&quot;: &quot;org.onap.policy.apex.sample.events&quot;,&#xd;
                            &quot;source&quot;: &quot;Act&quot;,&#xd;
                            &quot;target&quot;: &quot;Outside&quot;,&#xd;
                            &quot;parameter&quot;: {&#xd;
                              &quot;entry&quot;: [&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestActCaseSelected&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestActCaseSelected&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestActStateTime&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestActStateTime&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestDecideCaseSelected&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestDecideCaseSelected&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestDecideStateTime&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestDecideStateTime&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestEstablishCaseSelected&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestEstablishCaseSelected&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestEstablishStateTime&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestEstablishStateTime&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchCase&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchCase&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchCaseSelected&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchCaseSelected&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchStateTime&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchStateTime&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestSlogan&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestSlogan&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestSlogan&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestTemperature&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestTemperature&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTemperature&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestTimestamp&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestTimestamp&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                }&#xd;
                              ]&#xd;
                            }&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;Event0100&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;Event0100&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;nameSpace&quot;: &quot;org.onap.policy.apex.sample.events&quot;,&#xd;
                            &quot;source&quot;: &quot;Outside&quot;,&#xd;
                            &quot;target&quot;: &quot;Match&quot;,&#xd;
                            &quot;parameter&quot;: {&#xd;
                              &quot;entry&quot;: [&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchCase&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchCase&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestSlogan&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestSlogan&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestSlogan&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestTemperature&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestTemperature&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTemperature&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestTimestamp&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestTimestamp&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                }&#xd;
                              ]&#xd;
                            }&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;Event0101&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;Event0101&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;nameSpace&quot;: &quot;org.onap.policy.apex.sample.events&quot;,&#xd;
                            &quot;source&quot;: &quot;Match&quot;,&#xd;
                            &quot;target&quot;: &quot;Establish&quot;,&#xd;
                            &quot;parameter&quot;: {&#xd;
                              &quot;entry&quot;: [&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchCase&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchCase&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchCaseSelected&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchCaseSelected&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchStateTime&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchStateTime&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestSlogan&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestSlogan&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestSlogan&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestTemperature&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestTemperature&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTemperature&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestTimestamp&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestTimestamp&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                }&#xd;
                              ]&#xd;
                            }&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;Event0102&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;Event0102&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;nameSpace&quot;: &quot;org.onap.policy.apex.sample.events&quot;,&#xd;
                            &quot;source&quot;: &quot;Establish&quot;,&#xd;
                            &quot;target&quot;: &quot;Decide&quot;,&#xd;
                            &quot;parameter&quot;: {&#xd;
                              &quot;entry&quot;: [&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestEstablishCaseSelected&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestEstablishCaseSelected&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestEstablishStateTime&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestEstablishStateTime&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchCase&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchCase&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchCaseSelected&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchCaseSelected&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchStateTime&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchStateTime&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestSlogan&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestSlogan&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestSlogan&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestTemperature&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestTemperature&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTemperature&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestTimestamp&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestTimestamp&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                }&#xd;
                              ]&#xd;
                            }&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;Event0103&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;Event0103&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;nameSpace&quot;: &quot;org.onap.policy.apex.sample.events&quot;,&#xd;
                            &quot;source&quot;: &quot;Decide&quot;,&#xd;
                            &quot;target&quot;: &quot;Act&quot;,&#xd;
                            &quot;parameter&quot;: {&#xd;
                              &quot;entry&quot;: [&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestDecideCaseSelected&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestDecideCaseSelected&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestDecideStateTime&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestDecideStateTime&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestEstablishCaseSelected&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestEstablishCaseSelected&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestEstablishStateTime&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestEstablishStateTime&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchCase&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchCase&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchCaseSelected&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchCaseSelected&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchStateTime&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchStateTime&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestSlogan&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestSlogan&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestSlogan&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestTemperature&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestTemperature&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTemperature&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestTimestamp&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestTimestamp&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                }&#xd;
                              ]&#xd;
                            }&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;Event0104&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;Event0104&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;nameSpace&quot;: &quot;org.onap.policy.apex.sample.events&quot;,&#xd;
                            &quot;source&quot;: &quot;Act&quot;,&#xd;
                            &quot;target&quot;: &quot;Outside&quot;,&#xd;
                            &quot;parameter&quot;: {&#xd;
                              &quot;entry&quot;: [&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestActCaseSelected&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestActCaseSelected&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestActStateTime&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestActStateTime&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestDecideCaseSelected&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestDecideCaseSelected&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestDecideStateTime&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestDecideStateTime&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestEstablishCaseSelected&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestEstablishCaseSelected&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestEstablishStateTime&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestEstablishStateTime&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchCase&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchCase&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchCaseSelected&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchCaseSelected&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestMatchStateTime&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestMatchStateTime&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestSlogan&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestSlogan&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestSlogan&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestTemperature&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestTemperature&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTemperature&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;TestTimestamp&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;TestTimestamp&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                }&#xd;
                              ]&#xd;
                            }&#xd;
                          }&#xd;
                        }&#xd;
                      ]&#xd;
                    }&#xd;
                  },&#xd;
                  &quot;albums&quot;: {&#xd;
                    &quot;key&quot;: {&#xd;
                      &quot;name&quot;: &quot;Context&quot;,&#xd;
                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                    },&#xd;
                    &quot;albums&quot;: {&#xd;
                      &quot;entry&quot;: [&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;ExternalContextAlbum&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;ExternalContextAlbum&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;scope&quot;: &quot;EXTERNAL&quot;,&#xd;
                            &quot;isWritable&quot;: false,&#xd;
                            &quot;itemSchema&quot;: {&#xd;
                              &quot;name&quot;: &quot;TestExternalContextItem&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            }&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;GlobalContextAlbum&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;GlobalContextAlbum&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;scope&quot;: &quot;GLOBAL&quot;,&#xd;
                            &quot;isWritable&quot;: true,&#xd;
                            &quot;itemSchema&quot;: {&#xd;
                              &quot;name&quot;: &quot;TestGlobalContextItem&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            }&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;Policy0ContextAlbum&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;Policy0ContextAlbum&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;scope&quot;: &quot;APPLICATION&quot;,&#xd;
                            &quot;isWritable&quot;: true,&#xd;
                            &quot;itemSchema&quot;: {&#xd;
                              &quot;name&quot;: &quot;TestPolicyContextItem&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            }&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;Policy1ContextAlbum&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;Policy1ContextAlbum&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;scope&quot;: &quot;APPLICATION&quot;,&#xd;
                            &quot;isWritable&quot;: true,&#xd;
                            &quot;itemSchema&quot;: {&#xd;
                              &quot;name&quot;: &quot;TestPolicyContextItem&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            }&#xd;
                          }&#xd;
                        }&#xd;
                      ]&#xd;
                    }&#xd;
                  },&#xd;
                  &quot;schemas&quot;: {&#xd;
                    &quot;key&quot;: {&#xd;
                      &quot;name&quot;: &quot;TestDatatypes&quot;,&#xd;
                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                    },&#xd;
                    &quot;schemas&quot;: {&#xd;
                      &quot;entry&quot;: [&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;TestCase&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;schemaFlavour&quot;: &quot;Java&quot;,&#xd;
                            &quot;schemaDefinition&quot;: &quot;java.lang.Byte&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;TestContextItem000&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;TestContextItem000&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;schemaFlavour&quot;: &quot;Java&quot;,&#xd;
                            &quot;schemaDefinition&quot;: &quot;org.onap.policy.apex.context.test.concepts.TestContextItem000&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;TestContextItem001&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;TestContextItem001&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;schemaFlavour&quot;: &quot;Java&quot;,&#xd;
                            &quot;schemaDefinition&quot;: &quot;org.onap.policy.apex.context.test.concepts.TestContextItem001&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;TestContextItem002&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;TestContextItem002&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;schemaFlavour&quot;: &quot;Java&quot;,&#xd;
                            &quot;schemaDefinition&quot;: &quot;org.onap.policy.apex.context.test.concepts.TestContextItem002&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;TestContextItem003&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;TestContextItem003&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;schemaFlavour&quot;: &quot;Java&quot;,&#xd;
                            &quot;schemaDefinition&quot;: &quot;org.onap.policy.apex.context.test.concepts.TestContextItem003&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;TestContextItem004&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;TestContextItem004&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;schemaFlavour&quot;: &quot;Java&quot;,&#xd;
                            &quot;schemaDefinition&quot;: &quot;org.onap.policy.apex.context.test.concepts.TestContextItem004&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;TestContextItem005&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;TestContextItem005&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;schemaFlavour&quot;: &quot;Java&quot;,&#xd;
                            &quot;schemaDefinition&quot;: &quot;org.onap.policy.apex.context.test.concepts.TestContextItem005&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;TestContextItem006&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;TestContextItem006&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;schemaFlavour&quot;: &quot;Java&quot;,&#xd;
                            &quot;schemaDefinition&quot;: &quot;org.onap.policy.apex.context.test.concepts.TestContextItem006&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;TestContextItem007&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;TestContextItem007&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;schemaFlavour&quot;: &quot;Java&quot;,&#xd;
                            &quot;schemaDefinition&quot;: &quot;org.onap.policy.apex.context.test.concepts.TestContextItem007&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;TestContextItem008&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;TestContextItem008&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;schemaFlavour&quot;: &quot;Java&quot;,&#xd;
                            &quot;schemaDefinition&quot;: &quot;org.onap.policy.apex.context.test.concepts.TestContextItem008&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;TestContextItem009&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;TestContextItem009&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;schemaFlavour&quot;: &quot;Java&quot;,&#xd;
                            &quot;schemaDefinition&quot;: &quot;org.onap.policy.apex.context.test.concepts.TestContextItem009&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;TestContextItem00A&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;TestContextItem00A&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;schemaFlavour&quot;: &quot;Java&quot;,&#xd;
                            &quot;schemaDefinition&quot;: &quot;org.onap.policy.apex.context.test.concepts.TestContextItem00A&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;TestContextItem00B&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;TestContextItem00B&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;schemaFlavour&quot;: &quot;Java&quot;,&#xd;
                            &quot;schemaDefinition&quot;: &quot;org.onap.policy.apex.context.test.concepts.TestContextItem00B&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;TestContextItem00C&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;TestContextItem00C&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;schemaFlavour&quot;: &quot;Java&quot;,&#xd;
                            &quot;schemaDefinition&quot;: &quot;org.onap.policy.apex.context.test.concepts.TestContextItem00C&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;TestExternalContextItem&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;TestExternalContextItem&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;schemaFlavour&quot;: &quot;Java&quot;,&#xd;
                            &quot;schemaDefinition&quot;: &quot;org.onap.policy.apex.context.test.concepts.TestExternalContextItem&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;TestGlobalContextItem&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;TestGlobalContextItem&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;schemaFlavour&quot;: &quot;Java&quot;,&#xd;
                            &quot;schemaDefinition&quot;: &quot;org.onap.policy.apex.context.test.concepts.TestGlobalContextItem&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;TestPolicyContextItem&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;TestPolicyContextItem&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;schemaFlavour&quot;: &quot;Java&quot;,&#xd;
                            &quot;schemaDefinition&quot;: &quot;org.onap.policy.apex.context.test.concepts.TestPolicyContextItem&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;TestSlogan&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;TestSlogan&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;schemaFlavour&quot;: &quot;Java&quot;,&#xd;
                            &quot;schemaDefinition&quot;: &quot;java.lang.String&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;TestTemperature&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;TestTemperature&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;schemaFlavour&quot;: &quot;Java&quot;,&#xd;
                            &quot;schemaDefinition&quot;: &quot;java.lang.Double&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;TestTimestamp&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;schemaFlavour&quot;: &quot;Java&quot;,&#xd;
                            &quot;schemaDefinition&quot;: &quot;java.lang.Long&quot;&#xd;
                          }&#xd;
                        }&#xd;
                      ]&#xd;
                    }&#xd;
                  }&#xd;
                }&#xd;
              },&#xd;
              &quot;engineParameters&quot;: {&#xd;
                &quot;executorParameters&quot;: {&#xd;
                  &quot;JAVASCRIPT&quot;: {&#xd;
                    &quot;parameterClassName&quot;: &quot;org.onap.policy.apex.plugins.executor.javascript.JavascriptExecutorParameters&quot;&#xd;
                  }&#xd;
                }&#xd;
              }&#xd;
            },&#xd;
            &quot;eventInputParameters&quot;: {&#xd;
              &quot;FirstConsumer&quot;: {&#xd;
                &quot;carrierTechnologyParameters&quot;: {&#xd;
                  &quot;carrierTechnology&quot;: &quot;RESTSERVER&quot;,&#xd;
                  &quot;parameterClassName&quot;: &quot;org.onap.policy.apex.plugins.event.carrier.restserver.RestServerCarrierTechnologyParameters&quot;,&#xd;
                  &quot;parameters&quot;: {&#xd;
                    &quot;standalone&quot;: true,&#xd;
                    &quot;host&quot;: &quot;0.0.0.0&quot;,&#xd;
                    &quot;port&quot;: 23324&#xd;
                  }&#xd;
                },&#xd;
                &quot;eventProtocolParameters&quot;: {&#xd;
                  &quot;eventProtocol&quot;: &quot;JSON&quot;&#xd;
                },&#xd;
                &quot;synchronousMode&quot;: true,&#xd;
                &quot;synchronousPeer&quot;: &quot;FirstProducer&quot;,&#xd;
                &quot;synchronousTimeout&quot;: 2000&#xd;
              }&#xd;
            },&#xd;
            &quot;eventOutputParameters&quot;: {&#xd;
              &quot;FirstProducer&quot;: {&#xd;
                &quot;carrierTechnologyParameters&quot;: {&#xd;
                  &quot;carrierTechnology&quot;: &quot;RESTSERVER&quot;,&#xd;
                  &quot;parameterClassName&quot;: &quot;org.onap.policy.apex.plugins.event.carrier.restserver.RestServerCarrierTechnologyParameters&quot;&#xd;
                },&#xd;
                &quot;eventProtocolParameters&quot;: {&#xd;
                  &quot;eventProtocol&quot;: &quot;JSON&quot;&#xd;
                },&#xd;
                &quot;synchronousMode&quot;: true,&#xd;
                &quot;synchronousPeer&quot;: &quot;FirstConsumer&quot;,&#xd;
                &quot;synchronousTimeout&quot;: 2000&#xd;
              }&#xd;
            }&#xd;
          }&#xd;
        }&#xd;
      }&#xd;
    ]&#xd;
  }&#xd;
}&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">1</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Nodetemplate metadata for sampleGroup policy">
          <stringProp name="TestPlan.comments">Create Nodetemplate metadata for sampleGroup policy</stringProp>
          <intProp name="HTTPSampler.concurrentPool">6</intProp>
          <stringProp name="HTTPSampler.domain">${API_HOST}</stringProp>
          <stringProp name="HTTPSampler.port">${API_PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.path">/policy/api/v1/nodetemplates</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;tosca_definitions_version&quot;: &quot;tosca_simple_yaml_1_1_0&quot;,&#xd;
    &quot;node_types&quot;: {&#xd;
        &quot;org.onap.nodetypes.policy.MetadataSet&quot;: {&#xd;
            &quot;derived_from&quot;: &quot;tosca.nodetypes.Root&quot;,&#xd;
            &quot;version&quot;: &quot;1.0.0&quot;&#xd;
        }&#xd;
    },&#xd;
    &quot;topology_template&quot;: {&#xd;
        &quot;node_templates&quot;: {&#xd;
            &quot;apex.metadata.pnf&quot;: {&#xd;
                &quot;version&quot;: &quot;1.0.0&quot;,&#xd;
                &quot;type&quot;: &quot;org.onap.nodetypes.policy.MetadataSet&quot;,&#xd;
                &quot;type_version&quot;: &quot;1.0.0&quot;,&#xd;
                &quot;description&quot;: &quot;Metadata set for apex pnf Policy&quot;,&#xd;
                &quot;metadata&quot;: {&#xd;
                    &quot;apexPolicyModel&quot;: {&#xd;
                        &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;onap.policies.apex.Simplecontrolloop&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                        },&#xd;
                        &quot;keyInformation&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                                &quot;name&quot;: &quot;onap.policies.apex.Simplecontrolloop_KeyInfo&quot;,&#xd;
                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;keyInfoMap&quot;: {&#xd;
                                &quot;entry&quot;: [&#xd;
                                    {&#xd;
                                        &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;SimpleBooleanType&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                        },&#xd;
                                        &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                                &quot;name&quot;: &quot;SimpleBooleanType&quot;,&#xd;
                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                            },&#xd;
                                            &quot;UUID&quot;: &quot;7218fb2f-59e3-321d-9ae1-bc97b19eb4ae&quot;,&#xd;
                                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;SimpleBooleanType:0.0.1\&quot;&quot;&#xd;
                                        }&#xd;
                                    },&#xd;
                                    {&#xd;
                                        &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;SimpleCL_AAIFailureResponseEvent&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                        },&#xd;
                                        &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                                &quot;name&quot;: &quot;SimpleCL_AAIFailureResponseEvent&quot;,&#xd;
                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                            },&#xd;
                                            &quot;UUID&quot;: &quot;c8a29e27-0a15-354a-84f9-4c7f207e5c81&quot;,&#xd;
                                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;SimpleCL_AAIFailureResponseEvent:0.0.1\&quot;&quot;&#xd;
                                        }&#xd;
                                    },&#xd;
                                    {&#xd;
                                        &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;SimpleCL_AAIFailureResponseHandlerPolicy&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                        },&#xd;
                                        &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                                &quot;name&quot;: &quot;SimpleCL_AAIFailureResponseHandlerPolicy&quot;,&#xd;
                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                            },&#xd;
                                            &quot;UUID&quot;: &quot;5e843cee-0180-39b9-8989-180b2ffe11c0&quot;,&#xd;
                                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;SimpleCL_AAIFailureResponseHandlerPolicy:0.0.1\&quot;&quot;&#xd;
                                        }&#xd;
                                    },&#xd;
                                    {&#xd;
                                        &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;SimpleCL_AAIRequestErrorType&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                        },&#xd;
                                        &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                                &quot;name&quot;: &quot;SimpleCL_AAIRequestErrorType&quot;,&#xd;
                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                            },&#xd;
                                            &quot;UUID&quot;: &quot;90291c92-9b27-3cd9-8720-db572419c048&quot;,&#xd;
                                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;SimpleCL_AAIRequestErrorType:0.0.1\&quot;&quot;&#xd;
                                        }&#xd;
                                    },&#xd;
                                    {&#xd;
                                        &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;SimpleCL_AAIRequestEvent&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                        },&#xd;
                                        &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                                &quot;name&quot;: &quot;SimpleCL_AAIRequestEvent&quot;,&#xd;
                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                            },&#xd;
                                            &quot;UUID&quot;: &quot;7b7e6751-4e0b-389d-98c0-5567bbc0294c&quot;,&#xd;
                                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;SimpleCL_AAIRequestEvent:0.0.1\&quot;&quot;&#xd;
                                        }&#xd;
                                    },&#xd;
                                    {&#xd;
                                        &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;SimpleCL_AAISuccessResponseEvent&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                        },&#xd;
                                        &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                                &quot;name&quot;: &quot;SimpleCL_AAISuccessResponseEvent&quot;,&#xd;
                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                            },&#xd;
                                            &quot;UUID&quot;: &quot;63d5680c-14ef-3505-8d34-ebb646bba07b&quot;,&#xd;
                                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;SimpleCL_AAISuccessResponseEvent:0.0.1\&quot;&quot;&#xd;
                                        }&#xd;
                                    },&#xd;
                                    {&#xd;
                                        &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;SimpleCL_AAISuccessResponseHandlerPolicy&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                        },&#xd;
                                        &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                                &quot;name&quot;: &quot;SimpleCL_AAISuccessResponseHandlerPolicy&quot;,&#xd;
                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                            },&#xd;
                                            &quot;UUID&quot;: &quot;a84ca97d-6e94-39a2-91f9-59a6c9aa435e&quot;,&#xd;
                                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;SimpleCL_AAISuccessResponseHandlerPolicy:0.0.1\&quot;&quot;&#xd;
                                        }&#xd;
                                    },&#xd;
                                    {&#xd;
                                        &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;SimpleCL_CDSActionIdentifiersType&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                        },&#xd;
                                        &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                                &quot;name&quot;: &quot;SimpleCL_CDSActionIdentifiersType&quot;,&#xd;
                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                            },&#xd;
                                            &quot;UUID&quot;: &quot;0e2ee622-7fd3-3e49-82e2-539c4f5e9624&quot;,&#xd;
                                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;SimpleCL_CDSActionIdentifiersType:0.0.1\&quot;&quot;&#xd;
                                        }&#xd;
                                    },&#xd;
                                    {&#xd;
                                        &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;SimpleCL_CDSConfigModifyFailureResponseEvent&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                        },&#xd;
                                        &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                                &quot;name&quot;: &quot;SimpleCL_CDSConfigModifyFailureResponseEvent&quot;,&#xd;
                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                            },&#xd;
                                            &quot;UUID&quot;: &quot;e84f8682-ea33-3ad0-8626-8bc4634581fc&quot;,&#xd;
                                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;SimpleCL_CDSConfigModifyFailureResponseEvent:0.0.1\&quot;&quot;&#xd;
                                        }&#xd;
                                    },&#xd;
                                    {&#xd;
                                        &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;SimpleCL_CDSConfigModifyFailureResponseHandlerPolicy&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                        },&#xd;
                                        &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                                &quot;name&quot;: &quot;SimpleCL_CDSConfigModifyFailureResponseHandlerPolicy&quot;,&#xd;
                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                            },&#xd;
                                            &quot;UUID&quot;: &quot;a252f835-2479-38ef-9ef4-20af62725752&quot;,&#xd;
                                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;SimpleCL_CDSConfigModifyFailureResponseHandlerPolicy:0.0.1\&quot;&quot;&#xd;
                                        }&#xd;
                                    },&#xd;
                                    {&#xd;
                                        &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;SimpleCL_CDSConfigModifyFailureResponseTask&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                        },&#xd;
                                        &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                                &quot;name&quot;: &quot;SimpleCL_CDSConfigModifyFailureResponseTask&quot;,&#xd;
                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                            },&#xd;
                                            &quot;UUID&quot;: &quot;cfc46ea9-b8c1-38dd-ac9c-304c916daf34&quot;,&#xd;
                                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;SimpleCL_CDSConfigModifyFailureResponseTask:0.0.1\&quot;&quot;&#xd;
                                        }&#xd;
                                    },&#xd;
                                    {&#xd;
                                        &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;SimpleCL_CDSConfigModifyRequestEvent&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                        },&#xd;
                                        &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                                &quot;name&quot;: &quot;SimpleCL_CDSConfigModifyRequestEvent&quot;,&#xd;
                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                            },&#xd;
                                            &quot;UUID&quot;: &quot;1e7095d6-a455-3f89-acae-486e35d7e311&quot;,&#xd;
                                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;SimpleCL_CDSConfigModifyRequestEvent:0.0.1\&quot;&quot;&#xd;
                                        }&#xd;
                                    },&#xd;
                                    {&#xd;
                                        &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;SimpleCL_CDSConfigModifyRequestPayloadType&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                        },&#xd;
                                        &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                                &quot;name&quot;: &quot;SimpleCL_CDSConfigModifyRequestPayloadType&quot;,&#xd;
                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                            },&#xd;
                                            &quot;UUID&quot;: &quot;d22ea83b-695d-3da9-b9f5-41f16ca433bf&quot;,&#xd;
                                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;SimpleCL_CDSConfigModifyRequestPayloadType:0.0.1\&quot;&quot;&#xd;
                                        }&#xd;
                                    },&#xd;
                                    {&#xd;
                                        &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;SimpleCL_CDSConfigModifyResponsePayloadType&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                        },&#xd;
                                        &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                                &quot;name&quot;: &quot;SimpleCL_CDSConfigModifyResponsePayloadType&quot;,&#xd;
                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                            },&#xd;
                                            &quot;UUID&quot;: &quot;e9fe2e40-1f0d-30dd-8b9e-885695878693&quot;,&#xd;
                                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;SimpleCL_CDSConfigModifyResponsePayloadType:0.0.1\&quot;&quot;&#xd;
                                        }&#xd;
                                    },&#xd;
                                    {&#xd;
                                        &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;SimpleCL_CDSConfigModifySuccessResponseEvent&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                        },&#xd;
                                        &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                                &quot;name&quot;: &quot;SimpleCL_CDSConfigModifySuccessResponseEvent&quot;,&#xd;
                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                            },&#xd;
                                            &quot;UUID&quot;: &quot;5e04fa76-0a17-38a9-8524-23b2d1a23fa5&quot;,&#xd;
                                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;SimpleCL_CDSConfigModifySuccessResponseEvent:0.0.1\&quot;&quot;&#xd;
                                        }&#xd;
                                    },&#xd;
                                    {&#xd;
                                        &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;SimpleCL_CDSConfigModifySuccessResponseHandlerPolicy&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                        },&#xd;
                                        &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                                &quot;name&quot;: &quot;SimpleCL_CDSConfigModifySuccessResponseHandlerPolicy&quot;,&#xd;
                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                            },&#xd;
                                            &quot;UUID&quot;: &quot;15866380-40f5-3f8e-87d9-13747a36d352&quot;,&#xd;
                                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;SimpleCL_CDSConfigModifySuccessResponseHandlerPolicy:0.0.1\&quot;&quot;&#xd;
                                        }&#xd;
                                    },&#xd;
                                    {&#xd;
                                        &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;SimpleCL_CDSConfigModifySuccessResponseTask&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                        },&#xd;
                                        &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                                &quot;name&quot;: &quot;SimpleCL_CDSConfigModifySuccessResponseTask&quot;,&#xd;
                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                            },&#xd;
                                            &quot;UUID&quot;: &quot;2c3d76ce-dd42-32ac-a397-ab418534e1cf&quot;,&#xd;
                                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;SimpleCL_CDSConfigModifySuccessResponseTask:0.0.1\&quot;&quot;&#xd;
                                        }&#xd;
                                    },&#xd;
                                    {&#xd;
                                        &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;SimpleCL_CDSFailureResponseCommonHeaderType&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                        },&#xd;
                                        &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                                &quot;name&quot;: &quot;SimpleCL_CDSFailureResponseCommonHeaderType&quot;,&#xd;
                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                            },&#xd;
                                            &quot;UUID&quot;: &quot;b99c44da-dae7-3c96-b528-58852537d063&quot;,&#xd;
                                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;SimpleCL_CDSFailureResponseCommonHeaderType:0.0.1\&quot;&quot;&#xd;
                                        }&#xd;
                                    },&#xd;
                                    {&#xd;
                                        &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;SimpleCL_CDSFailureResponseStatusType&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                        },&#xd;
                                        &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                                &quot;name&quot;: &quot;SimpleCL_CDSFailureResponseStatusType&quot;,&#xd;
                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                            },&#xd;
                                            &quot;UUID&quot;: &quot;1db688e2-3afe-3b03-9795-fdbfa80fa240&quot;,&#xd;
                                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;SimpleCL_CDSFailureResponseStatusType:0.0.1\&quot;&quot;&#xd;
                                        }&#xd;
                                    },&#xd;
                                    {&#xd;
                                        &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;SimpleCL_CDSRequestCommonHeaderType&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                        },&#xd;
                                        &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                                &quot;name&quot;: &quot;SimpleCL_CDSRequestCommonHeaderType&quot;,&#xd;
                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                            },&#xd;
                                            &quot;UUID&quot;: &quot;31022456-e85b-3a9b-9ecb-a09691792d3e&quot;,&#xd;
                                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;SimpleCL_CDSRequestCommonHeaderType:0.0.1\&quot;&quot;&#xd;
                                        }&#xd;
                                    },&#xd;
                                    {&#xd;
                                        &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;SimpleCL_CDSSuccessResponseCommonHeaderType&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                        },&#xd;
                                        &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                                &quot;name&quot;: &quot;SimpleCL_CDSSuccessResponseCommonHeaderType&quot;,&#xd;
                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                            },&#xd;
                                            &quot;UUID&quot;: &quot;d6075720-622e-3a0d-827a-aa4580a2f5d7&quot;,&#xd;
                                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;SimpleCL_CDSSuccessResponseCommonHeaderType:0.0.1\&quot;&quot;&#xd;
                                        }&#xd;
                                    },&#xd;
                                    {&#xd;
                                        &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;SimpleCL_CDSSuccessResponseStatusType&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                        },&#xd;
                                        &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                                &quot;name&quot;: &quot;SimpleCL_CDSSuccessResponseStatusType&quot;,&#xd;
                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                            },&#xd;
                                            &quot;UUID&quot;: &quot;948359ff-3308-3ac5-a5ec-6e3c1b9cd4d5&quot;,&#xd;
                                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;SimpleCL_CDSSuccessResponseStatusType:0.0.1\&quot;&quot;&#xd;
                                        }&#xd;
                                    },&#xd;
                                    {&#xd;
                                        &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;SimpleCL_EventDetailsAlbum&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                        },&#xd;
                                        &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                                &quot;name&quot;: &quot;SimpleCL_EventDetailsAlbum&quot;,&#xd;
                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                            },&#xd;
                                            &quot;UUID&quot;: &quot;63a6fd26-2fd6-3a0e-8a27-49a5d2ea4644&quot;,&#xd;
                                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;SimpleCL_EventDetailsAlbum:0.0.1\&quot;&quot;&#xd;
                                        }&#xd;
                                    },&#xd;
                                    {&#xd;
                                        &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;SimpleCL_EventDetailsAlbumType&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                        },&#xd;
                                        &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                                &quot;name&quot;: &quot;SimpleCL_EventDetailsAlbumType&quot;,&#xd;
                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                            },&#xd;
                                            &quot;UUID&quot;: &quot;a0407d0b-5719-38bf-9529-25ad62ace8c4&quot;,&#xd;
                                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;SimpleCL_EventDetailsAlbumType:0.0.1\&quot;&quot;&#xd;
                                        }&#xd;
                                    },&#xd;
                                    {&#xd;
                                        &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;SimpleCL_HandleAAIFailureResponseTask&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                        },&#xd;
                                        &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                                &quot;name&quot;: &quot;SimpleCL_HandleAAIFailureResponseTask&quot;,&#xd;
                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                            },&#xd;
                                            &quot;UUID&quot;: &quot;28e894dc-4ab8-3469-aab7-d81bd05bb4c9&quot;,&#xd;
                                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;SimpleCL_HandleAAIFailureResponseTask:0.0.1\&quot;&quot;&#xd;
                                        }&#xd;
                                    },&#xd;
                                    {&#xd;
                                        &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;SimpleCL_HandleAAISuccessResponseTask&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                        },&#xd;
                                        &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                                &quot;name&quot;: &quot;SimpleCL_HandleAAISuccessResponseTask&quot;,&#xd;
                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                            },&#xd;
                                            &quot;UUID&quot;: &quot;073f1433-999e-3506-98ad-ef820d2fa7f0&quot;,&#xd;
                                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;SimpleCL_HandleAAISuccessResponseTask:0.0.1\&quot;&quot;&#xd;
                                        }&#xd;
                                    },&#xd;
                                    {&#xd;
                                        &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;SimpleCL_HandleVesEventTask&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                        },&#xd;
                                        &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                                &quot;name&quot;: &quot;SimpleCL_HandleVesEventTask&quot;,&#xd;
                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                            },&#xd;
                                            &quot;UUID&quot;: &quot;afc6ed46-6801-3c85-bb4c-0ab5b0dd4a74&quot;,&#xd;
                                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;SimpleCL_HandleVesEventTask:0.0.1\&quot;&quot;&#xd;
                                        }&#xd;
                                    },&#xd;
                                    {&#xd;
                                        &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;SimpleCL_LogStatusEvent&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                        },&#xd;
                                        &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                                &quot;name&quot;: &quot;SimpleCL_LogStatusEvent&quot;,&#xd;
                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                            },&#xd;
                                            &quot;UUID&quot;: &quot;98e1ddd7-3bd9-30c1-b877-4b9b4d3bff15&quot;,&#xd;
                                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;SimpleCL_LogStatusEvent:0.0.1\&quot;&quot;&#xd;
                                        }&#xd;
                                    },&#xd;
                                    {&#xd;
                                        &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;SimpleCL_VesEvent&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                        },&#xd;
                                        &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                                &quot;name&quot;: &quot;SimpleCL_VesEvent&quot;,&#xd;
                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                            },&#xd;
                                            &quot;UUID&quot;: &quot;0f57665a-f0a9-314e-ad0a-04c1f5758174&quot;,&#xd;
                                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;SimpleCL_VesEvent:0.0.1\&quot;&quot;&#xd;
                                        }&#xd;
                                    },&#xd;
                                    {&#xd;
                                        &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;SimpleCL_VesEventHandlerPolicy&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                        },&#xd;
                                        &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                                &quot;name&quot;: &quot;SimpleCL_VesEventHandlerPolicy&quot;,&#xd;
                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                            },&#xd;
                                            &quot;UUID&quot;: &quot;ba5d9a46-8cb4-3fbe-84fd-eabba5b7dd4b&quot;,&#xd;
                                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;SimpleCL_VesEventHandlerPolicy:0.0.1\&quot;&quot;&#xd;
                                        }&#xd;
                                    },&#xd;
                                    {&#xd;
                                        &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;SimpleCL_VesEventType&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                        },&#xd;
                                        &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                                &quot;name&quot;: &quot;SimpleCL_VesEventType&quot;,&#xd;
                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                            },&#xd;
                                            &quot;UUID&quot;: &quot;9fd7a967-57d4-36ef-81e9-c3396f3aa8d1&quot;,&#xd;
                                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;SimpleCL_VesEventType:0.0.1\&quot;&quot;&#xd;
                                        }&#xd;
                                    },&#xd;
                                    {&#xd;
                                        &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;SimpleLongType&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                        },&#xd;
                                        &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                                &quot;name&quot;: &quot;SimpleLongType&quot;,&#xd;
                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                            },&#xd;
                                            &quot;UUID&quot;: &quot;2dfcd9ec-a6f9-3f9f-958f-9b36cf4ac574&quot;,&#xd;
                                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;SimpleLongType:0.0.1\&quot;&quot;&#xd;
                                        }&#xd;
                                    },&#xd;
                                    {&#xd;
                                        &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;SimpleStringType&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                        },&#xd;
                                        &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                                &quot;name&quot;: &quot;SimpleStringType&quot;,&#xd;
                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                            },&#xd;
                                            &quot;UUID&quot;: &quot;8a4957cf-9493-3a76-8c22-a208e23259af&quot;,&#xd;
                                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;SimpleStringType:0.0.1\&quot;&quot;&#xd;
                                        }&#xd;
                                    },&#xd;
                                    {&#xd;
                                        &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;onap.policies.apex.Simplecontrolloop&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                        },&#xd;
                                        &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                                &quot;name&quot;: &quot;onap.policies.apex.Simplecontrolloop&quot;,&#xd;
                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                            },&#xd;
                                            &quot;UUID&quot;: &quot;ecc97b87-f30b-344c-a476-d36501bf5cbd&quot;,&#xd;
                                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;onap.policies.apex.Simplecontrolloop:0.0.1\&quot;&quot;&#xd;
                                        }&#xd;
                                    },&#xd;
                                    {&#xd;
                                        &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;onap.policies.apex.Simplecontrolloop_Albums&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                        },&#xd;
                                        &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                                &quot;name&quot;: &quot;onap.policies.apex.Simplecontrolloop_Albums&quot;,&#xd;
                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                            },&#xd;
                                            &quot;UUID&quot;: &quot;1469671a-56dd-3a68-bf6c-77a5cf7a9487&quot;,&#xd;
                                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;onap.policies.apex.Simplecontrolloop_Albums:0.0.1\&quot;&quot;&#xd;
                                        }&#xd;
                                    },&#xd;
                                    {&#xd;
                                        &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;onap.policies.apex.Simplecontrolloop_Events&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                        },&#xd;
                                        &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                                &quot;name&quot;: &quot;onap.policies.apex.Simplecontrolloop_Events&quot;,&#xd;
                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                            },&#xd;
                                            &quot;UUID&quot;: &quot;23c4eee4-aba5-36f6-96d6-46f40061bfed&quot;,&#xd;
                                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;onap.policies.apex.Simplecontrolloop_Events:0.0.1\&quot;&quot;&#xd;
                                        }&#xd;
                                    },&#xd;
                                    {&#xd;
                                        &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;onap.policies.apex.Simplecontrolloop_KeyInfo&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                        },&#xd;
                                        &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                                &quot;name&quot;: &quot;onap.policies.apex.Simplecontrolloop_KeyInfo&quot;,&#xd;
                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                            },&#xd;
                                            &quot;UUID&quot;: &quot;ea9e73ff-483c-3827-896c-6eaa9d69bc6e&quot;,&#xd;
                                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;onap.policies.apex.Simplecontrolloop_KeyInfo:0.0.1\&quot;&quot;&#xd;
                                        }&#xd;
                                    },&#xd;
                                    {&#xd;
                                        &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;onap.policies.apex.Simplecontrolloop_Policies&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                        },&#xd;
                                        &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                                &quot;name&quot;: &quot;onap.policies.apex.Simplecontrolloop_Policies&quot;,&#xd;
                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                            },&#xd;
                                            &quot;UUID&quot;: &quot;38c068e5-bb9a-3997-9e50-ec77c66825c8&quot;,&#xd;
                                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;onap.policies.apex.Simplecontrolloop_Policies:0.0.1\&quot;&quot;&#xd;
                                        }&#xd;
                                    },&#xd;
                                    {&#xd;
                                        &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;onap.policies.apex.Simplecontrolloop_Schemas&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                        },&#xd;
                                        &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                                &quot;name&quot;: &quot;onap.policies.apex.Simplecontrolloop_Schemas&quot;,&#xd;
                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                            },&#xd;
                                            &quot;UUID&quot;: &quot;38514b27-8b9b-3d06-844a-3aced27deb0a&quot;,&#xd;
                                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;onap.policies.apex.Simplecontrolloop_Schemas:0.0.1\&quot;&quot;&#xd;
                                        }&#xd;
                                    },&#xd;
                                    {&#xd;
                                        &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;onap.policies.apex.Simplecontrolloop_Tasks&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                        },&#xd;
                                        &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                                &quot;name&quot;: &quot;onap.policies.apex.Simplecontrolloop_Tasks&quot;,&#xd;
                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                            },&#xd;
                                            &quot;UUID&quot;: &quot;0e0387b5-07fa-30e4-8554-eb51d2e18939&quot;,&#xd;
                                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;onap.policies.apex.Simplecontrolloop_Tasks:0.0.1\&quot;&quot;&#xd;
                                        }&#xd;
                                    }&#xd;
                                ]&#xd;
                            }&#xd;
                        },&#xd;
                        &quot;policies&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                                &quot;name&quot;: &quot;onap.policies.apex.Simplecontrolloop_Policies&quot;,&#xd;
                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;policyMap&quot;: {&#xd;
                                &quot;entry&quot;: [&#xd;
                                    {&#xd;
                                        &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;SimpleCL_AAIFailureResponseHandlerPolicy&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                        },&#xd;
                                        &quot;value&quot;: {&#xd;
                                            &quot;policyKey&quot;: {&#xd;
                                                &quot;name&quot;: &quot;SimpleCL_AAIFailureResponseHandlerPolicy&quot;,&#xd;
                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                            },&#xd;
                                            &quot;template&quot;: &quot;Freestyle&quot;,&#xd;
                                            &quot;state&quot;: {&#xd;
                                                &quot;entry&quot;: [&#xd;
                                                    {&#xd;
                                                        &quot;key&quot;: &quot;SimpleCL_ReceiveAAIFailureResponseState&quot;,&#xd;
                                                        &quot;value&quot;: {&#xd;
                                                            &quot;stateKey&quot;: {&#xd;
                                                                &quot;parentKeyName&quot;: &quot;SimpleCL_AAIFailureResponseHandlerPolicy&quot;,&#xd;
                                                                &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                                                &quot;parentLocalName&quot;: &quot;NULL&quot;,&#xd;
                                                                &quot;localName&quot;: &quot;SimpleCL_ReceiveAAIFailureResponseState&quot;&#xd;
                                                            },&#xd;
                                                            &quot;trigger&quot;: {&#xd;
                                                                &quot;name&quot;: &quot;SimpleCL_AAIFailureResponseEvent&quot;,&#xd;
                                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                                            },&#xd;
                                                            &quot;stateOutputs&quot;: {&#xd;
                                                                &quot;entry&quot;: [&#xd;
                                                                    {&#xd;
                                                                        &quot;key&quot;: &quot;AAIFailureStateOutput&quot;,&#xd;
                                                                        &quot;value&quot;: {&#xd;
                                                                            &quot;key&quot;: {&#xd;
                                                                                &quot;parentKeyName&quot;: &quot;SimpleCL_AAIFailureResponseHandlerPolicy&quot;,&#xd;
                                                                                &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                                                                &quot;parentLocalName&quot;: &quot;SimpleCL_ReceiveAAIFailureResponseState&quot;,&#xd;
                                                                                &quot;localName&quot;: &quot;AAIFailureStateOutput&quot;&#xd;
                                                                            },&#xd;
                                                                            &quot;outgoingEvent&quot;: {&#xd;
                                                                                &quot;name&quot;: &quot;SimpleCL_LogStatusEvent&quot;,&#xd;
                                                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                                                            },&#xd;
                                                                            &quot;nextState&quot;: {&#xd;
                                                                                &quot;parentKeyName&quot;: &quot;NULL&quot;,&#xd;
                                                                                &quot;parentKeyVersion&quot;: &quot;0.0.0&quot;,&#xd;
                                                                                &quot;parentLocalName&quot;: &quot;NULL&quot;,&#xd;
                                                                                &quot;localName&quot;: &quot;NULL&quot;&#xd;
                                                                            }&#xd;
                                                                        }&#xd;
                                                                    }&#xd;
                                                                ]&#xd;
                                                            },&#xd;
                                                            &quot;contextAlbumReference&quot;: [],&#xd;
                                                            &quot;taskSelectionLogic&quot;: {&#xd;
                                                                &quot;key&quot;: &quot;NULL&quot;,&#xd;
                                                                &quot;logicFlavour&quot;: &quot;UNDEFINED&quot;,&#xd;
                                                                &quot;logic&quot;: &quot;&quot;&#xd;
                                                            },&#xd;
                                                            &quot;stateFinalizerLogicMap&quot;: {&#xd;
                                                                &quot;entry&quot;: []&#xd;
                                                            },&#xd;
                                                            &quot;defaultTask&quot;: {&#xd;
                                                                &quot;name&quot;: &quot;SimpleCL_HandleAAIFailureResponseTask&quot;,&#xd;
                                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                                            },&#xd;
                                                            &quot;taskReferences&quot;: {&#xd;
                                                                &quot;entry&quot;: [&#xd;
                                                                    {&#xd;
                                                                        &quot;key&quot;: {&#xd;
                                                                            &quot;name&quot;: &quot;SimpleCL_HandleAAIFailureResponseTask&quot;,&#xd;
                                                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                                                        },&#xd;
                                                                        &quot;value&quot;: {&#xd;
                                                                            &quot;key&quot;: {&#xd;
                                                                                &quot;parentKeyName&quot;: &quot;SimpleCL_AAIFailureResponseHandlerPolicy&quot;,&#xd;
                                                                                &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                                                                &quot;parentLocalName&quot;: &quot;SimpleCL_ReceiveAAIFailureResponseState&quot;,&#xd;
                                                                                &quot;localName&quot;: &quot;SimpleCL_AAIFailureResponseHandlerPolicy&quot;&#xd;
                                                                            },&#xd;
                                                                            &quot;outputType&quot;: &quot;DIRECT&quot;,&#xd;
                                                                            &quot;output&quot;: {&#xd;
                                                                                &quot;parentKeyName&quot;: &quot;SimpleCL_AAIFailureResponseHandlerPolicy&quot;,&#xd;
                                                                                &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                                                                &quot;parentLocalName&quot;: &quot;SimpleCL_ReceiveAAIFailureResponseState&quot;,&#xd;
                                                                                &quot;localName&quot;: &quot;AAIFailureStateOutput&quot;&#xd;
                                                                            }&#xd;
                                                                        }&#xd;
                                                                    }&#xd;
                                                                ]&#xd;
                                                            }&#xd;
                                                        }&#xd;
                                                    }&#xd;
                                                ]&#xd;
                                            },&#xd;
                                            &quot;firstState&quot;: &quot;SimpleCL_ReceiveAAIFailureResponseState&quot;&#xd;
                                        }&#xd;
                                    },&#xd;
                                    {&#xd;
                                        &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;SimpleCL_AAISuccessResponseHandlerPolicy&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                        },&#xd;
                                        &quot;value&quot;: {&#xd;
                                            &quot;policyKey&quot;: {&#xd;
                                                &quot;name&quot;: &quot;SimpleCL_AAISuccessResponseHandlerPolicy&quot;,&#xd;
                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                            },&#xd;
                                            &quot;template&quot;: &quot;Freestyle&quot;,&#xd;
                                            &quot;state&quot;: {&#xd;
                                                &quot;entry&quot;: [&#xd;
                                                    {&#xd;
                                                        &quot;key&quot;: &quot;SimpleCL_ReceiveAAISuccessResponseState&quot;,&#xd;
                                                        &quot;value&quot;: {&#xd;
                                                            &quot;stateKey&quot;: {&#xd;
                                                                &quot;parentKeyName&quot;: &quot;SimpleCL_AAISuccessResponseHandlerPolicy&quot;,&#xd;
                                                                &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                                                &quot;parentLocalName&quot;: &quot;NULL&quot;,&#xd;
                                                                &quot;localName&quot;: &quot;SimpleCL_ReceiveAAISuccessResponseState&quot;&#xd;
                                                            },&#xd;
                                                            &quot;trigger&quot;: {&#xd;
                                                                &quot;name&quot;: &quot;SimpleCL_AAISuccessResponseEvent&quot;,&#xd;
                                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                                            },&#xd;
                                                            &quot;stateOutputs&quot;: {&#xd;
                                                                &quot;entry&quot;: [&#xd;
                                                                    {&#xd;
                                                                        &quot;key&quot;: &quot;AAISuccessStateOutput&quot;,&#xd;
                                                                        &quot;value&quot;: {&#xd;
                                                                            &quot;key&quot;: {&#xd;
                                                                                &quot;parentKeyName&quot;: &quot;SimpleCL_AAISuccessResponseHandlerPolicy&quot;,&#xd;
                                                                                &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                                                                &quot;parentLocalName&quot;: &quot;SimpleCL_ReceiveAAISuccessResponseState&quot;,&#xd;
                                                                                &quot;localName&quot;: &quot;AAISuccessStateOutput&quot;&#xd;
                                                                            },&#xd;
                                                                            &quot;outgoingEvent&quot;: {&#xd;
                                                                                &quot;name&quot;: &quot;SimpleCL_CDSConfigModifyRequestEvent&quot;,&#xd;
                                                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                                                            },&#xd;
                                                                            &quot;nextState&quot;: {&#xd;
                                                                                &quot;parentKeyName&quot;: &quot;NULL&quot;,&#xd;
                                                                                &quot;parentKeyVersion&quot;: &quot;0.0.0&quot;,&#xd;
                                                                                &quot;parentLocalName&quot;: &quot;NULL&quot;,&#xd;
                                                                                &quot;localName&quot;: &quot;NULL&quot;&#xd;
                                                                            }&#xd;
                                                                        }&#xd;
                                                                    }&#xd;
                                                                ]&#xd;
                                                            },&#xd;
                                                            &quot;contextAlbumReference&quot;: [],&#xd;
                                                            &quot;taskSelectionLogic&quot;: {&#xd;
                                                                &quot;key&quot;: &quot;NULL&quot;,&#xd;
                                                                &quot;logicFlavour&quot;: &quot;UNDEFINED&quot;,&#xd;
                                                                &quot;logic&quot;: &quot;&quot;&#xd;
                                                            },&#xd;
                                                            &quot;stateFinalizerLogicMap&quot;: {&#xd;
                                                                &quot;entry&quot;: []&#xd;
                                                            },&#xd;
                                                            &quot;defaultTask&quot;: {&#xd;
                                                                &quot;name&quot;: &quot;SimpleCL_HandleAAISuccessResponseTask&quot;,&#xd;
                                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                                            },&#xd;
                                                            &quot;taskReferences&quot;: {&#xd;
                                                                &quot;entry&quot;: [&#xd;
                                                                    {&#xd;
                                                                        &quot;key&quot;: {&#xd;
                                                                            &quot;name&quot;: &quot;SimpleCL_HandleAAISuccessResponseTask&quot;,&#xd;
                                                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                                                        },&#xd;
                                                                        &quot;value&quot;: {&#xd;
                                                                            &quot;key&quot;: {&#xd;
                                                                                &quot;parentKeyName&quot;: &quot;SimpleCL_AAISuccessResponseHandlerPolicy&quot;,&#xd;
                                                                                &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                                                                &quot;parentLocalName&quot;: &quot;SimpleCL_ReceiveAAISuccessResponseState&quot;,&#xd;
                                                                                &quot;localName&quot;: &quot;SimpleCL_AAISuccessResponseHandlerPolicy&quot;&#xd;
                                                                            },&#xd;
                                                                            &quot;outputType&quot;: &quot;DIRECT&quot;,&#xd;
                                                                            &quot;output&quot;: {&#xd;
                                                                                &quot;parentKeyName&quot;: &quot;SimpleCL_AAISuccessResponseHandlerPolicy&quot;,&#xd;
                                                                                &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                                                                &quot;parentLocalName&quot;: &quot;SimpleCL_ReceiveAAISuccessResponseState&quot;,&#xd;
                                                                                &quot;localName&quot;: &quot;AAISuccessStateOutput&quot;&#xd;
                                                                            }&#xd;
                                                                        }&#xd;
                                                                    }&#xd;
                                                                ]&#xd;
                                                            }&#xd;
                                                        }&#xd;
                                                    }&#xd;
                                                ]&#xd;
                                            },&#xd;
                                            &quot;firstState&quot;: &quot;SimpleCL_ReceiveAAISuccessResponseState&quot;&#xd;
                                        }&#xd;
                                    },&#xd;
                                    {&#xd;
                                        &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;SimpleCL_CDSConfigModifyFailureResponseHandlerPolicy&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                        },&#xd;
                                        &quot;value&quot;: {&#xd;
                                            &quot;policyKey&quot;: {&#xd;
                                                &quot;name&quot;: &quot;SimpleCL_CDSConfigModifyFailureResponseHandlerPolicy&quot;,&#xd;
                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                            },&#xd;
                                            &quot;template&quot;: &quot;Freestyle&quot;,&#xd;
                                            &quot;state&quot;: {&#xd;
                                                &quot;entry&quot;: [&#xd;
                                                    {&#xd;
                                                        &quot;key&quot;: &quot;SimpleCL_CDSConfigModifyFailureResponseState&quot;,&#xd;
                                                        &quot;value&quot;: {&#xd;
                                                            &quot;stateKey&quot;: {&#xd;
                                                                &quot;parentKeyName&quot;: &quot;SimpleCL_CDSConfigModifyFailureResponseHandlerPolicy&quot;,&#xd;
                                                                &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                                                &quot;parentLocalName&quot;: &quot;NULL&quot;,&#xd;
                                                                &quot;localName&quot;: &quot;SimpleCL_CDSConfigModifyFailureResponseState&quot;&#xd;
                                                            },&#xd;
                                                            &quot;trigger&quot;: {&#xd;
                                                                &quot;name&quot;: &quot;SimpleCL_CDSConfigModifyFailureResponseEvent&quot;,&#xd;
                                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                                            },&#xd;
                                                            &quot;stateOutputs&quot;: {&#xd;
                                                                &quot;entry&quot;: [&#xd;
                                                                    {&#xd;
                                                                        &quot;key&quot;: &quot;ConfigModifyFailureResponseOutput&quot;,&#xd;
                                                                        &quot;value&quot;: {&#xd;
                                                                            &quot;key&quot;: {&#xd;
                                                                                &quot;parentKeyName&quot;: &quot;SimpleCL_CDSConfigModifyFailureResponseHandlerPolicy&quot;,&#xd;
                                                                                &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                                                                &quot;parentLocalName&quot;: &quot;SimpleCL_CDSConfigModifyFailureResponseState&quot;,&#xd;
                                                                                &quot;localName&quot;: &quot;ConfigModifyFailureResponseOutput&quot;&#xd;
                                                                            },&#xd;
                                                                            &quot;outgoingEvent&quot;: {&#xd;
                                                                                &quot;name&quot;: &quot;SimpleCL_LogStatusEvent&quot;,&#xd;
                                                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                                                            },&#xd;
                                                                            &quot;nextState&quot;: {&#xd;
                                                                                &quot;parentKeyName&quot;: &quot;NULL&quot;,&#xd;
                                                                                &quot;parentKeyVersion&quot;: &quot;0.0.0&quot;,&#xd;
                                                                                &quot;parentLocalName&quot;: &quot;NULL&quot;,&#xd;
                                                                                &quot;localName&quot;: &quot;NULL&quot;&#xd;
                                                                            }&#xd;
                                                                        }&#xd;
                                                                    }&#xd;
                                                                ]&#xd;
                                                            },&#xd;
                                                            &quot;contextAlbumReference&quot;: [],&#xd;
                                                            &quot;taskSelectionLogic&quot;: {&#xd;
                                                                &quot;key&quot;: &quot;NULL&quot;,&#xd;
                                                                &quot;logicFlavour&quot;: &quot;UNDEFINED&quot;,&#xd;
                                                                &quot;logic&quot;: &quot;&quot;&#xd;
                                                            },&#xd;
                                                            &quot;stateFinalizerLogicMap&quot;: {&#xd;
                                                                &quot;entry&quot;: []&#xd;
                                                            },&#xd;
                                                            &quot;defaultTask&quot;: {&#xd;
                                                                &quot;name&quot;: &quot;SimpleCL_CDSConfigModifyFailureResponseTask&quot;,&#xd;
                                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                                            },&#xd;
                                                            &quot;taskReferences&quot;: {&#xd;
                                                                &quot;entry&quot;: [&#xd;
                                                                    {&#xd;
                                                                        &quot;key&quot;: {&#xd;
                                                                            &quot;name&quot;: &quot;SimpleCL_CDSConfigModifyFailureResponseTask&quot;,&#xd;
                                                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                                                        },&#xd;
                                                                        &quot;value&quot;: {&#xd;
                                                                            &quot;key&quot;: {&#xd;
                                                                                &quot;parentKeyName&quot;: &quot;SimpleCL_CDSConfigModifyFailureResponseHandlerPolicy&quot;,&#xd;
                                                                                &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                                                                &quot;parentLocalName&quot;: &quot;SimpleCL_CDSConfigModifyFailureResponseState&quot;,&#xd;
                                                                                &quot;localName&quot;: &quot;SimpleCL_CDSConfigModifyFailureResponseHandlerPolicy&quot;&#xd;
                                                                            },&#xd;
                                                                            &quot;outputType&quot;: &quot;DIRECT&quot;,&#xd;
                                                                            &quot;output&quot;: {&#xd;
                                                                                &quot;parentKeyName&quot;: &quot;SimpleCL_CDSConfigModifyFailureResponseHandlerPolicy&quot;,&#xd;
                                                                                &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                                                                &quot;parentLocalName&quot;: &quot;SimpleCL_CDSConfigModifyFailureResponseState&quot;,&#xd;
                                                                                &quot;localName&quot;: &quot;ConfigModifyFailureResponseOutput&quot;&#xd;
                                                                            }&#xd;
                                                                        }&#xd;
                                                                    }&#xd;
                                                                ]&#xd;
                                                            }&#xd;
                                                        }&#xd;
                                                    }&#xd;
                                                ]&#xd;
                                            },&#xd;
                                            &quot;firstState&quot;: &quot;SimpleCL_CDSConfigModifyFailureResponseState&quot;&#xd;
                                        }&#xd;
                                    },&#xd;
                                    {&#xd;
                                        &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;SimpleCL_CDSConfigModifySuccessResponseHandlerPolicy&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                        },&#xd;
                                        &quot;value&quot;: {&#xd;
                                            &quot;policyKey&quot;: {&#xd;
                                                &quot;name&quot;: &quot;SimpleCL_CDSConfigModifySuccessResponseHandlerPolicy&quot;,&#xd;
                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                            },&#xd;
                                            &quot;template&quot;: &quot;Freestyle&quot;,&#xd;
                                            &quot;state&quot;: {&#xd;
                                                &quot;entry&quot;: [&#xd;
                                                    {&#xd;
                                                        &quot;key&quot;: &quot;SimpleCL_CDSConfigModifySuccessResponseState&quot;,&#xd;
                                                        &quot;value&quot;: {&#xd;
                                                            &quot;stateKey&quot;: {&#xd;
                                                                &quot;parentKeyName&quot;: &quot;SimpleCL_CDSConfigModifySuccessResponseHandlerPolicy&quot;,&#xd;
                                                                &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                                                &quot;parentLocalName&quot;: &quot;NULL&quot;,&#xd;
                                                                &quot;localName&quot;: &quot;SimpleCL_CDSConfigModifySuccessResponseState&quot;&#xd;
                                                            },&#xd;
                                                            &quot;trigger&quot;: {&#xd;
                                                                &quot;name&quot;: &quot;SimpleCL_CDSConfigModifySuccessResponseEvent&quot;,&#xd;
                                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                                            },&#xd;
                                                            &quot;stateOutputs&quot;: {&#xd;
                                                                &quot;entry&quot;: [&#xd;
                                                                    {&#xd;
                                                                        &quot;key&quot;: &quot;ConfigModifySuccessResponseOutput&quot;,&#xd;
                                                                        &quot;value&quot;: {&#xd;
                                                                            &quot;key&quot;: {&#xd;
                                                                                &quot;parentKeyName&quot;: &quot;SimpleCL_CDSConfigModifySuccessResponseHandlerPolicy&quot;,&#xd;
                                                                                &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                                                                &quot;parentLocalName&quot;: &quot;SimpleCL_CDSConfigModifySuccessResponseState&quot;,&#xd;
                                                                                &quot;localName&quot;: &quot;ConfigModifySuccessResponseOutput&quot;&#xd;
                                                                            },&#xd;
                                                                            &quot;outgoingEvent&quot;: {&#xd;
                                                                                &quot;name&quot;: &quot;SimpleCL_LogStatusEvent&quot;,&#xd;
                                                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                                                            },&#xd;
                                                                            &quot;nextState&quot;: {&#xd;
                                                                                &quot;parentKeyName&quot;: &quot;NULL&quot;,&#xd;
                                                                                &quot;parentKeyVersion&quot;: &quot;0.0.0&quot;,&#xd;
                                                                                &quot;parentLocalName&quot;: &quot;NULL&quot;,&#xd;
                                                                                &quot;localName&quot;: &quot;NULL&quot;&#xd;
                                                                            }&#xd;
                                                                        }&#xd;
                                                                    }&#xd;
                                                                ]&#xd;
                                                            },&#xd;
                                                            &quot;contextAlbumReference&quot;: [],&#xd;
                                                            &quot;taskSelectionLogic&quot;: {&#xd;
                                                                &quot;key&quot;: &quot;NULL&quot;,&#xd;
                                                                &quot;logicFlavour&quot;: &quot;UNDEFINED&quot;,&#xd;
                                                                &quot;logic&quot;: &quot;&quot;&#xd;
                                                            },&#xd;
                                                            &quot;stateFinalizerLogicMap&quot;: {&#xd;
                                                                &quot;entry&quot;: []&#xd;
                                                            },&#xd;
                                                            &quot;defaultTask&quot;: {&#xd;
                                                                &quot;name&quot;: &quot;SimpleCL_CDSConfigModifySuccessResponseTask&quot;,&#xd;
                                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                                            },&#xd;
                                                            &quot;taskReferences&quot;: {&#xd;
                                                                &quot;entry&quot;: [&#xd;
                                                                    {&#xd;
                                                                        &quot;key&quot;: {&#xd;
                                                                            &quot;name&quot;: &quot;SimpleCL_CDSConfigModifySuccessResponseTask&quot;,&#xd;
                                                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                                                        },&#xd;
                                                                        &quot;value&quot;: {&#xd;
                                                                            &quot;key&quot;: {&#xd;
                                                                                &quot;parentKeyName&quot;: &quot;SimpleCL_CDSConfigModifySuccessResponseHandlerPolicy&quot;,&#xd;
                                                                                &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                                                                &quot;parentLocalName&quot;: &quot;SimpleCL_CDSConfigModifySuccessResponseState&quot;,&#xd;
                                                                                &quot;localName&quot;: &quot;SimpleCL_CDSConfigModifySuccessResponseHandlerPolicy&quot;&#xd;
                                                                            },&#xd;
                                                                            &quot;outputType&quot;: &quot;DIRECT&quot;,&#xd;
                                                                            &quot;output&quot;: {&#xd;
                                                                                &quot;parentKeyName&quot;: &quot;SimpleCL_CDSConfigModifySuccessResponseHandlerPolicy&quot;,&#xd;
                                                                                &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                                                                &quot;parentLocalName&quot;: &quot;SimpleCL_CDSConfigModifySuccessResponseState&quot;,&#xd;
                                                                                &quot;localName&quot;: &quot;ConfigModifySuccessResponseOutput&quot;&#xd;
                                                                            }&#xd;
                                                                        }&#xd;
                                                                    }&#xd;
                                                                ]&#xd;
                                                            }&#xd;
                                                        }&#xd;
                                                    }&#xd;
                                                ]&#xd;
                                            },&#xd;
                                            &quot;firstState&quot;: &quot;SimpleCL_CDSConfigModifySuccessResponseState&quot;&#xd;
                                        }&#xd;
                                    },&#xd;
                                    {&#xd;
                                        &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;SimpleCL_VesEventHandlerPolicy&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                        },&#xd;
                                        &quot;value&quot;: {&#xd;
                                            &quot;policyKey&quot;: {&#xd;
                                                &quot;name&quot;: &quot;SimpleCL_VesEventHandlerPolicy&quot;,&#xd;
                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                            },&#xd;
                                            &quot;template&quot;: &quot;Freestyle&quot;,&#xd;
                                            &quot;state&quot;: {&#xd;
                                                &quot;entry&quot;: [&#xd;
                                                    {&#xd;
                                                        &quot;key&quot;: &quot;SimpleCL_ReceiveVesState&quot;,&#xd;
                                                        &quot;value&quot;: {&#xd;
                                                            &quot;stateKey&quot;: {&#xd;
                                                                &quot;parentKeyName&quot;: &quot;SimpleCL_VesEventHandlerPolicy&quot;,&#xd;
                                                                &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                                                &quot;parentLocalName&quot;: &quot;NULL&quot;,&#xd;
                                                                &quot;localName&quot;: &quot;SimpleCL_ReceiveVesState&quot;&#xd;
                                                            },&#xd;
                                                            &quot;trigger&quot;: {&#xd;
                                                                &quot;name&quot;: &quot;SimpleCL_VesEvent&quot;,&#xd;
                                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                                            },&#xd;
                                                            &quot;stateOutputs&quot;: {&#xd;
                                                                &quot;entry&quot;: [&#xd;
                                                                    {&#xd;
                                                                        &quot;key&quot;: &quot;VesOutput&quot;,&#xd;
                                                                        &quot;value&quot;: {&#xd;
                                                                            &quot;key&quot;: {&#xd;
                                                                                &quot;parentKeyName&quot;: &quot;SimpleCL_VesEventHandlerPolicy&quot;,&#xd;
                                                                                &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                                                                &quot;parentLocalName&quot;: &quot;SimpleCL_ReceiveVesState&quot;,&#xd;
                                                                                &quot;localName&quot;: &quot;VesOutput&quot;&#xd;
                                                                            },&#xd;
                                                                            &quot;outgoingEvent&quot;: {&#xd;
                                                                                &quot;name&quot;: &quot;SimpleCL_AAIRequestEvent&quot;,&#xd;
                                                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                                                            },&#xd;
                                                                            &quot;nextState&quot;: {&#xd;
                                                                                &quot;parentKeyName&quot;: &quot;NULL&quot;,&#xd;
                                                                                &quot;parentKeyVersion&quot;: &quot;0.0.0&quot;,&#xd;
                                                                                &quot;parentLocalName&quot;: &quot;NULL&quot;,&#xd;
                                                                                &quot;localName&quot;: &quot;NULL&quot;&#xd;
                                                                            }&#xd;
                                                                        }&#xd;
                                                                    }&#xd;
                                                                ]&#xd;
                                                            },&#xd;
                                                            &quot;contextAlbumReference&quot;: [],&#xd;
                                                            &quot;taskSelectionLogic&quot;: {&#xd;
                                                                &quot;key&quot;: &quot;NULL&quot;,&#xd;
                                                                &quot;logicFlavour&quot;: &quot;UNDEFINED&quot;,&#xd;
                                                                &quot;logic&quot;: &quot;&quot;&#xd;
                                                            },&#xd;
                                                            &quot;stateFinalizerLogicMap&quot;: {&#xd;
                                                                &quot;entry&quot;: []&#xd;
                                                            },&#xd;
                                                            &quot;defaultTask&quot;: {&#xd;
                                                                &quot;name&quot;: &quot;SimpleCL_HandleVesEventTask&quot;,&#xd;
                                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                                            },&#xd;
                                                            &quot;taskReferences&quot;: {&#xd;
                                                                &quot;entry&quot;: [&#xd;
                                                                    {&#xd;
                                                                        &quot;key&quot;: {&#xd;
                                                                            &quot;name&quot;: &quot;SimpleCL_HandleVesEventTask&quot;,&#xd;
                                                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                                                        },&#xd;
                                                                        &quot;value&quot;: {&#xd;
                                                                            &quot;key&quot;: {&#xd;
                                                                                &quot;parentKeyName&quot;: &quot;SimpleCL_VesEventHandlerPolicy&quot;,&#xd;
                                                                                &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                                                                &quot;parentLocalName&quot;: &quot;SimpleCL_ReceiveVesState&quot;,&#xd;
                                                                                &quot;localName&quot;: &quot;SimpleCL_VesEventHandlerPolicy&quot;&#xd;
                                                                            },&#xd;
                                                                            &quot;outputType&quot;: &quot;DIRECT&quot;,&#xd;
                                                                            &quot;output&quot;: {&#xd;
                                                                                &quot;parentKeyName&quot;: &quot;SimpleCL_VesEventHandlerPolicy&quot;,&#xd;
                                                                                &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                                                                &quot;parentLocalName&quot;: &quot;SimpleCL_ReceiveVesState&quot;,&#xd;
                                                                                &quot;localName&quot;: &quot;VesOutput&quot;&#xd;
                                                                            }&#xd;
                                                                        }&#xd;
                                                                    }&#xd;
                                                                ]&#xd;
                                                            }&#xd;
                                                        }&#xd;
                                                    }&#xd;
                                                ]&#xd;
                                            },&#xd;
                                            &quot;firstState&quot;: &quot;SimpleCL_ReceiveVesState&quot;&#xd;
                                        }&#xd;
                                    }&#xd;
                                ]&#xd;
                            }&#xd;
                        },&#xd;
                        &quot;tasks&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                                &quot;name&quot;: &quot;onap.policies.apex.Simplecontrolloop_Tasks&quot;,&#xd;
                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;taskMap&quot;: {&#xd;
                                &quot;entry&quot;: [&#xd;
                                    {&#xd;
                                        &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;SimpleCL_CDSConfigModifyFailureResponseTask&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                        },&#xd;
                                        &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                                &quot;name&quot;: &quot;SimpleCL_CDSConfigModifyFailureResponseTask&quot;,&#xd;
                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                            },&#xd;
                                            &quot;inputFields&quot;: {&#xd;
                                                &quot;entry&quot;: [&#xd;
                                                    {&#xd;
                                                        &quot;key&quot;: &quot;actionIdentifiers&quot;,&#xd;
                                                        &quot;value&quot;: {&#xd;
                                                            &quot;key&quot;: &quot;actionIdentifiers&quot;,&#xd;
                                                            &quot;fieldSchemaKey&quot;: {&#xd;
                                                                &quot;name&quot;: &quot;SimpleCL_CDSActionIdentifiersType&quot;,&#xd;
                                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                                            },&#xd;
                                                            &quot;optional&quot;: false&#xd;
                                                        }&#xd;
                                                    },&#xd;
                                                    {&#xd;
                                                        &quot;key&quot;: &quot;commonHeader&quot;,&#xd;
                                                        &quot;value&quot;: {&#xd;
                                                            &quot;key&quot;: &quot;commonHeader&quot;,&#xd;
                                                            &quot;fieldSchemaKey&quot;: {&#xd;
                                                                &quot;name&quot;: &quot;SimpleCL_CDSFailureResponseCommonHeaderType&quot;,&#xd;
                                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                                            },&#xd;
                                                            &quot;optional&quot;: false&#xd;
                                                        }&#xd;
                                                    },&#xd;
                                                    {&#xd;
                                                        &quot;key&quot;: &quot;payload&quot;,&#xd;
                                                        &quot;value&quot;: {&#xd;
                                                            &quot;key&quot;: &quot;payload&quot;,&#xd;
                                                            &quot;fieldSchemaKey&quot;: {&#xd;
                                                                &quot;name&quot;: &quot;SimpleCL_CDSConfigModifyRequestPayloadType&quot;,&#xd;
                                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                                            },&#xd;
                                                            &quot;optional&quot;: false&#xd;
                                                        }&#xd;
                                                    },&#xd;
                                                    {&#xd;
                                                        &quot;key&quot;: &quot;status&quot;,&#xd;
                                                        &quot;value&quot;: {&#xd;
                                                            &quot;key&quot;: &quot;status&quot;,&#xd;
                                                            &quot;fieldSchemaKey&quot;: {&#xd;
                                                                &quot;name&quot;: &quot;SimpleCL_CDSFailureResponseStatusType&quot;,&#xd;
                                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                                            },&#xd;
                                                            &quot;optional&quot;: false&#xd;
                                                        }&#xd;
                                                    }&#xd;
                                                ]&#xd;
                                            },&#xd;
                                            &quot;outputFields&quot;: {&#xd;
                                                &quot;entry&quot;: [&#xd;
                                                    {&#xd;
                                                        &quot;key&quot;: &quot;message&quot;,&#xd;
                                                        &quot;value&quot;: {&#xd;
                                                            &quot;key&quot;: &quot;message&quot;,&#xd;
                                                            &quot;fieldSchemaKey&quot;: {&#xd;
                                                                &quot;name&quot;: &quot;SimpleStringType&quot;,&#xd;
                                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                                            },&#xd;
                                                            &quot;optional&quot;: false&#xd;
                                                        }&#xd;
                                                    }&#xd;
                                                ]&#xd;
                                            },&#xd;
                                            &quot;taskParameters&quot;: {&#xd;
                                                &quot;entry&quot;: []&#xd;
                                            },&#xd;
                                            &quot;contextAlbumReference&quot;: [&#xd;
                                                {&#xd;
                                                    &quot;name&quot;: &quot;SimpleCL_EventDetailsAlbum&quot;,&#xd;
                                                    &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                                }&#xd;
                                            ],&#xd;
                                            &quot;taskLogic&quot;: {&#xd;
                                                &quot;key&quot;: &quot;TaskLogic&quot;,&#xd;
                                                &quot;logicFlavour&quot;: &quot;JAVASCRIPT&quot;,&#xd;
                                                &quot;logic&quot;: &quot;var uuidType = java.util.UUID;\nvar longType = java.lang.Long;\nvar HashMapType = java.util.HashMap;\n\nvar cdsResponse = executor.inFields;\nvar albumID = cdsResponse.get(\&quot;commonHeader\&quot;).get(\&quot;subRequestId\&quot;);\n\nvar eventDetailsAlbum = executor.getContextAlbum(\&quot;SimpleCL_EventDetailsAlbum\&quot;).get(albumID.toString());\nvar commonEventHeader = eventDetailsAlbum.get(\&quot;commonEventHeader\&quot;);\nvar timestamp = longType(new Date().getTime())\nvar errorMessage = \&quot;CDS operation failed. Error message from CDS - \&quot; + executor.inFields.get(\&quot;status\&quot;).get(\&quot;errorMessage\&quot;);\nsend(commonEventHeader.get(\&quot;eventId\&quot;), \&quot;PNF\&quot;, eventDetailsAlbum.get(\&quot;otherFields\&quot;).get(\&quot;hashMap\&quot;).get(\&quot;pnfName\&quot;), timestamp, \&quot;FINAL_FAILURE\&quot;, \&quot;Failed to process VES event. Reason: \&quot; + errorMessage);\ntrue;\n\nfunction send(id, targetType, targetId, timestamp, status, message) {\n    var logData = &apos;{&apos;\n       +&apos;\&quot;id\&quot; : \&quot;&apos; + id + &apos;\&quot;,&apos;\n       +&apos;\&quot;target\&quot;  : {&apos;\n            +&apos;\&quot;targetType\&quot;  : \&quot;&apos; + targetType + &apos;\&quot;,&apos;\n            +&apos;\&quot;entityInfo\&quot;  : {&apos;\n                +&apos;\&quot;pnf-name\&quot;  : \&quot;&apos; + targetId + &apos;\&quot;&apos;\n            +&apos;}&apos;\n       +&apos;},&apos;\n       +&apos;\&quot;component\&quot;  : {&apos;\n            +&apos;\&quot;name\&quot;  : \&quot;Policy\&quot;,&apos;\n            +&apos;\&quot;flavour\&quot;  : \&quot;Apex-PDP\&quot;,&apos;\n            +&apos;\&quot;timestamp\&quot;  : &apos; + timestamp + &apos;,&apos;\n            +&apos;\&quot;status\&quot;  : \&quot;&apos; + status + &apos;\&quot;,&apos;\n            +&apos;\&quot;message\&quot;  : \&quot;&apos; + message + &apos;\&quot;,&apos;\n            +&apos;\&quot;artifacts\&quot;  : {&apos;\n                +&apos;\&quot;policyName\&quot;  : \&quot;onap.policies.apex.Simplecontrolloop\&quot;,&apos;\n                +&apos;\&quot;policyVersion\&quot;  : \&quot;1.0.0\&quot;&apos;\n            +&apos;}&apos;\n       +&apos;},&apos;\n       +&apos;\&quot;otherFields\&quot;  : {&apos;\n            +&apos;\&quot;useCaseName\&quot;  : \&quot;simple-controlloop-usecase\&quot;&apos;\n       +&apos;}&apos;\n    +&apos;}&apos;;\n\n    executor.logger.info(\&quot;sending the status to log.\&quot;);\n    fireLogEvent(logData);\n}\n\nfunction fireLogEvent(logEvent){\n    var headers = new HashMapType();\n    //headers.put(\&quot;Authorization\&quot; , \&quot;Basic Y2NzZGthcHBzOmNjc2RrYXBwcw==\&quot;);\n    executor.logger.info(\&quot;LogEvent:\&quot;+logEvent);\n    var response = new org.onap.policy.rest.RestManager().post(\n            executor.getParameters().get(\&quot;logUrl\&quot;),\n            \&quot;\&quot;,\n            \&quot;\&quot;,\n            headers,\n            \&quot;application/json\&quot;,\n            logEvent\n    );\n    executor.logger.info(\&quot;DMaaP Response after sending LogEvent: \&quot; + response);\n    return response;\n}&quot;&#xd;
                                            }&#xd;
                                        }&#xd;
                                    },&#xd;
                                    {&#xd;
                                        &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;SimpleCL_CDSConfigModifySuccessResponseTask&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                        },&#xd;
                                        &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                                &quot;name&quot;: &quot;SimpleCL_CDSConfigModifySuccessResponseTask&quot;,&#xd;
                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                            },&#xd;
                                            &quot;inputFields&quot;: {&#xd;
                                                &quot;entry&quot;: [&#xd;
                                                    {&#xd;
                                                        &quot;key&quot;: &quot;actionIdentifiers&quot;,&#xd;
                                                        &quot;value&quot;: {&#xd;
                                                            &quot;key&quot;: &quot;actionIdentifiers&quot;,&#xd;
                                                            &quot;fieldSchemaKey&quot;: {&#xd;
                                                                &quot;name&quot;: &quot;SimpleCL_CDSActionIdentifiersType&quot;,&#xd;
                                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                                            },&#xd;
                                                            &quot;optional&quot;: false&#xd;
                                                        }&#xd;
                                                    },&#xd;
                                                    {&#xd;
                                                        &quot;key&quot;: &quot;commonHeader&quot;,&#xd;
                                                        &quot;value&quot;: {&#xd;
                                                            &quot;key&quot;: &quot;commonHeader&quot;,&#xd;
                                                            &quot;fieldSchemaKey&quot;: {&#xd;
                                                                &quot;name&quot;: &quot;SimpleCL_CDSSuccessResponseCommonHeaderType&quot;,&#xd;
                                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                                            },&#xd;
                                                            &quot;optional&quot;: false&#xd;
                                                        }&#xd;
                                                    },&#xd;
                                                    {&#xd;
                                                        &quot;key&quot;: &quot;payload&quot;,&#xd;
                                                        &quot;value&quot;: {&#xd;
                                                            &quot;key&quot;: &quot;payload&quot;,&#xd;
                                                            &quot;fieldSchemaKey&quot;: {&#xd;
                                                                &quot;name&quot;: &quot;SimpleCL_CDSConfigModifyResponsePayloadType&quot;,&#xd;
                                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                                            },&#xd;
                                                            &quot;optional&quot;: false&#xd;
                                                        }&#xd;
                                                    },&#xd;
                                                    {&#xd;
                                                        &quot;key&quot;: &quot;status&quot;,&#xd;
                                                        &quot;value&quot;: {&#xd;
                                                            &quot;key&quot;: &quot;status&quot;,&#xd;
                                                            &quot;fieldSchemaKey&quot;: {&#xd;
                                                                &quot;name&quot;: &quot;SimpleCL_CDSSuccessResponseStatusType&quot;,&#xd;
                                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                                            },&#xd;
                                                            &quot;optional&quot;: false&#xd;
                                                        }&#xd;
                                                    }&#xd;
                                                ]&#xd;
                                            },&#xd;
                                            &quot;outputFields&quot;: {&#xd;
                                                &quot;entry&quot;: [&#xd;
                                                    {&#xd;
                                                        &quot;key&quot;: &quot;message&quot;,&#xd;
                                                        &quot;value&quot;: {&#xd;
                                                            &quot;key&quot;: &quot;message&quot;,&#xd;
                                                            &quot;fieldSchemaKey&quot;: {&#xd;
                                                                &quot;name&quot;: &quot;SimpleStringType&quot;,&#xd;
                                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                                            },&#xd;
                                                            &quot;optional&quot;: false&#xd;
                                                        }&#xd;
                                                    }&#xd;
                                                ]&#xd;
                                            },&#xd;
                                            &quot;taskParameters&quot;: {&#xd;
                                                &quot;entry&quot;: []&#xd;
                                            },&#xd;
                                            &quot;contextAlbumReference&quot;: [&#xd;
                                                {&#xd;
                                                    &quot;name&quot;: &quot;SimpleCL_EventDetailsAlbum&quot;,&#xd;
                                                    &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                                }&#xd;
                                            ],&#xd;
                                            &quot;taskLogic&quot;: {&#xd;
                                                &quot;key&quot;: &quot;TaskLogic&quot;,&#xd;
                                                &quot;logicFlavour&quot;: &quot;JAVASCRIPT&quot;,&#xd;
                                                &quot;logic&quot;: &quot;var uuidType = java.util.UUID;\nvar longType = java.lang.Long;\nvar HashMapType = java.util.HashMap;\n\nvar cdsResponse = executor.inFields;\nvar albumID = cdsResponse.get(\&quot;commonHeader\&quot;).get(\&quot;subRequestId\&quot;);\nvar eventDetailsAlbum = executor.getContextAlbum(\&quot;SimpleCL_EventDetailsAlbum\&quot;).get(albumID.toString());\nvar commonEventHeader = eventDetailsAlbum.get(\&quot;commonEventHeader\&quot;);\nvar timestamp = longType(new Date().getTime());\n\nsend(commonEventHeader.get(\&quot;eventId\&quot;), \&quot;PNF\&quot;, eventDetailsAlbum.get(\&quot;otherFields\&quot;).get(\&quot;hashMap\&quot;).get(\&quot;pnfName\&quot;), timestamp, \&quot;FINAL_SUCCESS\&quot;, \&quot;Successfully processed the VES event. Hostname is updated.\&quot;)\ntrue;\n\nfunction send(id, targetType, targetId, timestamp, status, message) {\n    var logData = &apos;{&apos;\n       +&apos;\&quot;id\&quot; : \&quot;&apos; + id + &apos;\&quot;,&apos;\n       +&apos;\&quot;target\&quot;  : {&apos;\n            +&apos;\&quot;targetType\&quot;  : \&quot;&apos; + targetType + &apos;\&quot;,&apos;\n            +&apos;\&quot;entityInfo\&quot;  : {&apos;\n                +&apos;\&quot;pnf-name\&quot;  : \&quot;&apos; + targetId + &apos;\&quot;&apos;\n            +&apos;}&apos;\n       +&apos;},&apos;\n       +&apos;\&quot;component\&quot;  : {&apos;\n            +&apos;\&quot;name\&quot;  : \&quot;Policy\&quot;,&apos;\n            +&apos;\&quot;flavour\&quot;  : \&quot;Apex-PDP\&quot;,&apos;\n            +&apos;\&quot;timestamp\&quot;  : &apos; + timestamp + &apos;,&apos;\n            +&apos;\&quot;status\&quot;  : \&quot;&apos; + status + &apos;\&quot;,&apos;\n            +&apos;\&quot;message\&quot;  : \&quot;&apos; + message + &apos;\&quot;,&apos;\n            +&apos;\&quot;artifacts\&quot;  : {&apos;\n                +&apos;\&quot;policyName\&quot;  : \&quot;onap.policies.apex.Simplecontrolloop\&quot;,&apos;\n                +&apos;\&quot;policyVersion\&quot;  : \&quot;1.0.0\&quot;&apos;\n            +&apos;}&apos;\n       +&apos;},&apos;\n       +&apos;\&quot;otherFields\&quot;  : {&apos;\n            +&apos;\&quot;useCaseName\&quot;  : \&quot;simple-controlloop-usecase\&quot;&apos;\n       +&apos;}&apos;\n    +&apos;}&apos;;\n\n    executor.logger.info(\&quot;sending the status to log.\&quot;);\n    fireLogEvent(logData);\n}\n\nfunction fireLogEvent(logEvent){\n    var headers = new HashMapType();\n    //headers.put(\&quot;Authorization\&quot; , \&quot;Basic Y2NzZGthcHBzOmNjc2RrYXBwcw==\&quot;);\n    executor.logger.info(\&quot;LogEvent:\&quot;+logEvent);\n    var response = new org.onap.policy.rest.RestManager().post(\n            executor.getParameters().get(\&quot;logUrl\&quot;),\n            \&quot;\&quot;,\n            \&quot;\&quot;,\n            headers,\n            \&quot;application/json\&quot;,\n            logEvent\n    );\n    executor.logger.info(\&quot;DMaaP Response after sending LogEvent: \&quot; + response);\n    return response;\n}&quot;&#xd;
                                            }&#xd;
                                        }&#xd;
                                    },&#xd;
                                    {&#xd;
                                        &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;SimpleCL_HandleAAIFailureResponseTask&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                        },&#xd;
                                        &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                                &quot;name&quot;: &quot;SimpleCL_HandleAAIFailureResponseTask&quot;,&#xd;
                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                            },&#xd;
                                            &quot;inputFields&quot;: {&#xd;
                                                &quot;entry&quot;: [&#xd;
                                                    {&#xd;
                                                        &quot;key&quot;: &quot;requestError&quot;,&#xd;
                                                        &quot;value&quot;: {&#xd;
                                                            &quot;key&quot;: &quot;requestError&quot;,&#xd;
                                                            &quot;fieldSchemaKey&quot;: {&#xd;
                                                                &quot;name&quot;: &quot;SimpleCL_AAIRequestErrorType&quot;,&#xd;
                                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                                            },&#xd;
                                                            &quot;optional&quot;: false&#xd;
                                                        }&#xd;
                                                    }&#xd;
                                                ]&#xd;
                                            },&#xd;
                                            &quot;outputFields&quot;: {&#xd;
                                                &quot;entry&quot;: [&#xd;
                                                    {&#xd;
                                                        &quot;key&quot;: &quot;message&quot;,&#xd;
                                                        &quot;value&quot;: {&#xd;
                                                            &quot;key&quot;: &quot;message&quot;,&#xd;
                                                            &quot;fieldSchemaKey&quot;: {&#xd;
                                                                &quot;name&quot;: &quot;SimpleStringType&quot;,&#xd;
                                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                                            },&#xd;
                                                            &quot;optional&quot;: false&#xd;
                                                        }&#xd;
                                                    }&#xd;
                                                ]&#xd;
                                            },&#xd;
                                            &quot;taskParameters&quot;: {&#xd;
                                                &quot;entry&quot;: []&#xd;
                                            },&#xd;
                                            &quot;contextAlbumReference&quot;: [&#xd;
                                                {&#xd;
                                                    &quot;name&quot;: &quot;SimpleCL_EventDetailsAlbum&quot;,&#xd;
                                                    &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                                }&#xd;
                                            ],&#xd;
                                            &quot;taskLogic&quot;: {&#xd;
                                                &quot;key&quot;: &quot;TaskLogic&quot;,&#xd;
                                                &quot;logicFlavour&quot;: &quot;JAVASCRIPT&quot;,&#xd;
                                                &quot;logic&quot;: &quot;var uuidType = java.util.UUID;\nvar longType = java.lang.Long;\nvar HashMapType = java.util.HashMap;\n\nvar aaiErrorMessage = \&quot;AAI operation failed. Error message from AAI - \&quot; + executor.inFields.get(\&quot;requestError\&quot;).get(\&quot;serviceException\&quot;).get(\&quot;text\&quot;);\nvar timestamp = longType(new Date().getTime());\n\n//Sending messageId received from AAI error message since eventId is not available in this task logic\nsend(executor.inFields.get(\&quot;requestError\&quot;).get(\&quot;serviceException\&quot;).get(\&quot;messageId\&quot;), \&quot;PNF\&quot;, \&quot;N/A\&quot;, timestamp, \&quot;FINAL_FAILURE\&quot;, \&quot;Failed to process VES event. Reason: \&quot; + aaiErrorMessage)\ntrue;\n\nfunction send(id, targetType, targetId, timestamp, status, message) {\n    var logData = &apos;{&apos;\n       +&apos;\&quot;id\&quot; : \&quot;&apos; + id + &apos;\&quot;,&apos;\n       +&apos;\&quot;target\&quot;  : {&apos;\n            +&apos;\&quot;targetType\&quot;  : \&quot;&apos; + targetType + &apos;\&quot;,&apos;\n            +&apos;\&quot;entityInfo\&quot;  : {&apos;\n                +&apos;\&quot;pnf-name\&quot;  : \&quot;&apos; + targetId + &apos;\&quot;&apos;\n            +&apos;}&apos;\n       +&apos;},&apos;\n       +&apos;\&quot;component\&quot;  : {&apos;\n            +&apos;\&quot;name\&quot;  : \&quot;Policy\&quot;,&apos;\n            +&apos;\&quot;flavour\&quot;  : \&quot;Apex-PDP\&quot;,&apos;\n            +&apos;\&quot;timestamp\&quot;  : &apos; + timestamp + &apos;,&apos;\n            +&apos;\&quot;status\&quot;  : \&quot;&apos; + status + &apos;\&quot;,&apos;\n            +&apos;\&quot;message\&quot;  : \&quot;&apos; + message + &apos;\&quot;,&apos;\n            +&apos;\&quot;artifacts\&quot;  : {&apos;\n                +&apos;\&quot;policyName\&quot;  : \&quot;onap.policies.apex.Simplecontrolloop\&quot;,&apos;\n                +&apos;\&quot;policyVersion\&quot;  : \&quot;1.0.0\&quot;&apos;\n            +&apos;}&apos;\n       +&apos;},&apos;\n       +&apos;\&quot;otherFields\&quot;  : {&apos;\n            +&apos;\&quot;useCaseName\&quot;  : \&quot;simple-controlloop-usecase\&quot;&apos;\n       +&apos;}&apos;\n    +&apos;}&apos;;\n\n    executor.logger.info(\&quot;sending the status to log.\&quot;);\n    fireLogEvent(logData);\n}\n\nfunction fireLogEvent(logEvent){\n    var headers = new HashMapType();\n    //headers.put(\&quot;Authorization\&quot; , \&quot;Basic Y2NzZGthcHBzOmNjc2RrYXBwcw==\&quot;);\n    executor.logger.info(\&quot;LogEvent:\&quot;+logEvent);\n    var response = new org.onap.policy.rest.RestManager().post(\n            executor.getParameters().get(\&quot;logUrl\&quot;),\n            \&quot;\&quot;,\n            \&quot;\&quot;,\n            headers,\n            \&quot;application/json\&quot;,\n            logEvent\n    );\n    executor.logger.info(\&quot;DMaaP Response after sending LogEvent: \&quot; + response);\n    return response;\n}&quot;&#xd;
                                            }&#xd;
                                        }&#xd;
                                    },&#xd;
                                    {&#xd;
                                        &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;SimpleCL_HandleAAISuccessResponseTask&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                        },&#xd;
                                        &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                                &quot;name&quot;: &quot;SimpleCL_HandleAAISuccessResponseTask&quot;,&#xd;
                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                            },&#xd;
                                            &quot;inputFields&quot;: {&#xd;
                                                &quot;entry&quot;: [&#xd;
                                                    {&#xd;
                                                        &quot;key&quot;: &quot;equip-model&quot;,&#xd;
                                                        &quot;value&quot;: {&#xd;
                                                            &quot;key&quot;: &quot;equip-model&quot;,&#xd;
                                                            &quot;fieldSchemaKey&quot;: {&#xd;
                                                                &quot;name&quot;: &quot;SimpleStringType&quot;,&#xd;
                                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                                            },&#xd;
                                                            &quot;optional&quot;: false&#xd;
                                                        }&#xd;
                                                    },&#xd;
                                                    {&#xd;
                                                        &quot;key&quot;: &quot;equip-type&quot;,&#xd;
                                                        &quot;value&quot;: {&#xd;
                                                            &quot;key&quot;: &quot;equip-type&quot;,&#xd;
                                                            &quot;fieldSchemaKey&quot;: {&#xd;
                                                                &quot;name&quot;: &quot;SimpleStringType&quot;,&#xd;
                                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                                            },&#xd;
                                                            &quot;optional&quot;: false&#xd;
                                                        }&#xd;
                                                    },&#xd;
                                                    {&#xd;
                                                        &quot;key&quot;: &quot;equip-vendor&quot;,&#xd;
                                                        &quot;value&quot;: {&#xd;
                                                            &quot;key&quot;: &quot;equip-vendor&quot;,&#xd;
                                                            &quot;fieldSchemaKey&quot;: {&#xd;
                                                                &quot;name&quot;: &quot;SimpleStringType&quot;,&#xd;
                                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                                            },&#xd;
                                                            &quot;optional&quot;: false&#xd;
                                                        }&#xd;
                                                    },&#xd;
                                                    {&#xd;
                                                        &quot;key&quot;: &quot;in-maint&quot;,&#xd;
                                                        &quot;value&quot;: {&#xd;
                                                            &quot;key&quot;: &quot;in-maint&quot;,&#xd;
                                                            &quot;fieldSchemaKey&quot;: {&#xd;
                                                                &quot;name&quot;: &quot;SimpleBooleanType&quot;,&#xd;
                                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                                            },&#xd;
                                                            &quot;optional&quot;: false&#xd;
                                                        }&#xd;
                                                    },&#xd;
                                                    {&#xd;
                                                        &quot;key&quot;: &quot;ipaddress-v4-oam&quot;,&#xd;
                                                        &quot;value&quot;: {&#xd;
                                                            &quot;key&quot;: &quot;ipaddress-v4-oam&quot;,&#xd;
                                                            &quot;fieldSchemaKey&quot;: {&#xd;
                                                                &quot;name&quot;: &quot;SimpleStringType&quot;,&#xd;
                                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                                            },&#xd;
                                                            &quot;optional&quot;: false&#xd;
                                                        }&#xd;
                                                    },&#xd;
                                                    {&#xd;
                                                        &quot;key&quot;: &quot;ipaddress-v6-oam&quot;,&#xd;
                                                        &quot;value&quot;: {&#xd;
                                                            &quot;key&quot;: &quot;ipaddress-v6-oam&quot;,&#xd;
                                                            &quot;fieldSchemaKey&quot;: {&#xd;
                                                                &quot;name&quot;: &quot;SimpleStringType&quot;,&#xd;
                                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                                            },&#xd;
                                                            &quot;optional&quot;: false&#xd;
                                                        }&#xd;
                                                    },&#xd;
                                                    {&#xd;
                                                        &quot;key&quot;: &quot;management-option&quot;,&#xd;
                                                        &quot;value&quot;: {&#xd;
                                                            &quot;key&quot;: &quot;management-option&quot;,&#xd;
                                                            &quot;fieldSchemaKey&quot;: {&#xd;
                                                                &quot;name&quot;: &quot;SimpleStringType&quot;,&#xd;
                                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                                            },&#xd;
                                                            &quot;optional&quot;: false&#xd;
                                                        }&#xd;
                                                    },&#xd;
                                                    {&#xd;
                                                        &quot;key&quot;: &quot;pnf-id&quot;,&#xd;
                                                        &quot;value&quot;: {&#xd;
                                                            &quot;key&quot;: &quot;pnf-id&quot;,&#xd;
                                                            &quot;fieldSchemaKey&quot;: {&#xd;
                                                                &quot;name&quot;: &quot;SimpleStringType&quot;,&#xd;
                                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                                            },&#xd;
                                                            &quot;optional&quot;: false&#xd;
                                                        }&#xd;
                                                    },&#xd;
                                                    {&#xd;
                                                        &quot;key&quot;: &quot;pnf-name&quot;,&#xd;
                                                        &quot;value&quot;: {&#xd;
                                                            &quot;key&quot;: &quot;pnf-name&quot;,&#xd;
                                                            &quot;fieldSchemaKey&quot;: {&#xd;
                                                                &quot;name&quot;: &quot;SimpleStringType&quot;,&#xd;
                                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                                            },&#xd;
                                                            &quot;optional&quot;: false&#xd;
                                                        }&#xd;
                                                    },&#xd;
                                                    {&#xd;
                                                        &quot;key&quot;: &quot;pnf-name2&quot;,&#xd;
                                                        &quot;value&quot;: {&#xd;
                                                            &quot;key&quot;: &quot;pnf-name2&quot;,&#xd;
                                                            &quot;fieldSchemaKey&quot;: {&#xd;
                                                                &quot;name&quot;: &quot;SimpleStringType&quot;,&#xd;
                                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                                            },&#xd;
                                                            &quot;optional&quot;: false&#xd;
                                                        }&#xd;
                                                    },&#xd;
                                                    {&#xd;
                                                        &quot;key&quot;: &quot;resource-version&quot;,&#xd;
                                                        &quot;value&quot;: {&#xd;
                                                            &quot;key&quot;: &quot;resource-version&quot;,&#xd;
                                                            &quot;fieldSchemaKey&quot;: {&#xd;
                                                                &quot;name&quot;: &quot;SimpleStringType&quot;,&#xd;
                                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                                            },&#xd;
                                                            &quot;optional&quot;: false&#xd;
                                                        }&#xd;
                                                    }&#xd;
                                                ]&#xd;
                                            },&#xd;
                                            &quot;outputFields&quot;: {&#xd;
                                                &quot;entry&quot;: [&#xd;
                                                    {&#xd;
                                                        &quot;key&quot;: &quot;actionIdentifiers&quot;,&#xd;
                                                        &quot;value&quot;: {&#xd;
                                                            &quot;key&quot;: &quot;actionIdentifiers&quot;,&#xd;
                                                            &quot;fieldSchemaKey&quot;: {&#xd;
                                                                &quot;name&quot;: &quot;SimpleCL_CDSActionIdentifiersType&quot;,&#xd;
                                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                                            },&#xd;
                                                            &quot;optional&quot;: false&#xd;
                                                        }&#xd;
                                                    },&#xd;
                                                    {&#xd;
                                                        &quot;key&quot;: &quot;commonHeader&quot;,&#xd;
                                                        &quot;value&quot;: {&#xd;
                                                            &quot;key&quot;: &quot;commonHeader&quot;,&#xd;
                                                            &quot;fieldSchemaKey&quot;: {&#xd;
                                                                &quot;name&quot;: &quot;SimpleCL_CDSRequestCommonHeaderType&quot;,&#xd;
                                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                                            },&#xd;
                                                            &quot;optional&quot;: false&#xd;
                                                        }&#xd;
                                                    },&#xd;
                                                    {&#xd;
                                                        &quot;key&quot;: &quot;payload&quot;,&#xd;
                                                        &quot;value&quot;: {&#xd;
                                                            &quot;key&quot;: &quot;payload&quot;,&#xd;
                                                            &quot;fieldSchemaKey&quot;: {&#xd;
                                                                &quot;name&quot;: &quot;SimpleCL_CDSConfigModifyRequestPayloadType&quot;,&#xd;
                                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                                            },&#xd;
                                                            &quot;optional&quot;: false&#xd;
                                                        }&#xd;
                                                    }&#xd;
                                                ]&#xd;
                                            },&#xd;
                                            &quot;taskParameters&quot;: {&#xd;
                                                &quot;entry&quot;: []&#xd;
                                            },&#xd;
                                            &quot;contextAlbumReference&quot;: [&#xd;
                                                {&#xd;
                                                    &quot;name&quot;: &quot;SimpleCL_EventDetailsAlbum&quot;,&#xd;
                                                    &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                                }&#xd;
                                            ],&#xd;
                                            &quot;taskLogic&quot;: {&#xd;
                                                &quot;key&quot;: &quot;TaskLogic&quot;,&#xd;
                                                &quot;logicFlavour&quot;: &quot;JAVASCRIPT&quot;,&#xd;
                                                &quot;logic&quot;: &quot;var uuidType = java.util.UUID;\nvar HashMapType = java.util.HashMap;\nvar longType = java.lang.Long;\n\nvar pnfDetails = executor.inFields;\nvar albumID = pnfDetails.get(\&quot;pnf-id\&quot;);\nvar eventDetailsAlbum = executor.getContextAlbum(\&quot;SimpleCL_EventDetailsAlbum\&quot;).get(albumID.toString());\nexecutor.logger.info(\&quot;HandleAAISuccessResponseTask extracted context album - \&quot; + albumID.toString() + \&quot;::\&quot; + eventDetailsAlbum);\n\nvar commonEventHeader = eventDetailsAlbum.get(\&quot;commonEventHeader\&quot;);\nvar otherFieldsMap = eventDetailsAlbum.get(\&quot;otherFields\&quot;).get(\&quot;hashMap\&quot;);\n\nvar targetEntityName = executor.inFields.get(\&quot;pnf-name\&quot;)\nvar logMessage = \&quot;\&quot;;\nvar existingHostname = executor.inFields.get(\&quot;pnf-name2\&quot;);\nvar hostnameInVesEvent = otherFieldsMap.get(\&quot;hostname\&quot;);\n\nvar albumSchemaHelper = executor.getContextAlbum(\&quot;SimpleCL_EventDetailsAlbum\&quot;).getSchemaHelper();\nvar target = albumSchemaHelper.createNewSubInstance(\&quot;target\&quot;);\ntarget.put(\&quot;targetType\&quot;,  \&quot;PNF\&quot;)\nvar entityInfo = albumSchemaHelper.createNewSubInstance(\&quot;entityInfo\&quot;);\nentityInfo.put(\&quot;name\&quot;,targetEntityName);\ntarget.put(\&quot;entityInfo\&quot;, entityInfo);\neventDetailsAlbum.put(\&quot;target\&quot;, target);\n\nvar returnVal = true;\nvar timestamp = longType(new Date().getTime());\nif ((String(hostnameInVesEvent) != \&quot;UNDEFINED\&quot;) &amp;&amp; (String(existingHostname) != String(hostnameInVesEvent))) {\n    logMessage = \&quot;Hostname available in AAI does not match with the hostname received in the VES Event.\&quot;;\n    returnVal = false\n    send(commonEventHeader.get(\&quot;eventId\&quot;), \&quot;PNF\&quot;, otherFieldsMap.get(\&quot;pnfName\&quot;), timestamp, \&quot;FINAL_FAILURE\&quot;, \&quot;Failed to process VES event. Reason: \&quot; + logMessage)\n} else {\n    logMessage = \&quot;Received response from AAI successfully. Hostname in AAI matches with the one in Ves event. Going to make the update-config request to CDS.\&quot;;\n\n    var commonHeader = executor.subject.getOutFieldSchemaHelper(\&quot;commonHeader\&quot;).createNewInstance();\n    commonHeader.put(\&quot;subRequestId\&quot;, albumID.toString());\n    commonHeader.put(\&quot;requestId\&quot;, commonEventHeader.get(\&quot;eventId\&quot;));\n    commonHeader.put(\&quot;originatorId\&quot;, \&quot;POLICY\&quot;);\n\n    var blueprintName = \&quot;pnf-test-cba\&quot;;\n    var blueprintVersion = \&quot;1.0.0\&quot;;\n    var newHostname = \&quot;host\&quot; + Math.random().toString(36).substring(7);\n    eventDetailsAlbum.put(\&quot;generatedHostname\&quot;, newHostname);\n\n    var actionIdentifiers = executor.subject.getOutFieldSchemaHelper(\&quot;actionIdentifiers\&quot;).createNewInstance();\n    actionIdentifiers.put(\&quot;mode\&quot;, \&quot;sync\&quot;);\n    actionIdentifiers.put(\&quot;blueprintName\&quot;, blueprintName);\n    actionIdentifiers.put(\&quot;blueprintVersion\&quot;, blueprintVersion);\n    actionIdentifiers.put(\&quot;actionName\&quot;, \&quot;update-config\&quot;);\n\n    var payloadEntry = executor.subject.getOutFieldSchemaHelper(\&quot;payload\&quot;).createNewSubInstance(\&quot;CDSConfigModifyRequestPayloadEntry\&quot;);\n    payloadEntry.put(\&quot;hostname\&quot;,  newHostname)\n    payloadEntry.put(\&quot;IP\&quot;, executor.inFields.get(\&quot;ipaddress-v4-oam\&quot;));\n    payloadEntry.put(\&quot;pnfName\&quot;, otherFieldsMap.get(\&quot;pnfName\&quot;));\n\n    var payload = executor.subject.getOutFieldSchemaHelper(\&quot;payload\&quot;).createNewInstance();\n    payload.put(\&quot;update_DasH_config_DasH_request\&quot;, payloadEntry);\n\n    executor.outFields.put(\&quot;commonHeader\&quot;, commonHeader);\n    executor.outFields.put(\&quot;actionIdentifiers\&quot;, actionIdentifiers);\n    executor.outFields.put(\&quot;payload\&quot;, payload);\n\n    send(commonEventHeader.get(\&quot;eventId\&quot;), \&quot;PNF\&quot;, otherFieldsMap.get(\&quot;pnfName\&quot;), timestamp, \&quot;SUCCESS\&quot;, logMessage)\n}\n\nreturnVal;\n\nfunction send(id, targetType, targetId, timestamp, status, message) {\n    var logData = &apos;{&apos;\n       +&apos;\&quot;id\&quot; : \&quot;&apos; + id + &apos;\&quot;,&apos;\n       +&apos;\&quot;target\&quot;  : {&apos;\n            +&apos;\&quot;targetType\&quot;  : \&quot;&apos; + targetType + &apos;\&quot;,&apos;\n            +&apos;\&quot;entityInfo\&quot;  : {&apos;\n                +&apos;\&quot;pnf-name\&quot;  : \&quot;&apos; + targetId + &apos;\&quot;&apos;\n            +&apos;}&apos;\n       +&apos;},&apos;\n       +&apos;\&quot;component\&quot;  : {&apos;\n            +&apos;\&quot;name\&quot;  : \&quot;Policy\&quot;,&apos;\n            +&apos;\&quot;flavour\&quot;  : \&quot;Apex-PDP\&quot;,&apos;\n            +&apos;\&quot;timestamp\&quot;  : &apos; + timestamp + &apos;,&apos;\n            +&apos;\&quot;status\&quot;  : \&quot;&apos; + status + &apos;\&quot;,&apos;\n            +&apos;\&quot;message\&quot;  : \&quot;&apos; + message + &apos;\&quot;,&apos;\n            +&apos;\&quot;artifacts\&quot;  : {&apos;\n                +&apos;\&quot;policyName\&quot;  : \&quot;onap.policies.apex.Simplecontrolloop\&quot;,&apos;\n                +&apos;\&quot;policyVersion\&quot;  : \&quot;1.0.0\&quot;&apos;\n            +&apos;}&apos;\n       +&apos;},&apos;\n       +&apos;\&quot;otherFields\&quot;  : {&apos;\n            +&apos;\&quot;useCaseName\&quot;  : \&quot;simple-controlloop-usecase\&quot;&apos;\n       +&apos;}&apos;\n    +&apos;}&apos;;\n\n    executor.logger.info(\&quot;sending the status to log.\&quot;);\n    fireLogEvent(logData);\n}\n\nfunction fireLogEvent(logEvent){\n    var headers = new HashMapType();\n    //headers.put(\&quot;Authorization\&quot; , \&quot;Basic Y2NzZGthcHBzOmNjc2RrYXBwcw==\&quot;);\n    executor.logger.info(\&quot;LogEvent:\&quot;+logEvent);\n    var response = new org.onap.policy.rest.RestManager().post(\n            executor.getParameters().get(\&quot;logUrl\&quot;),\n            \&quot;\&quot;,\n            \&quot;\&quot;,\n            headers,\n            \&quot;application/json\&quot;,\n            logEvent\n    );\n    executor.logger.info(\&quot;DMaaP Response after sending LogEvent: \&quot; + response);\n    return response;\n}&quot;&#xd;
                                            }&#xd;
                                        }&#xd;
                                    },&#xd;
                                    {&#xd;
                                        &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;SimpleCL_HandleVesEventTask&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                        },&#xd;
                                        &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                                &quot;name&quot;: &quot;SimpleCL_HandleVesEventTask&quot;,&#xd;
                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                            },&#xd;
                                            &quot;inputFields&quot;: {&#xd;
                                                &quot;entry&quot;: [&#xd;
                                                    {&#xd;
                                                        &quot;key&quot;: &quot;event&quot;,&#xd;
                                                        &quot;value&quot;: {&#xd;
                                                            &quot;key&quot;: &quot;event&quot;,&#xd;
                                                            &quot;fieldSchemaKey&quot;: {&#xd;
                                                                &quot;name&quot;: &quot;SimpleCL_VesEventType&quot;,&#xd;
                                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                                            },&#xd;
                                                            &quot;optional&quot;: false&#xd;
                                                        }&#xd;
                                                    }&#xd;
                                                ]&#xd;
                                            },&#xd;
                                            &quot;outputFields&quot;: {&#xd;
                                                &quot;entry&quot;: [&#xd;
                                                    {&#xd;
                                                        &quot;key&quot;: &quot;aaifield&quot;,&#xd;
                                                        &quot;value&quot;: {&#xd;
                                                            &quot;key&quot;: &quot;aaifield&quot;,&#xd;
                                                            &quot;fieldSchemaKey&quot;: {&#xd;
                                                                &quot;name&quot;: &quot;SimpleStringType&quot;,&#xd;
                                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                                            },&#xd;
                                                            &quot;optional&quot;: false&#xd;
                                                        }&#xd;
                                                    }&#xd;
                                                ]&#xd;
                                            },&#xd;
                                            &quot;taskParameters&quot;: {&#xd;
                                                &quot;entry&quot;: []&#xd;
                                            },&#xd;
                                            &quot;contextAlbumReference&quot;: [&#xd;
                                                {&#xd;
                                                    &quot;name&quot;: &quot;SimpleCL_EventDetailsAlbum&quot;,&#xd;
                                                    &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                                }&#xd;
                                            ],&#xd;
                                            &quot;taskLogic&quot;: {&#xd;
                                                &quot;key&quot;: &quot;TaskLogic&quot;,&#xd;
                                                &quot;logicFlavour&quot;: &quot;JAVASCRIPT&quot;,&#xd;
                                                &quot;logic&quot;: &quot;var uuidType = java.util.UUID;\nvar HashMapType = java.util.HashMap;\nvar longType = java.lang.Long;\n\nvar eventDetailsAlbum = executor.getContextAlbum(\&quot;SimpleCL_EventDetailsAlbum\&quot;).getSchemaHelper().createNewInstance();\nvar returnValue = true;\n\nvar event = executor.inFields.get(\&quot;event\&quot;);\nexecutor.logger.info(\&quot;HandleVesEventTask processing VES event - \&quot; + event);\n\nvar commonEventHeader = event.get(\&quot;commonEventHeader\&quot;);\nvar otherFields = event.get(\&quot;otherFields\&quot;);\n// albumID will be used to fetch info from our album later. Storing event data in album by sourceId / AAI pnf-id, the same will be sent to CDS request payload as subRequestId\nvar albumID = commonEventHeader.get(\&quot;sourceId\&quot;);\n// save the event processing start time in apex\ncommonEventHeader.put(\&quot;startEpochMicrosec\&quot;, longType(new Date().getTime()));\n//save the incoming event details to album\neventDetailsAlbum.put(\&quot;commonEventHeader\&quot;, commonEventHeader);\neventDetailsAlbum.put(\&quot;otherFields\&quot;, otherFields);\nexecutor.getContextAlbum(\&quot;SimpleCL_EventDetailsAlbum\&quot;).put(albumID.toString(), eventDetailsAlbum);\nexecutor.logger.info(\&quot;HandleVesEventTask storing context album - \&quot; + albumID.toString() + \&quot;::\&quot; + eventDetailsAlbum);\n\nexecutor.getExecutionProperties().setProperty(\&quot;pnfName\&quot;, otherFields.get(\&quot;hashMap\&quot;).get(\&quot;pnfName\&quot;));\n\nvar timestamp = longType(new Date().getTime());\nsend(eventDetailsAlbum.get(\&quot;commonEventHeader\&quot;).get(\&quot;eventId\&quot;), \&quot;PNF\&quot;, otherFields.get(\&quot;hashMap\&quot;).get(\&quot;pnfName\&quot;), timestamp, \&quot;ACTIVE\&quot;, \&quot;VES event has been received. Going to fetch details from AAI.\&quot;)\nexecutor.logger.info(executor.outFields);\nreturnValue;\n\nfunction send(id, targetType, targetId, timestamp, status, message) {\n    var logData = &apos;{&apos;\n       +&apos;\&quot;id\&quot; : \&quot;&apos; + id + &apos;\&quot;,&apos;\n       +&apos;\&quot;target\&quot;  : {&apos;\n            +&apos;\&quot;targetType\&quot;  : \&quot;&apos; + targetType + &apos;\&quot;,&apos;\n            +&apos;\&quot;entityInfo\&quot;  : {&apos;\n                +&apos;\&quot;pnf-name\&quot;  : \&quot;&apos; + targetId + &apos;\&quot;&apos;\n            +&apos;}&apos;\n       +&apos;},&apos;\n       +&apos;\&quot;component\&quot;  : {&apos;\n            +&apos;\&quot;name\&quot;  : \&quot;Policy\&quot;,&apos;\n            +&apos;\&quot;flavour\&quot;  : \&quot;Apex-PDP\&quot;,&apos;\n            +&apos;\&quot;timestamp\&quot;  : &apos; + timestamp + &apos;,&apos;\n            +&apos;\&quot;status\&quot;  : \&quot;&apos; + status + &apos;\&quot;,&apos;\n            +&apos;\&quot;message\&quot;  : \&quot;&apos; + message + &apos;\&quot;,&apos;\n            +&apos;\&quot;artifacts\&quot;  : {&apos;\n                +&apos;\&quot;policyName\&quot;  : \&quot;onap.policies.apex.Simplecontrolloop\&quot;,&apos;\n                +&apos;\&quot;policyVersion\&quot;  : \&quot;1.0.0\&quot;&apos;\n            +&apos;}&apos;\n       +&apos;},&apos;\n       +&apos;\&quot;otherFields\&quot;  : {&apos;\n            +&apos;\&quot;useCaseName\&quot;  : \&quot;simple-controlloop-usecase\&quot;&apos;\n       +&apos;}&apos;\n    +&apos;}&apos;;\n\n    executor.logger.info(\&quot;sending the status to log.\&quot;);\n    fireLogEvent(logData);\n}\n\nfunction fireLogEvent(logEvent){\n    var headers = new HashMapType();\n    //headers.put(\&quot;Authorization\&quot; , \&quot;Basic Y2NzZGthcHBzOmNjc2RrYXBwcw==\&quot;);\n    executor.logger.info(\&quot;LogEvent:\&quot;+logEvent);\n    var response = new org.onap.policy.rest.RestManager().post(\n            executor.getParameters().get(\&quot;logUrl\&quot;),\n            \&quot;\&quot;,\n            \&quot;\&quot;,\n            headers,\n            \&quot;application/json\&quot;,\n            logEvent\n    );\n    executor.logger.info(\&quot;DMaaP Response after sending LogEvent: \&quot; + response);\n    return response;\n}&quot;&#xd;
                                            }&#xd;
                                        }&#xd;
                                    }&#xd;
                                ]&#xd;
                            }&#xd;
                        },&#xd;
                        &quot;events&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                                &quot;name&quot;: &quot;onap.policies.apex.Simplecontrolloop_Events&quot;,&#xd;
                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;eventMap&quot;: {&#xd;
                                &quot;entry&quot;: [&#xd;
                                    {&#xd;
                                        &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;SimpleCL_AAIFailureResponseEvent&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                        },&#xd;
                                        &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                                &quot;name&quot;: &quot;SimpleCL_AAIFailureResponseEvent&quot;,&#xd;
                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                            },&#xd;
                                            &quot;nameSpace&quot;: &quot;org.onap.policy.apex.simplecontrolloop&quot;,&#xd;
                                            &quot;source&quot;: &quot;AAI&quot;,&#xd;
                                            &quot;target&quot;: &quot;APEX&quot;,&#xd;
                                            &quot;parameter&quot;: {&#xd;
                                                &quot;entry&quot;: [&#xd;
                                                    {&#xd;
                                                        &quot;key&quot;: &quot;requestError&quot;,&#xd;
                                                        &quot;value&quot;: {&#xd;
                                                            &quot;key&quot;: &quot;requestError&quot;,&#xd;
                                                            &quot;fieldSchemaKey&quot;: {&#xd;
                                                                &quot;name&quot;: &quot;SimpleCL_AAIRequestErrorType&quot;,&#xd;
                                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                                            },&#xd;
                                                            &quot;optional&quot;: false&#xd;
                                                        }&#xd;
                                                    }&#xd;
                                                ]&#xd;
                                            },&#xd;
                                            &quot;toscaPolicyState&quot;: &quot;EXIT_FAILURE&quot;&#xd;
                                        }&#xd;
                                    },&#xd;
                                    {&#xd;
                                        &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;SimpleCL_AAIRequestEvent&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                        },&#xd;
                                        &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                                &quot;name&quot;: &quot;SimpleCL_AAIRequestEvent&quot;,&#xd;
                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                            },&#xd;
                                            &quot;nameSpace&quot;: &quot;org.onap.policy.apex.simplecontrolloop&quot;,&#xd;
                                            &quot;source&quot;: &quot;APEX&quot;,&#xd;
                                            &quot;target&quot;: &quot;AAI&quot;,&#xd;
                                            &quot;parameter&quot;: {&#xd;
                                                &quot;entry&quot;: [&#xd;
                                                    {&#xd;
                                                        &quot;key&quot;: &quot;aaifield&quot;,&#xd;
                                                        &quot;value&quot;: {&#xd;
                                                            &quot;key&quot;: &quot;aaifield&quot;,&#xd;
                                                            &quot;fieldSchemaKey&quot;: {&#xd;
                                                                &quot;name&quot;: &quot;SimpleStringType&quot;,&#xd;
                                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                                            },&#xd;
                                                            &quot;optional&quot;: false&#xd;
                                                        }&#xd;
                                                    }&#xd;
                                                ]&#xd;
                                            },&#xd;
                                            &quot;toscaPolicyState&quot;: &quot;&quot;&#xd;
                                        }&#xd;
                                    },&#xd;
                                    {&#xd;
                                        &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;SimpleCL_AAISuccessResponseEvent&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                        },&#xd;
                                        &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                                &quot;name&quot;: &quot;SimpleCL_AAISuccessResponseEvent&quot;,&#xd;
                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                            },&#xd;
                                            &quot;nameSpace&quot;: &quot;org.onap.policy.apex.simplecontrolloop&quot;,&#xd;
                                            &quot;source&quot;: &quot;AAI&quot;,&#xd;
                                            &quot;target&quot;: &quot;APEX&quot;,&#xd;
                                            &quot;parameter&quot;: {&#xd;
                                                &quot;entry&quot;: [&#xd;
                                                    {&#xd;
                                                        &quot;key&quot;: &quot;equip-model&quot;,&#xd;
                                                        &quot;value&quot;: {&#xd;
                                                            &quot;key&quot;: &quot;equip-model&quot;,&#xd;
                                                            &quot;fieldSchemaKey&quot;: {&#xd;
                                                                &quot;name&quot;: &quot;SimpleStringType&quot;,&#xd;
                                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                                            },&#xd;
                                                            &quot;optional&quot;: false&#xd;
                                                        }&#xd;
                                                    },&#xd;
                                                    {&#xd;
                                                        &quot;key&quot;: &quot;equip-type&quot;,&#xd;
                                                        &quot;value&quot;: {&#xd;
                                                            &quot;key&quot;: &quot;equip-type&quot;,&#xd;
                                                            &quot;fieldSchemaKey&quot;: {&#xd;
                                                                &quot;name&quot;: &quot;SimpleStringType&quot;,&#xd;
                                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                                            },&#xd;
                                                            &quot;optional&quot;: false&#xd;
                                                        }&#xd;
                                                    },&#xd;
                                                    {&#xd;
                                                        &quot;key&quot;: &quot;equip-vendor&quot;,&#xd;
                                                        &quot;value&quot;: {&#xd;
                                                            &quot;key&quot;: &quot;equip-vendor&quot;,&#xd;
                                                            &quot;fieldSchemaKey&quot;: {&#xd;
                                                                &quot;name&quot;: &quot;SimpleStringType&quot;,&#xd;
                                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                                            },&#xd;
                                                            &quot;optional&quot;: false&#xd;
                                                        }&#xd;
                                                    },&#xd;
                                                    {&#xd;
                                                        &quot;key&quot;: &quot;in-maint&quot;,&#xd;
                                                        &quot;value&quot;: {&#xd;
                                                            &quot;key&quot;: &quot;in-maint&quot;,&#xd;
                                                            &quot;fieldSchemaKey&quot;: {&#xd;
                                                                &quot;name&quot;: &quot;SimpleBooleanType&quot;,&#xd;
                                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                                            },&#xd;
                                                            &quot;optional&quot;: false&#xd;
                                                        }&#xd;
                                                    },&#xd;
                                                    {&#xd;
                                                        &quot;key&quot;: &quot;ipaddress-v4-oam&quot;,&#xd;
                                                        &quot;value&quot;: {&#xd;
                                                            &quot;key&quot;: &quot;ipaddress-v4-oam&quot;,&#xd;
                                                            &quot;fieldSchemaKey&quot;: {&#xd;
                                                                &quot;name&quot;: &quot;SimpleStringType&quot;,&#xd;
                                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                                            },&#xd;
                                                            &quot;optional&quot;: false&#xd;
                                                        }&#xd;
                                                    },&#xd;
                                                    {&#xd;
                                                        &quot;key&quot;: &quot;ipaddress-v6-oam&quot;,&#xd;
                                                        &quot;value&quot;: {&#xd;
                                                            &quot;key&quot;: &quot;ipaddress-v6-oam&quot;,&#xd;
                                                            &quot;fieldSchemaKey&quot;: {&#xd;
                                                                &quot;name&quot;: &quot;SimpleStringType&quot;,&#xd;
                                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                                            },&#xd;
                                                            &quot;optional&quot;: false&#xd;
                                                        }&#xd;
                                                    },&#xd;
                                                    {&#xd;
                                                        &quot;key&quot;: &quot;management-option&quot;,&#xd;
                                                        &quot;value&quot;: {&#xd;
                                                            &quot;key&quot;: &quot;management-option&quot;,&#xd;
                                                            &quot;fieldSchemaKey&quot;: {&#xd;
                                                                &quot;name&quot;: &quot;SimpleStringType&quot;,&#xd;
                                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                                            },&#xd;
                                                            &quot;optional&quot;: false&#xd;
                                                        }&#xd;
                                                    },&#xd;
                                                    {&#xd;
                                                        &quot;key&quot;: &quot;pnf-id&quot;,&#xd;
                                                        &quot;value&quot;: {&#xd;
                                                            &quot;key&quot;: &quot;pnf-id&quot;,&#xd;
                                                            &quot;fieldSchemaKey&quot;: {&#xd;
                                                                &quot;name&quot;: &quot;SimpleStringType&quot;,&#xd;
                                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                                            },&#xd;
                                                            &quot;optional&quot;: false&#xd;
                                                        }&#xd;
                                                    },&#xd;
                                                    {&#xd;
                                                        &quot;key&quot;: &quot;pnf-name&quot;,&#xd;
                                                        &quot;value&quot;: {&#xd;
                                                            &quot;key&quot;: &quot;pnf-name&quot;,&#xd;
                                                            &quot;fieldSchemaKey&quot;: {&#xd;
                                                                &quot;name&quot;: &quot;SimpleStringType&quot;,&#xd;
                                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                                            },&#xd;
                                                            &quot;optional&quot;: false&#xd;
                                                        }&#xd;
                                                    },&#xd;
                                                    {&#xd;
                                                        &quot;key&quot;: &quot;pnf-name2&quot;,&#xd;
                                                        &quot;value&quot;: {&#xd;
                                                            &quot;key&quot;: &quot;pnf-name2&quot;,&#xd;
                                                            &quot;fieldSchemaKey&quot;: {&#xd;
                                                                &quot;name&quot;: &quot;SimpleStringType&quot;,&#xd;
                                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                                            },&#xd;
                                                            &quot;optional&quot;: false&#xd;
                                                        }&#xd;
                                                    },&#xd;
                                                    {&#xd;
                                                        &quot;key&quot;: &quot;resource-version&quot;,&#xd;
                                                        &quot;value&quot;: {&#xd;
                                                            &quot;key&quot;: &quot;resource-version&quot;,&#xd;
                                                            &quot;fieldSchemaKey&quot;: {&#xd;
                                                                &quot;name&quot;: &quot;SimpleStringType&quot;,&#xd;
                                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                                            },&#xd;
                                                            &quot;optional&quot;: false&#xd;
                                                        }&#xd;
                                                    }&#xd;
                                                ]&#xd;
                                            },&#xd;
                                            &quot;toscaPolicyState&quot;: &quot;&quot;&#xd;
                                        }&#xd;
                                    },&#xd;
                                    {&#xd;
                                        &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;SimpleCL_CDSConfigModifyFailureResponseEvent&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                        },&#xd;
                                        &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                                &quot;name&quot;: &quot;SimpleCL_CDSConfigModifyFailureResponseEvent&quot;,&#xd;
                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                            },&#xd;
                                            &quot;nameSpace&quot;: &quot;org.onap.policy.apex.simplecontrolloop&quot;,&#xd;
                                            &quot;source&quot;: &quot;CDS&quot;,&#xd;
                                            &quot;target&quot;: &quot;APEX&quot;,&#xd;
                                            &quot;parameter&quot;: {&#xd;
                                                &quot;entry&quot;: [&#xd;
                                                    {&#xd;
                                                        &quot;key&quot;: &quot;actionIdentifiers&quot;,&#xd;
                                                        &quot;value&quot;: {&#xd;
                                                            &quot;key&quot;: &quot;actionIdentifiers&quot;,&#xd;
                                                            &quot;fieldSchemaKey&quot;: {&#xd;
                                                                &quot;name&quot;: &quot;SimpleCL_CDSActionIdentifiersType&quot;,&#xd;
                                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                                            },&#xd;
                                                            &quot;optional&quot;: false&#xd;
                                                        }&#xd;
                                                    },&#xd;
                                                    {&#xd;
                                                        &quot;key&quot;: &quot;commonHeader&quot;,&#xd;
                                                        &quot;value&quot;: {&#xd;
                                                            &quot;key&quot;: &quot;commonHeader&quot;,&#xd;
                                                            &quot;fieldSchemaKey&quot;: {&#xd;
                                                                &quot;name&quot;: &quot;SimpleCL_CDSFailureResponseCommonHeaderType&quot;,&#xd;
                                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                                            },&#xd;
                                                            &quot;optional&quot;: false&#xd;
                                                        }&#xd;
                                                    },&#xd;
                                                    {&#xd;
                                                        &quot;key&quot;: &quot;payload&quot;,&#xd;
                                                        &quot;value&quot;: {&#xd;
                                                            &quot;key&quot;: &quot;payload&quot;,&#xd;
                                                            &quot;fieldSchemaKey&quot;: {&#xd;
                                                                &quot;name&quot;: &quot;SimpleCL_CDSConfigModifyRequestPayloadType&quot;,&#xd;
                                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                                            },&#xd;
                                                            &quot;optional&quot;: false&#xd;
                                                        }&#xd;
                                                    },&#xd;
                                                    {&#xd;
                                                        &quot;key&quot;: &quot;status&quot;,&#xd;
                                                        &quot;value&quot;: {&#xd;
                                                            &quot;key&quot;: &quot;status&quot;,&#xd;
                                                            &quot;fieldSchemaKey&quot;: {&#xd;
                                                                &quot;name&quot;: &quot;SimpleCL_CDSFailureResponseStatusType&quot;,&#xd;
                                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                                            },&#xd;
                                                            &quot;optional&quot;: false&#xd;
                                                        }&#xd;
                                                    }&#xd;
                                                ]&#xd;
                                            },&#xd;
                                            &quot;toscaPolicyState&quot;: &quot;EXIT_FAILURE&quot;&#xd;
                                        }&#xd;
                                    },&#xd;
                                    {&#xd;
                                        &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;SimpleCL_CDSConfigModifyRequestEvent&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                        },&#xd;
                                        &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                                &quot;name&quot;: &quot;SimpleCL_CDSConfigModifyRequestEvent&quot;,&#xd;
                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                            },&#xd;
                                            &quot;nameSpace&quot;: &quot;org.onap.policy.apex.simplecontrolloop&quot;,&#xd;
                                            &quot;source&quot;: &quot;APEX&quot;,&#xd;
                                            &quot;target&quot;: &quot;APEX&quot;,&#xd;
                                            &quot;parameter&quot;: {&#xd;
                                                &quot;entry&quot;: [&#xd;
                                                    {&#xd;
                                                        &quot;key&quot;: &quot;actionIdentifiers&quot;,&#xd;
                                                        &quot;value&quot;: {&#xd;
                                                            &quot;key&quot;: &quot;actionIdentifiers&quot;,&#xd;
                                                            &quot;fieldSchemaKey&quot;: {&#xd;
                                                                &quot;name&quot;: &quot;SimpleCL_CDSActionIdentifiersType&quot;,&#xd;
                                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                                            },&#xd;
                                                            &quot;optional&quot;: false&#xd;
                                                        }&#xd;
                                                    },&#xd;
                                                    {&#xd;
                                                        &quot;key&quot;: &quot;commonHeader&quot;,&#xd;
                                                        &quot;value&quot;: {&#xd;
                                                            &quot;key&quot;: &quot;commonHeader&quot;,&#xd;
                                                            &quot;fieldSchemaKey&quot;: {&#xd;
                                                                &quot;name&quot;: &quot;SimpleCL_CDSRequestCommonHeaderType&quot;,&#xd;
                                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                                            },&#xd;
                                                            &quot;optional&quot;: false&#xd;
                                                        }&#xd;
                                                    },&#xd;
                                                    {&#xd;
                                                        &quot;key&quot;: &quot;payload&quot;,&#xd;
                                                        &quot;value&quot;: {&#xd;
                                                            &quot;key&quot;: &quot;payload&quot;,&#xd;
                                                            &quot;fieldSchemaKey&quot;: {&#xd;
                                                                &quot;name&quot;: &quot;SimpleCL_CDSConfigModifyRequestPayloadType&quot;,&#xd;
                                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                                            },&#xd;
                                                            &quot;optional&quot;: false&#xd;
                                                        }&#xd;
                                                    }&#xd;
                                                ]&#xd;
                                            },&#xd;
                                            &quot;toscaPolicyState&quot;: &quot;&quot;&#xd;
                                        }&#xd;
                                    },&#xd;
                                    {&#xd;
                                        &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;SimpleCL_CDSConfigModifySuccessResponseEvent&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                        },&#xd;
                                        &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                                &quot;name&quot;: &quot;SimpleCL_CDSConfigModifySuccessResponseEvent&quot;,&#xd;
                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                            },&#xd;
                                            &quot;nameSpace&quot;: &quot;org.onap.policy.apex.simplecontrolloop&quot;,&#xd;
                                            &quot;source&quot;: &quot;CDS&quot;,&#xd;
                                            &quot;target&quot;: &quot;APEX&quot;,&#xd;
                                            &quot;parameter&quot;: {&#xd;
                                                &quot;entry&quot;: [&#xd;
                                                    {&#xd;
                                                        &quot;key&quot;: &quot;actionIdentifiers&quot;,&#xd;
                                                        &quot;value&quot;: {&#xd;
                                                            &quot;key&quot;: &quot;actionIdentifiers&quot;,&#xd;
                                                            &quot;fieldSchemaKey&quot;: {&#xd;
                                                                &quot;name&quot;: &quot;SimpleCL_CDSActionIdentifiersType&quot;,&#xd;
                                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                                            },&#xd;
                                                            &quot;optional&quot;: false&#xd;
                                                        }&#xd;
                                                    },&#xd;
                                                    {&#xd;
                                                        &quot;key&quot;: &quot;commonHeader&quot;,&#xd;
                                                        &quot;value&quot;: {&#xd;
                                                            &quot;key&quot;: &quot;commonHeader&quot;,&#xd;
                                                            &quot;fieldSchemaKey&quot;: {&#xd;
                                                                &quot;name&quot;: &quot;SimpleCL_CDSSuccessResponseCommonHeaderType&quot;,&#xd;
                                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                                            },&#xd;
                                                            &quot;optional&quot;: false&#xd;
                                                        }&#xd;
                                                    },&#xd;
                                                    {&#xd;
                                                        &quot;key&quot;: &quot;payload&quot;,&#xd;
                                                        &quot;value&quot;: {&#xd;
                                                            &quot;key&quot;: &quot;payload&quot;,&#xd;
                                                            &quot;fieldSchemaKey&quot;: {&#xd;
                                                                &quot;name&quot;: &quot;SimpleCL_CDSConfigModifyResponsePayloadType&quot;,&#xd;
                                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                                            },&#xd;
                                                            &quot;optional&quot;: false&#xd;
                                                        }&#xd;
                                                    },&#xd;
                                                    {&#xd;
                                                        &quot;key&quot;: &quot;status&quot;,&#xd;
                                                        &quot;value&quot;: {&#xd;
                                                            &quot;key&quot;: &quot;status&quot;,&#xd;
                                                            &quot;fieldSchemaKey&quot;: {&#xd;
                                                                &quot;name&quot;: &quot;SimpleCL_CDSSuccessResponseStatusType&quot;,&#xd;
                                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                                            },&#xd;
                                                            &quot;optional&quot;: false&#xd;
                                                        }&#xd;
                                                    }&#xd;
                                                ]&#xd;
                                            },&#xd;
                                            &quot;toscaPolicyState&quot;: &quot;EXIT_SUCCESS&quot;&#xd;
                                        }&#xd;
                                    },&#xd;
                                    {&#xd;
                                        &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;SimpleCL_LogStatusEvent&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                        },&#xd;
                                        &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                                &quot;name&quot;: &quot;SimpleCL_LogStatusEvent&quot;,&#xd;
                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                            },&#xd;
                                            &quot;nameSpace&quot;: &quot;org.onap.policy.apex.simplecontrolloop&quot;,&#xd;
                                            &quot;source&quot;: &quot;APEX&quot;,&#xd;
                                            &quot;target&quot;: &quot;DCAE&quot;,&#xd;
                                            &quot;parameter&quot;: {&#xd;
                                                &quot;entry&quot;: [&#xd;
                                                    {&#xd;
                                                        &quot;key&quot;: &quot;message&quot;,&#xd;
                                                        &quot;value&quot;: {&#xd;
                                                            &quot;key&quot;: &quot;message&quot;,&#xd;
                                                            &quot;fieldSchemaKey&quot;: {&#xd;
                                                                &quot;name&quot;: &quot;SimpleStringType&quot;,&#xd;
                                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                                            },&#xd;
                                                            &quot;optional&quot;: false&#xd;
                                                        }&#xd;
                                                    }&#xd;
                                                ]&#xd;
                                            },&#xd;
                                            &quot;toscaPolicyState&quot;: &quot;&quot;&#xd;
                                        }&#xd;
                                    },&#xd;
                                    {&#xd;
                                        &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;SimpleCL_VesEvent&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                        },&#xd;
                                        &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                                &quot;name&quot;: &quot;SimpleCL_VesEvent&quot;,&#xd;
                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                            },&#xd;
                                            &quot;nameSpace&quot;: &quot;org.onap.policy.apex.simplecontrolloop&quot;,&#xd;
                                            &quot;source&quot;: &quot;DCAE&quot;,&#xd;
                                            &quot;target&quot;: &quot;APEX&quot;,&#xd;
                                            &quot;parameter&quot;: {&#xd;
                                                &quot;entry&quot;: [&#xd;
                                                    {&#xd;
                                                        &quot;key&quot;: &quot;event&quot;,&#xd;
                                                        &quot;value&quot;: {&#xd;
                                                            &quot;key&quot;: &quot;event&quot;,&#xd;
                                                            &quot;fieldSchemaKey&quot;: {&#xd;
                                                                &quot;name&quot;: &quot;SimpleCL_VesEventType&quot;,&#xd;
                                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                                            },&#xd;
                                                            &quot;optional&quot;: false&#xd;
                                                        }&#xd;
                                                    }&#xd;
                                                ]&#xd;
                                            },&#xd;
                                            &quot;toscaPolicyState&quot;: &quot;ENTRY&quot;&#xd;
                                        }&#xd;
                                    }&#xd;
                                ]&#xd;
                            }&#xd;
                        },&#xd;
                        &quot;albums&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                                &quot;name&quot;: &quot;onap.policies.apex.Simplecontrolloop_Albums&quot;,&#xd;
                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;albums&quot;: {&#xd;
                                &quot;entry&quot;: [&#xd;
                                    {&#xd;
                                        &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;SimpleCL_EventDetailsAlbum&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                        },&#xd;
                                        &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                                &quot;name&quot;: &quot;SimpleCL_EventDetailsAlbum&quot;,&#xd;
                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                            },&#xd;
                                            &quot;scope&quot;: &quot;policy&quot;,&#xd;
                                            &quot;isWritable&quot;: true,&#xd;
                                            &quot;itemSchema&quot;: {&#xd;
                                                &quot;name&quot;: &quot;SimpleCL_EventDetailsAlbumType&quot;,&#xd;
                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                            }&#xd;
                                        }&#xd;
                                    }&#xd;
                                ]&#xd;
                            }&#xd;
                        },&#xd;
                        &quot;schemas&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                                &quot;name&quot;: &quot;onap.policies.apex.Simplecontrolloop_Schemas&quot;,&#xd;
                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;schemas&quot;: {&#xd;
                                &quot;entry&quot;: [&#xd;
                                    {&#xd;
                                        &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;SimpleBooleanType&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                        },&#xd;
                                        &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                                &quot;name&quot;: &quot;SimpleBooleanType&quot;,&#xd;
                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                            },&#xd;
                                            &quot;schemaFlavour&quot;: &quot;Java&quot;,&#xd;
                                            &quot;schemaDefinition&quot;: &quot;java.lang.Boolean&quot;&#xd;
                                        }&#xd;
                                    },&#xd;
                                    {&#xd;
                                        &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;SimpleCL_AAIRequestErrorType&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                        },&#xd;
                                        &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                                &quot;name&quot;: &quot;SimpleCL_AAIRequestErrorType&quot;,&#xd;
                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                            },&#xd;
                                            &quot;schemaFlavour&quot;: &quot;Avro&quot;,&#xd;
                                            &quot;schemaDefinition&quot;: &quot;{\n  \&quot;name\&quot;: \&quot;AAIRequestErrorType\&quot;,\n  \&quot;type\&quot;: \&quot;record\&quot;,\n  \&quot;fields\&quot;: [\n    {\n      \&quot;name\&quot;: \&quot;serviceException\&quot;,\n      \&quot;type\&quot;: {\n        \&quot;name\&quot;: \&quot;serviceException\&quot;,\n        \&quot;type\&quot;: \&quot;record\&quot;,\n        \&quot;fields\&quot;: [\n          {\n            \&quot;name\&quot;: \&quot;messageId\&quot;,\n            \&quot;type\&quot;: \&quot;string\&quot;\n          },\n          {\n            \&quot;name\&quot;: \&quot;text\&quot;,\n            \&quot;type\&quot;: \&quot;string\&quot;\n          },\n          {\n            \&quot;name\&quot;: \&quot;variables\&quot;,\n            \&quot;type\&quot;: {\n              \&quot;type\&quot;: \&quot;array\&quot;,\n              \&quot;items\&quot;: \&quot;string\&quot;\n            }\n          }\n        ]\n      }\n    }\n  ]\n}&quot;&#xd;
                                        }&#xd;
                                    },&#xd;
                                    {&#xd;
                                        &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;SimpleCL_CDSActionIdentifiersType&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                        },&#xd;
                                        &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                                &quot;name&quot;: &quot;SimpleCL_CDSActionIdentifiersType&quot;,&#xd;
                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                            },&#xd;
                                            &quot;schemaFlavour&quot;: &quot;Avro&quot;,&#xd;
                                            &quot;schemaDefinition&quot;: &quot;{\n    \&quot;type\&quot;: \&quot;record\&quot;,\n    \&quot;name\&quot;: \&quot;CDSActionIdentifiers_Type\&quot;,\n    \&quot;fields\&quot;: [\n        {\n            \&quot;name\&quot;: \&quot;actionName\&quot;,\n            \&quot;type\&quot;: \&quot;string\&quot;\n        },\n        {\n            \&quot;name\&quot;: \&quot;blueprintName\&quot;,\n            \&quot;type\&quot;: \&quot;string\&quot;\n        },\n        {\n            \&quot;name\&quot;: \&quot;blueprintVersion\&quot;,\n            \&quot;type\&quot;: \&quot;string\&quot;\n        },\n        {\n            \&quot;name\&quot;: \&quot;mode\&quot;,\n            \&quot;type\&quot;: \&quot;string\&quot;\n        }\n    ]\n}&quot;&#xd;
                                        }&#xd;
                                    },&#xd;
                                    {&#xd;
                                        &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;SimpleCL_CDSConfigModifyRequestPayloadType&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                        },&#xd;
                                        &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                                &quot;name&quot;: &quot;SimpleCL_CDSConfigModifyRequestPayloadType&quot;,&#xd;
                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                            },&#xd;
                                            &quot;schemaFlavour&quot;: &quot;Avro&quot;,&#xd;
                                            &quot;schemaDefinition&quot;: &quot;{\n  \&quot;type\&quot;: \&quot;map\&quot;,\n  \&quot;values\&quot;: {\n    \&quot;type\&quot;: \&quot;record\&quot;,\n    \&quot;name\&quot;: \&quot;CDSConfigModifyRequestPayloadEntry\&quot;,\n    \&quot;fields\&quot;: [\n      {\n        \&quot;name\&quot;: \&quot;hostname\&quot;,\n        \&quot;type\&quot;: \&quot;string\&quot;\n      },\n      {\n        \&quot;name\&quot;: \&quot;IP\&quot;,\n        \&quot;type\&quot;: \&quot;string\&quot;\n      },\n      {\n        \&quot;name\&quot;: \&quot;pnfName\&quot;,\n        \&quot;type\&quot;: \&quot;string\&quot;\n      }\n    ]\n  }\n}&quot;&#xd;
                                        }&#xd;
                                    },&#xd;
                                    {&#xd;
                                        &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;SimpleCL_CDSConfigModifyResponsePayloadType&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                        },&#xd;
                                        &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                                &quot;name&quot;: &quot;SimpleCL_CDSConfigModifyResponsePayloadType&quot;,&#xd;
                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                            },&#xd;
                                            &quot;schemaFlavour&quot;: &quot;Avro&quot;,&#xd;
                                            &quot;schemaDefinition&quot;: &quot;{\n  \&quot;name\&quot;: \&quot;CDSConfigResponsePayloadEntry\&quot;,\n  \&quot;type\&quot;: \&quot;record\&quot;,\n  \&quot;fields\&quot;: [\n    {\n      \&quot;name\&quot;: \&quot;update_DasH_config_DasH_response\&quot;,\n      \&quot;type\&quot;: {\n        \&quot;name\&quot;: \&quot;update_DasH_config_DasH_response\&quot;,\n        \&quot;type\&quot;: \&quot;record\&quot;,\n        \&quot;fields\&quot;: [\n          {\n              \&quot;name\&quot;: \&quot;execute_DasH_command_DasH_logs\&quot;,\n              \&quot;type\&quot;: {\n                \&quot;type\&quot;: \&quot;array\&quot;,\n                \&quot;items\&quot;: \&quot;string\&quot;\n              }\n          },\n          {\n              \&quot;name\&quot;: \&quot;prepare_DasH_environment_DasH_logs\&quot;,\n              \&quot;type\&quot;: {\n                \&quot;type\&quot;: \&quot;array\&quot;,\n                \&quot;items\&quot;: \&quot;string\&quot;\n              }\n          }\n        ]\n      }\n    }\n  ]\n}&quot;&#xd;
                                        }&#xd;
                                    },&#xd;
                                    {&#xd;
                                        &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;SimpleCL_CDSFailureResponseCommonHeaderType&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                        },&#xd;
                                        &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                                &quot;name&quot;: &quot;SimpleCL_CDSFailureResponseCommonHeaderType&quot;,&#xd;
                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                            },&#xd;
                                            &quot;schemaFlavour&quot;: &quot;Avro&quot;,&#xd;
                                            &quot;schemaDefinition&quot;: &quot;{\n    \&quot;type\&quot;: \&quot;record\&quot;,\n    \&quot;name\&quot;: \&quot;CDSResponseCommonHeader_Type\&quot;,\n    \&quot;fields\&quot;: [\n        {\n            \&quot;name\&quot;: \&quot;originatorId\&quot;,\n            \&quot;type\&quot;: \&quot;string\&quot;\n        },\n        {\n            \&quot;name\&quot;: \&quot;requestId\&quot;,\n            \&quot;type\&quot;: \&quot;string\&quot;\n        },\n        {\n            \&quot;name\&quot;: \&quot;subRequestId\&quot;,\n            \&quot;type\&quot;: \&quot;string\&quot;\n        },\n        {\n            \&quot;name\&quot;: \&quot;timestamp\&quot;,\n            \&quot;type\&quot;: \&quot;string\&quot;\n        }\n    ]\n}&quot;&#xd;
                                        }&#xd;
                                    },&#xd;
                                    {&#xd;
                                        &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;SimpleCL_CDSFailureResponseStatusType&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                        },&#xd;
                                        &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                                &quot;name&quot;: &quot;SimpleCL_CDSFailureResponseStatusType&quot;,&#xd;
                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                            },&#xd;
                                            &quot;schemaFlavour&quot;: &quot;Avro&quot;,&#xd;
                                            &quot;schemaDefinition&quot;: &quot;{\n    \&quot;type\&quot;: \&quot;record\&quot;,\n    \&quot;name\&quot;: \&quot;CDSResponseStatus_Type\&quot;,\n    \&quot;fields\&quot;: [\n        {\n            \&quot;name\&quot;: \&quot;code\&quot;,\n            \&quot;type\&quot;: \&quot;int\&quot;\n        },\n        {\n            \&quot;name\&quot;: \&quot;timestamp\&quot;,\n            \&quot;type\&quot;: \&quot;string\&quot;\n        },\n        {\n            \&quot;name\&quot;: \&quot;message\&quot;,\n            \&quot;type\&quot;: \&quot;string\&quot;\n        },\n        {\n            \&quot;name\&quot;: \&quot;errorMessage\&quot;,\n            \&quot;type\&quot;: \&quot;string\&quot;\n        }\n    ]\n}&quot;&#xd;
                                        }&#xd;
                                    },&#xd;
                                    {&#xd;
                                        &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;SimpleCL_CDSRequestCommonHeaderType&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                        },&#xd;
                                        &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                                &quot;name&quot;: &quot;SimpleCL_CDSRequestCommonHeaderType&quot;,&#xd;
                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                            },&#xd;
                                            &quot;schemaFlavour&quot;: &quot;Avro&quot;,&#xd;
                                            &quot;schemaDefinition&quot;: &quot;{\n    \&quot;type\&quot;: \&quot;record\&quot;,\n    \&quot;name\&quot;: \&quot;CDSRequestCommonHeader_Type\&quot;,\n    \&quot;fields\&quot;: [\n        {\n            \&quot;name\&quot;: \&quot;originatorId\&quot;,\n            \&quot;type\&quot;: \&quot;string\&quot;\n        },\n        {\n            \&quot;name\&quot;: \&quot;requestId\&quot;,\n            \&quot;type\&quot;: \&quot;string\&quot;\n        },\n        {\n            \&quot;name\&quot;: \&quot;subRequestId\&quot;,\n            \&quot;type\&quot;: \&quot;string\&quot;\n        }\n    ]\n}&quot;&#xd;
                                        }&#xd;
                                    },&#xd;
                                    {&#xd;
                                        &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;SimpleCL_CDSSuccessResponseCommonHeaderType&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                        },&#xd;
                                        &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                                &quot;name&quot;: &quot;SimpleCL_CDSSuccessResponseCommonHeaderType&quot;,&#xd;
                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                            },&#xd;
                                            &quot;schemaFlavour&quot;: &quot;Avro&quot;,&#xd;
                                            &quot;schemaDefinition&quot;: &quot;{\n    \&quot;type\&quot;: \&quot;record\&quot;,\n    \&quot;name\&quot;: \&quot;CDSResponseCommonHeader_Type\&quot;,\n    \&quot;fields\&quot;: [\n        {\n            \&quot;name\&quot;: \&quot;originatorId\&quot;,\n            \&quot;type\&quot;: \&quot;string\&quot;\n        },\n        {\n            \&quot;name\&quot;: \&quot;requestId\&quot;,\n            \&quot;type\&quot;: \&quot;string\&quot;\n        },\n        {\n            \&quot;name\&quot;: \&quot;subRequestId\&quot;,\n            \&quot;type\&quot;: \&quot;string\&quot;\n        },\n        {\n            \&quot;name\&quot;: \&quot;timestamp\&quot;,\n            \&quot;type\&quot;: \&quot;string\&quot;\n        }\n    ]\n}&quot;&#xd;
                                        }&#xd;
                                    },&#xd;
                                    {&#xd;
                                        &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;SimpleCL_CDSSuccessResponseStatusType&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                        },&#xd;
                                        &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                                &quot;name&quot;: &quot;SimpleCL_CDSSuccessResponseStatusType&quot;,&#xd;
                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                            },&#xd;
                                            &quot;schemaFlavour&quot;: &quot;Avro&quot;,&#xd;
                                            &quot;schemaDefinition&quot;: &quot;{\n    \&quot;type\&quot;: \&quot;record\&quot;,\n    \&quot;name\&quot;: \&quot;CDSResponseStatus_Type\&quot;,\n    \&quot;fields\&quot;: [\n        {\n            \&quot;name\&quot;: \&quot;code\&quot;,\n            \&quot;type\&quot;: \&quot;int\&quot;\n        },\n        {\n            \&quot;name\&quot;: \&quot;eventType\&quot;,\n            \&quot;type\&quot;: \&quot;string\&quot;\n        },\n        {\n            \&quot;name\&quot;: \&quot;timestamp\&quot;,\n            \&quot;type\&quot;: \&quot;string\&quot;\n        },\n        {\n            \&quot;name\&quot;: \&quot;message\&quot;,\n            \&quot;type\&quot;: \&quot;string\&quot;\n        }\n    ]\n}&quot;&#xd;
                                        }&#xd;
                                    },&#xd;
                                    {&#xd;
                                        &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;SimpleCL_EventDetailsAlbumType&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                        },&#xd;
                                        &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                                &quot;name&quot;: &quot;SimpleCL_EventDetailsAlbumType&quot;,&#xd;
                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                            },&#xd;
                                            &quot;schemaFlavour&quot;: &quot;Avro&quot;,&#xd;
                                            &quot;schemaDefinition&quot;: &quot;{\n  \&quot;name\&quot;: \&quot;eventDetails\&quot;,\n  \&quot;type\&quot;: \&quot;record\&quot;,\n  \&quot;fields\&quot;: [\n    {\n      \&quot;name\&quot;: \&quot;commonEventHeader\&quot;,\n      \&quot;type\&quot;: {\n        \&quot;name\&quot;: \&quot;commonEventHeader\&quot;,\n        \&quot;type\&quot;: \&quot;record\&quot;,\n        \&quot;fields\&quot;: [\n          {\n            \&quot;name\&quot;: \&quot;domain\&quot;,\n            \&quot;type\&quot;: \&quot;string\&quot;\n          },\n          {\n            \&quot;name\&quot;: \&quot;eventId\&quot;,\n            \&quot;type\&quot;: \&quot;string\&quot;\n          },\n          {\n            \&quot;name\&quot;: \&quot;eventName\&quot;,\n            \&quot;type\&quot;: \&quot;string\&quot;\n          },\n          {\n            \&quot;name\&quot;: \&quot;lastEpochMicrosec\&quot;,\n            \&quot;type\&quot;: \&quot;long\&quot;\n          },\n          {\n            \&quot;name\&quot;: \&quot;priority\&quot;,\n            \&quot;type\&quot;: \&quot;string\&quot;\n          },\n          {\n            \&quot;name\&quot;: \&quot;reportingEntityName\&quot;,\n            \&quot;type\&quot;: \&quot;string\&quot;\n          },\n          {\n            \&quot;name\&quot;: \&quot;sequence\&quot;,\n            \&quot;type\&quot;: \&quot;int\&quot;\n          },\n          {\n            \&quot;name\&quot;: \&quot;sourceId\&quot;,\n            \&quot;type\&quot;: \&quot;string\&quot;\n          },\n          {\n            \&quot;name\&quot;: \&quot;sourceName\&quot;,\n            \&quot;type\&quot;: \&quot;string\&quot;\n          },\n          {\n            \&quot;name\&quot;: \&quot;startEpochMicrosec\&quot;,\n            \&quot;type\&quot;: \&quot;long\&quot;\n          },\n          {\n            \&quot;name\&quot;: \&quot;timeZoneOffset\&quot;,\n            \&quot;type\&quot;: \&quot;string\&quot;\n          },\n          {\n            \&quot;name\&quot;: \&quot;version\&quot;,\n            \&quot;type\&quot;: \&quot;string\&quot;\n          },\n          {\n            \&quot;name\&quot;: \&quot;internalHeaderFields\&quot;,\n            \&quot;type\&quot;: {\n              \&quot;name\&quot;: \&quot;internalHeaderFields\&quot;,\n              \&quot;type\&quot;: \&quot;record\&quot;,\n              \&quot;fields\&quot;: []\n            }\n          },\n          {\n            \&quot;name\&quot;: \&quot;vesEventListenerVersion\&quot;,\n            \&quot;type\&quot;: \&quot;string\&quot;\n          }\n        ]\n      }\n    },\n    {\n      \&quot;name\&quot;: \&quot;otherFields\&quot;,\n      \&quot;type\&quot;: {\n        \&quot;name\&quot;: \&quot;otherFields\&quot;,\n        \&quot;type\&quot;: \&quot;record\&quot;,\n        \&quot;fields\&quot;: [\n          {\n            \&quot;name\&quot;: \&quot;hashMap\&quot;,\n            \&quot;type\&quot;: {\n              \&quot;name\&quot;: \&quot;hashMap\&quot;,\n              \&quot;type\&quot;: \&quot;record\&quot;,\n              \&quot;fields\&quot;: [\n                {\n                  \&quot;name\&quot;: \&quot;hostname\&quot;,\n                  \&quot;type\&quot;: \&quot;string\&quot;\n                },\n                {\n                  \&quot;name\&quot;: \&quot;pnfName\&quot;,\n                  \&quot;type\&quot;: \&quot;string\&quot;\n                },\n                {\n                  \&quot;name\&quot;: \&quot;pnfId\&quot;,\n                  \&quot;type\&quot;: \&quot;string\&quot;\n                },\n                {\n                  \&quot;name\&quot;: \&quot;ip\&quot;,\n                  \&quot;type\&quot;: \&quot;string\&quot;\n                }\n              ]\n            }\n          },\n          {\n            \&quot;name\&quot;: \&quot;otherFieldsVersion\&quot;,\n            \&quot;type\&quot;: \&quot;string\&quot;\n          }\n        ]\n      }\n    },\n    {\n      \&quot;name\&quot;: \&quot;target\&quot;,\n      \&quot;type\&quot;: {\n        \&quot;name\&quot;: \&quot;target\&quot;,\n        \&quot;type\&quot;: \&quot;record\&quot;,\n        \&quot;fields\&quot;: [\n          {\n            \&quot;name\&quot;: \&quot;targetType\&quot;,\n            \&quot;type\&quot;: \&quot;string\&quot;\n          },\n          {\n            \&quot;name\&quot;: \&quot;entityInfo\&quot;,\n            \&quot;type\&quot;: {\n              \&quot;name\&quot;: \&quot;entityInfo\&quot;,\n              \&quot;type\&quot;: \&quot;record\&quot;,\n              \&quot;fields\&quot;: [\n                {\n                  \&quot;name\&quot;: \&quot;name\&quot;,\n                  \&quot;type\&quot;: \&quot;string\&quot;\n                }\n              ]\n            }\n          }\n        ]\n      }\n    },\n    {\n      \&quot;name\&quot;: \&quot;generatedHostname\&quot;,\n      \&quot;type\&quot;: \&quot;string\&quot;\n    }\n  ]\n}&quot;&#xd;
                                        }&#xd;
                                    },&#xd;
                                    {&#xd;
                                        &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;SimpleCL_VesEventType&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                        },&#xd;
                                        &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                                &quot;name&quot;: &quot;SimpleCL_VesEventType&quot;,&#xd;
                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                            },&#xd;
                                            &quot;schemaFlavour&quot;: &quot;Avro&quot;,&#xd;
                                            &quot;schemaDefinition&quot;: &quot;{\n   \&quot;name\&quot;:\&quot;event\&quot;,\n   \&quot;type\&quot;:\&quot;record\&quot;,\n   \&quot;fields\&quot;:[\n      {\n         \&quot;name\&quot;:\&quot;commonEventHeader\&quot;,\n         \&quot;type\&quot;:{\n            \&quot;name\&quot;:\&quot;commonEventHeader\&quot;,\n            \&quot;type\&quot;:\&quot;record\&quot;,\n            \&quot;fields\&quot;:[\n               {\n                  \&quot;name\&quot;:\&quot;domain\&quot;,\n                  \&quot;type\&quot;:\&quot;string\&quot;\n               },\n               {\n                  \&quot;name\&quot;:\&quot;eventId\&quot;,\n                  \&quot;type\&quot;:\&quot;string\&quot;\n               },\n               {\n                  \&quot;name\&quot;:\&quot;eventName\&quot;,\n                  \&quot;type\&quot;:\&quot;string\&quot;\n               },\n               {\n                  \&quot;name\&quot;:\&quot;lastEpochMicrosec\&quot;,\n                  \&quot;type\&quot;:\&quot;long\&quot;\n               },\n               {\n                  \&quot;name\&quot;:\&quot;priority\&quot;,\n                  \&quot;type\&quot;:\&quot;string\&quot;\n               },\n               {\n                  \&quot;name\&quot;:\&quot;reportingEntityName\&quot;,\n                  \&quot;type\&quot;:\&quot;string\&quot;\n               },\n               {\n                  \&quot;name\&quot;:\&quot;sequence\&quot;,\n                  \&quot;type\&quot;:\&quot;int\&quot;\n               },\n               {\n                  \&quot;name\&quot;:\&quot;sourceId\&quot;,\n                  \&quot;type\&quot;:\&quot;string\&quot;\n               },\n               {\n                  \&quot;name\&quot;:\&quot;sourceName\&quot;,\n                  \&quot;type\&quot;:\&quot;string\&quot;\n               },\n               {\n                  \&quot;name\&quot;:\&quot;startEpochMicrosec\&quot;,\n                  \&quot;type\&quot;:\&quot;long\&quot;\n               },\n               {\n                  \&quot;name\&quot;:\&quot;version\&quot;,\n                  \&quot;type\&quot;:\&quot;string\&quot;\n               },\n               {\n                  \&quot;name\&quot;:\&quot;internalHeaderFields\&quot;,\n                  \&quot;type\&quot;:{\n                     \&quot;name\&quot;:\&quot;internalHeaderFields\&quot;,\n                     \&quot;type\&quot;:\&quot;record\&quot;,\n                     \&quot;fields\&quot;:[\n\n                     ]\n                  }\n               },\n               {\n                  \&quot;name\&quot;:\&quot;vesEventListenerVersion\&quot;,\n                  \&quot;type\&quot;:\&quot;string\&quot;\n               }\n            ]\n         }\n      },\n      {\n         \&quot;name\&quot;:\&quot;otherFields\&quot;,\n         \&quot;type\&quot;:{\n            \&quot;name\&quot;:\&quot;otherFields\&quot;,\n            \&quot;type\&quot;:\&quot;record\&quot;,\n            \&quot;fields\&quot;:[\n               {\n                  \&quot;name\&quot;:\&quot;hashMap\&quot;,\n                  \&quot;type\&quot;:{\n                     \&quot;name\&quot;:\&quot;hashMap\&quot;,\n                     \&quot;type\&quot;:\&quot;record\&quot;,\n                     \&quot;fields\&quot;:[\n                        {\n                           \&quot;name\&quot;:\&quot;hostname\&quot;,\n                           \&quot;type\&quot;:\&quot;string\&quot;\n                        },\n                        {\n                           \&quot;name\&quot;:\&quot;pnfName\&quot;,\n                           \&quot;type\&quot;:\&quot;string\&quot;\n                        },\n                        {\n                           \&quot;name\&quot;:\&quot;pnfId\&quot;,\n                           \&quot;type\&quot;:\&quot;string\&quot;\n                        },\n                        {\n                           \&quot;name\&quot;:\&quot;ip\&quot;,\n                           \&quot;type\&quot;:\&quot;string\&quot;\n                        }\n                     ]\n                  }\n               },\n               {\n                  \&quot;name\&quot;:\&quot;otherFieldsVersion\&quot;,\n                  \&quot;type\&quot;:\&quot;string\&quot;\n               }\n            ]\n         }\n      }\n   ]\n}&quot;&#xd;
                                        }&#xd;
                                    },&#xd;
                                    {&#xd;
                                        &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;SimpleLongType&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                        },&#xd;
                                        &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                                &quot;name&quot;: &quot;SimpleLongType&quot;,&#xd;
                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                            },&#xd;
                                            &quot;schemaFlavour&quot;: &quot;Java&quot;,&#xd;
                                            &quot;schemaDefinition&quot;: &quot;java.lang.Long&quot;&#xd;
                                        }&#xd;
                                    },&#xd;
                                    {&#xd;
                                        &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;SimpleStringType&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                        },&#xd;
                                        &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                                &quot;name&quot;: &quot;SimpleStringType&quot;,&#xd;
                                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                            },&#xd;
                                            &quot;schemaFlavour&quot;: &quot;Java&quot;,&#xd;
                                            &quot;schemaDefinition&quot;: &quot;java.lang.String&quot;&#xd;
                                        }&#xd;
                                    }&#xd;
                                ]&#xd;
                            }&#xd;
                        }&#xd;
                    }&#xd;
                }&#xd;
            }&#xd;
        }&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">1</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Policy for sampleGroup">
          <intProp name="HTTPSampler.concurrentPool">6</intProp>
          <stringProp name="HTTPSampler.domain">${API_HOST}</stringProp>
          <stringProp name="HTTPSampler.port">${API_PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.path">/policy/api/v1/policytypes/onap.policies.controlloop.operational.common.Apex/versions/1.0.0/policies</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;tosca_definitions_version&quot;: &quot;tosca_simple_yaml_1_1_0&quot;,&#xd;
    &quot;topology_template&quot;: {&#xd;
        &quot;policies&quot;: [&#xd;
            {&#xd;
                &quot;operational.apex.stabilityTestSampleDomain&quot;: {&#xd;
                    &quot;type&quot;: &quot;onap.policies.native.Apex&quot;,&#xd;
                    &quot;type_version&quot;: &quot;1.0.0&quot;,&#xd;
                    &quot;name&quot;: &quot;operational.apex.stabilityTestSampleDomain&quot;,&#xd;
                    &quot;version&quot;: &quot;1.0.0&quot;,&#xd;
                    &quot;metadata&quot;: {&#xd;
                        &quot;metadataSetName&quot;: &quot;apex.metadata.pnf&quot;,&#xd;
                        &quot;metadataSetVersion&quot;: &quot;1.0.0&quot;&#xd;
                    },&#xd;
                    &quot;properties&quot;: {&#xd;
                        &quot;engineServiceParameters&quot;: {&#xd;
                            &quot;name&quot;: &quot;TestApexEnginePnf&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;,&#xd;
                            &quot;id&quot;: 45,&#xd;
                            &quot;instanceCount&quot;: 4,&#xd;
                            &quot;deploymentPort&quot;: 12561,&#xd;
                            &quot;engineParameters&quot;: {&#xd;
                                &quot;executorParameters&quot;: {&#xd;
                                    &quot;JAVASCRIPT&quot;: {&#xd;
                                        &quot;parameterClassName&quot;: &quot;org.onap.policy.apex.plugins.executor.javascript.JavascriptExecutorParameters&quot;&#xd;
                                    }&#xd;
                                },&#xd;
                                &quot;contextParameters&quot;: {&#xd;
                                    &quot;parameterClassName&quot;: &quot;org.onap.policy.apex.context.parameters.ContextParameters&quot;,&#xd;
                                    &quot;schemaParameters&quot;: {&#xd;
                                        &quot;Avro&quot;: {&#xd;
                                            &quot;parameterClassName&quot;: &quot;org.onap.policy.apex.plugins.context.schema.avro.AvroSchemaHelperParameters&quot;&#xd;
                                        }&#xd;
                                    }&#xd;
                                },&#xd;
                                &quot;taskParameters&quot;: [&#xd;
                                    {&#xd;
                                        &quot;key&quot;: &quot;logUrl&quot;,&#xd;
                                        &quot;value&quot;: &quot;http://kafka:9092/events/apex-cl-mgmt&quot;&#xd;
                                    }&#xd;
                                ]&#xd;
                            }&#xd;
                        },&#xd;
                        &quot;eventInputParameters&quot;: {&#xd;
                            &quot;SimpleCL_DCAEConsumer&quot;: {&#xd;
                                &quot;carrierTechnologyParameters&quot;: {&#xd;
                                  &quot;carrierTechnology&quot;: &quot;KAFKA&quot;,&#xd;
                                  &quot;parameterClassName&quot;: &quot;org.onap.policy.apex.plugins.event.carrier.kafka.KafkaCarrierTechnologyParameters&quot;,&#xd;
                                  &quot;parameters&quot;: {&#xd;
                                    &quot;bootstrapServers&quot;: &quot;kafka:9092&quot;,&#xd;
                                    &quot;acks&quot;: &quot;all&quot;,&#xd;
                                    &quot;retries&quot;: 0,&#xd;
                                    &quot;batchSize&quot;: 16384,&#xd;
                                    &quot;lingerTime&quot;: 1,&#xd;
                                    &quot;bufferMemory&quot;: 33554432,&#xd;
                                    &quot;producerTopic&quot;: &quot;apex-cl-mgt2&quot;,&#xd;
                                    &quot;keySerializer&quot;: &quot;org.apache.kafka.common.serialization.StringSerializer&quot;,&#xd;
                                    &quot;valueSerializer&quot;: &quot;org.apache.kafka.common.serialization.StringSerializer&quot;,&#xd;
                                    &quot;kafkaProperties&quot;: [&#xd;
&#xd;
                                    ]&#xd;
                                  }&#xd;
                                },&#xd;
                                &quot;eventProtocolParameters&quot;: {&#xd;
                                    &quot;eventProtocol&quot;: &quot;JSON&quot;&#xd;
                                },&#xd;
                                &quot;eventName&quot;: &quot;SimpleCL_VesEvent&quot;&#xd;
                            },&#xd;
                            &quot;SimpleCL_AAIResponseConsumer&quot;: {&#xd;
                                &quot;carrierTechnologyParameters&quot;: {&#xd;
                                    &quot;carrierTechnology&quot;: &quot;RESTREQUESTOR&quot;,&#xd;
                                    &quot;parameterClassName&quot;: &quot;org.onap.policy.apex.plugins.event.carrier.restrequestor.RestRequestorCarrierTechnologyParameters&quot;,&#xd;
                                    &quot;parameters&quot;: {&#xd;
                                        &quot;url&quot;: &quot;https://aai:8443/aai/v14/network/pnfs/pnf/{pnfName}&quot;,&#xd;
                                        &quot;httpMethod&quot;: &quot;GET&quot;,&#xd;
                                        &quot;httpCodeFilter&quot;: &quot;[2-5][0-1][0-9]&quot;,&#xd;
                                        &quot;httpHeaders&quot;: [&#xd;
                                            [&#xd;
                                                &quot;Accept&quot;,&#xd;
                                                &quot;application/json&quot;&#xd;
                                            ],&#xd;
                                            [&#xd;
                                                &quot;Content-Type&quot;,&#xd;
                                                &quot;application/json&quot;&#xd;
                                            ],&#xd;
                                            [&#xd;
                                                &quot;X-FromAppId&quot;,&#xd;
                                                &quot;dcae-curl&quot;&#xd;
                                            ],&#xd;
                                            [&#xd;
                                                &quot;x-transactionId&quot;,&#xd;
                                                &quot;9998&quot;&#xd;
                                            ],&#xd;
                                            [&#xd;
                                                &quot;Authorization&quot;,&#xd;
                                                &quot;Basic QUFJOkFBSQ==&quot;&#xd;
                                            ]&#xd;
                                        ]&#xd;
                                    }&#xd;
                                },&#xd;
                                &quot;eventProtocolParameters&quot;: {&#xd;
                                    &quot;eventProtocol&quot;: &quot;JSON&quot;&#xd;
                                },&#xd;
                                &quot;eventName&quot;: &quot;SimpleCL_AAISuccessResponseEvent|SimpleCL_AAIFailureResponseEvent&quot;,&#xd;
                                &quot;requestorMode&quot;: true,&#xd;
                                &quot;requestorPeer&quot;: &quot;SimpleCL_AAIProducer&quot;,&#xd;
                                &quot;requestorTimeout&quot;: 2000&#xd;
                            },&#xd;
                            &quot;SimpleCL_CDSConfigModifyResponseConsumer&quot;: {&#xd;
                                &quot;carrierTechnologyParameters&quot;: {&#xd;
                                    &quot;carrierTechnology&quot;: &quot;GRPC&quot;,&#xd;
                                    &quot;parameterClassName&quot;: &quot;org.onap.policy.apex.plugins.event.carrier.grpc.GrpcCarrierTechnologyParameters&quot;&#xd;
                                },&#xd;
                                &quot;eventProtocolParameters&quot;: {&#xd;
                                    &quot;eventProtocol&quot;: &quot;JSON&quot;&#xd;
                                },&#xd;
                                &quot;eventName&quot;: &quot;SimpleCL_CDSConfigModifySuccessResponseEvent|SimpleCL_CDSConfigModifyFailureResponseEvent&quot;,&#xd;
                                &quot;requestorMode&quot;: true,&#xd;
                                &quot;requestorPeer&quot;: &quot;SimpleCL_CDSConfigModifyRequestProducer&quot;,&#xd;
                                &quot;requestorTimeout&quot;: 500&#xd;
                            }&#xd;
                        },&#xd;
                        &quot;eventOutputParameters&quot;: {&#xd;
                            &quot;SimpleCL_AAIProducer&quot;: {&#xd;
                                &quot;carrierTechnologyParameters&quot;: {&#xd;
                                    &quot;carrierTechnology&quot;: &quot;RESTREQUESTOR&quot;,&#xd;
                                    &quot;parameterClassName&quot;: &quot;org.onap.policy.apex.plugins.event.carrier.restrequestor.RestRequestorCarrierTechnologyParameters&quot;&#xd;
                                },&#xd;
                                &quot;eventProtocolParameters&quot;: {&#xd;
                                    &quot;eventProtocol&quot;: &quot;JSON&quot;&#xd;
                                },&#xd;
                                &quot;eventNameFilter&quot;: &quot;SimpleCL_AAIRequestEvent&quot;,&#xd;
                                &quot;requestorMode&quot;: true,&#xd;
                                &quot;requestorPeer&quot;: &quot;SimpleCL_AAIResponseConsumer&quot;,&#xd;
                                &quot;requestorTimeout&quot;: 2000&#xd;
                            },&#xd;
                            &quot;SimpleCL_CDSConfigModifyRequestProducer&quot;: {&#xd;
                                &quot;carrierTechnologyParameters&quot;: {&#xd;
                                    &quot;carrierTechnology&quot;: &quot;GRPC&quot;,&#xd;
                                    &quot;parameterClassName&quot;: &quot;org.onap.policy.apex.plugins.event.carrier.grpc.GrpcCarrierTechnologyParameters&quot;,&#xd;
                                    &quot;parameters&quot;: {&#xd;
                                        &quot;host&quot;: &quot;cds-blueprints-processor-grpc&quot;,&#xd;
                                        &quot;port&quot;: 9111,&#xd;
                                        &quot;username&quot;: &quot;ccsdkapps&quot;,&#xd;
                                        &quot;password&quot;: &quot;ccsdkapps&quot;,&#xd;
                                        &quot;timeout&quot;: 60&#xd;
                                    }&#xd;
                                },&#xd;
                                &quot;eventProtocolParameters&quot;: {&#xd;
                                    &quot;eventProtocol&quot;: &quot;JSON&quot;&#xd;
                                },&#xd;
                                &quot;eventNameFilter&quot;: &quot;SimpleCL_CDSConfigModifyRequestEvent&quot;,&#xd;
                                &quot;requestorMode&quot;: true,&#xd;
                                &quot;requestorPeer&quot;: &quot;SimpleCL_CDSConfigModifyResponseConsumer&quot;,&#xd;
                                &quot;requestorTimeout&quot;: 500&#xd;
                            },&#xd;
                            &quot;SimpleCL_logOutputter&quot;: {&#xd;
                                &quot;carrierTechnologyParameters&quot;: {&#xd;
                                    &quot;carrierTechnology&quot;: &quot;FILE&quot;,&#xd;
                                    &quot;parameters&quot;: {&#xd;
                                        &quot;fileName&quot;: &quot;outputevents.log&quot;&#xd;
                                    }&#xd;
                                },&#xd;
                                &quot;eventProtocolParameters&quot;: {&#xd;
                                    &quot;eventProtocol&quot;: &quot;JSON&quot;&#xd;
                                }&#xd;
                            }&#xd;
                        }&#xd;
                    }&#xd;
                }&#xd;
            }&#xd;
        ]&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">1</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change State to ACTIVE (defaultGroup)" enabled="true">
          <intProp name="HTTPSampler.concurrentPool">6</intProp>
          <stringProp name="HTTPSampler.domain">${PAP_HOST}</stringProp>
          <stringProp name="HTTPSampler.port">${PAP_PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.path">policy/pap/v1/pdps/groups/defaultGroup?state=ACTIVE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">1</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create/Update PDP Group" enabled="true">
          <stringProp name="TestPlan.comments">create SampleGroup </stringProp>
          <intProp name="HTTPSampler.concurrentPool">6</intProp>
          <stringProp name="HTTPSampler.domain">${PAP_HOST}</stringProp>
          <stringProp name="HTTPSampler.port">${PAP_PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.path">/policy/pap/v1/pdps/groups/batch</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;groups&quot;: [&#xd;
        {&#xd;
            &quot;name&quot;: &quot;sampleGroup&quot;,&#xd;
            &quot;pdpGroupState&quot;: &quot;ACTIVE&quot;,&#xd;
            &quot;properties&quot;: {},&#xd;
            &quot;pdpSubgroups&quot;: [&#xd;
                {&#xd;
                    &quot;pdpType&quot;: &quot;apex&quot;,&#xd;
                    &quot;desiredInstanceCount&quot;: 1,&#xd;
                    &quot;properties&quot;: {},&#xd;
                    &quot;supportedPolicyTypes&quot;: [&#xd;
                        {&#xd;
                            &quot;name&quot;: &quot;onap.policies.native.Apex&quot;,&#xd;
                            &quot;version&quot;: &quot;1.0.0&quot;&#xd;
                        }&#xd;
                    ],&#xd;
                    &quot;policies&quot;: []&#xd;
                }&#xd;
            ]&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">1</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Check PdpGroup Query" enabled="true">
          <stringProp name="TestPlan.comments">Check PdpGroup Query</stringProp>
          <intProp name="HTTPSampler.concurrentPool">6</intProp>
          <stringProp name="HTTPSampler.domain">${PAP_HOST}</stringProp>
          <stringProp name="HTTPSampler.port">${PAP_PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.path">/policy/pap/v1/pdps</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">120000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">1</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
            <stringProp name="scriptLanguage">groovy</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">import groovy.json.JsonSlurper;
def res = [];
if (prev.getResponseCode() == &apos;200&apos;) {
    def jsonSlurper = new JsonSlurper();
    res = jsonSlurper.parseText(prev.getResponseDataAsString());

    assert res instanceof Map;
    assert res.groups.size == 2;
    assert res.groups[0].pdpGroupState== &apos;ACTIVE&apos;;
    assert res.groups[1].pdpGroupState== &apos;ACTIVE&apos;;
}
</stringProp>
          </JSR223Assertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="PAP Test Flow" enabled="true">
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <longProp name="ThreadGroup.duration">259200</longProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <intProp name="LoopController.loops">-1</intProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Check Health" enabled="true">
          <stringProp name="TestPlan.comments">Basic Health Check</stringProp>
          <intProp name="HTTPSampler.concurrentPool">6</intProp>
          <stringProp name="HTTPSampler.domain">${PAP_HOST}</stringProp>
          <stringProp name="HTTPSampler.port">${PAP_PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.path">/policy/pap/v1/healthcheck</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">1</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
            <stringProp name="scriptLanguage">groovy</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">import groovy.json.JsonSlurper;

def res = [];
if (prev.getResponseCode() == &apos;200&apos;) {
    def jsonSlurper = new JsonSlurper();
    res = jsonSlurper.parseText(prev.getResponseDataAsString());

    assert res instanceof Map;
    assert res.code == 200;
    assert res.name == &quot;Policy PAP&quot;;
    assert res.healthy==true;
    assert res.message==&quot;alive&quot;;
}
</stringProp>
          </JSR223Assertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PAP Metrics" enabled="true">
          <stringProp name="TestPlan.comments">PAP Metrics</stringProp>
          <intProp name="HTTPSampler.concurrentPool">6</intProp>
          <stringProp name="HTTPSampler.domain">${PAP_HOST}</stringProp>
          <stringProp name="HTTPSampler.port">${PAP_PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.path">/policy/pap/v1/metrics</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">1</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">
if (prev.getResponseCode() == &apos;200&apos;) {
    def res = prev.getResponseDataAsString();

    def deploySuccessCount = &apos;0&apos;;
    if (res.contains(&apos;pap_policy_deployments_total{operation=&quot;deploy&quot;,status=&quot;SUCCESS&quot;,} &apos;)) {
    	deploySuccessCount = (res =~ /pap_policy_deployments_total\{operation=&quot;deploy&quot;,status=&quot;SUCCESS&quot;,\} ([0-9]+)?([.]*[0-9]*)?/)[0][1];
    }

    def undeploySuccessCount = &apos;0&apos;;
    if (res.contains(&apos;pap_policy_deployments_total{operation=&quot;undeploy&quot;,status=&quot;SUCCESS&quot;,} &apos;)) {
    	undeploySuccessCount = (res =~ /pap_policy_deployments_total\{operation=&quot;undeploy&quot;,status=&quot;SUCCESS&quot;,\} ([0-9]+)?([.]*[0-9]*)?/)[0][1];
    }
    
    def deployFailureCount = &apos;0&apos;;
    if (res.contains(&apos;pap_policy_deployments_total{operation=&quot;deploy&quot;,status=&quot;FAILURE&quot;,} &apos;)) {
    	deployFailureCount = (res =~ /pap_policy_deployments_total\{operation=&quot;deploy&quot;,status=&quot;FAILURE&quot;,\} ([0-9]+)?([.]*[0-9]*)?/)[0][1];
    }
    def undeployFailureCount =  &apos;0&apos;;
    if (res.contains(&apos;pap_policy_deployments_total{operation=&quot;undeploy&quot;,status=&quot;FAILURE&quot;,} &apos;)) {
    	undeployFailureCount = (res =~ /pap_policy_deployments_total\{operation=&quot;undeploy&quot;,status=&quot;FAILURE&quot;,\} ([0-9]+)?([.]*[0-9]*)?/)[0][1]
    }

    def simpleDeployAPICount =  &apos;0&apos;;
    if (res.contains(&apos;http_server_requests_seconds_count{exception=&quot;None&quot;,method=&quot;POST&quot;,outcome=&quot;SUCCESS&quot;,status=&quot;202&quot;,uri=&quot;/policy/pap/v1/pdps/policies&quot;,} &apos;)) {
    	simpleDeployAPICount = (res =~ /http_server_requests_seconds_count\{exception=&quot;None&quot;,method=&quot;POST&quot;,outcome=&quot;SUCCESS&quot;,status=&quot;202&quot;,uri=&quot;\/policy\/pap\/v1\/pdps\/policies&quot;,\} ([0-9]+)?([.]*[0-9]*)?/)[0][1]
    }
    def simpleUndeployAPICount =  &apos;0&apos;;
    if (res.contains(&apos;http_server_requests_seconds_count{exception=&quot;None&quot;,method=&quot;DELETE&quot;,outcome=&quot;SUCCESS&quot;,status=&quot;202&quot;,uri=&quot;/policy/pap/v1/pdps/policies/{name}&quot;,} &apos;)) {
    	simpleUndeployAPICount = (res =~ /http_server_requests_seconds_count\{exception=&quot;None&quot;,method=&quot;DELETE&quot;,outcome=&quot;SUCCESS&quot;,status=&quot;202&quot;,uri=&quot;\/policy\/pap\/v1\/pdps\/policies\/\{name\}&quot;,\} ([0-9]+)?([.]*[0-9]*)?/)[0][1]
    }
    def batchDeploymentAPICount =  &apos;0&apos;;
    if (res.contains(&apos;http_server_requests_seconds_count{exception=&quot;None&quot;,method=&quot;POST&quot;,outcome=&quot;SUCCESS&quot;,status=&quot;202&quot;,uri=&quot;/policy/pap/v1/pdps/deployments/batch&quot;,} &apos;)) {
    	batchDeploymentAPICount = (res =~ /http_server_requests_seconds_count\{exception=&quot;None&quot;,method=&quot;POST&quot;,outcome=&quot;SUCCESS&quot;,status=&quot;202&quot;,uri=&quot;\/policy\/pap\/v1\/pdps\/deployments\/batch&quot;,\} ([0-9]+)?([.]*[0-9]*)?/)[0][1]
    }
    log.info(&quot;deploySuccessCount: &quot;+ deploySuccessCount);
    log.info(&quot;undeploySuccessCount: &quot;+ undeploySuccessCount);
    log.info(&quot;batchDeploymentAPICount: &quot;+ batchDeploymentAPICount);
    log.info(&quot;simpleDeployAPICount: &quot;+ simpleDeployAPICount);
    log.info(&quot;simpleUndeployAPICount: &quot;+ simpleUndeployAPICount);
    
    vars.put(&quot;deploySuccessCount&quot;, deploySuccessCount);
    vars.put(&quot;undeploySuccessCount&quot;, undeploySuccessCount);
    vars.put(&quot;deployFailureCount&quot;, deployFailureCount);
    vars.put(&quot;undeployFailureCount&quot;, undeployFailureCount);
    vars.put(&quot;simpleDeployAPICount&quot;, simpleDeployAPICount);
    vars.put(&quot;simpleUndeployAPICount&quot;, simpleUndeployAPICount);
    vars.put(&quot;batchDeploymentAPICount&quot;, batchDeploymentAPICount);

}</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Check PdpGroup Query" enabled="true">
          <stringProp name="TestPlan.comments">Check PdpGroup Query</stringProp>
          <intProp name="HTTPSampler.concurrentPool">6</intProp>
          <stringProp name="HTTPSampler.domain">${PAP_HOST}</stringProp>
          <stringProp name="HTTPSampler.port">${PAP_PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.path">/policy/pap/v1/pdps</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">1</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
            <stringProp name="scriptLanguage">groovy</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">import groovy.json.JsonSlurper;
def res = [];
if (prev.getResponseCode() == &apos;200&apos;) {
    def jsonSlurper = new JsonSlurper();
    res = jsonSlurper.parseText(prev.getResponseDataAsString());

    assert res instanceof Map;
    assert res.groups.size == 2;
    assert res.groups[0].pdpGroupState== &apos;ACTIVE&apos;;
    assert res.groups[1].pdpGroupState== &apos;ACTIVE&apos;;
}
</stringProp>
          </JSR223Assertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Deploy defaultDomain Policy" enabled="true">
          <intProp name="HTTPSampler.concurrentPool">6</intProp>
          <stringProp name="HTTPSampler.domain">${PAP_HOST}</stringProp>
          <stringProp name="HTTPSampler.port">${PAP_PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.path">policy/pap/v1/pdps/policies</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;policies&quot; : [&#xd;
    {&#xd;
      &quot;policy-id&quot;: &quot;operational.apex.stabilityTestDefaultDomain&quot;,&#xd;
      &quot;policy-version&quot;: &quot;1.0.0&quot;&#xd;
    }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49588">202</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">1</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">5000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
            <stringProp name="TestPlan.comments">Set variables to use for verifying the deployment status</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">vars.put(&quot;dGstatusResponse&quot;, &quot;&quot;);
vars.put(&quot;dg_status_check_counter&quot;, &quot;0&quot;);</stringProp>
          </JSR223PostProcessor>
          <hashTree/>
        </hashTree>
        <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
          <stringProp name="WhileController.condition">${__javaScript((vars.get(&quot;dGstatusResponse&quot;) == null || vars.get(&quot;dGstatusResponse&quot;).indexOf(&quot;SUCCESS&quot;) == -1) &amp;&amp; (parseInt(vars.get(&quot;dg_status_check_counter&quot;)) &lt; 30),)}</stringProp>
          <stringProp name="TestPlan.comments">Wait until the policy is successfully deployed, retry for some time</stringProp>
        </WhileController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Check status of defaultGroup policy" enabled="true">
            <intProp name="HTTPSampler.concurrentPool">6</intProp>
            <stringProp name="HTTPSampler.domain">${PAP_HOST}</stringProp>
            <stringProp name="HTTPSampler.port">${PAP_PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.path">/policy/pap/v1/policies/status/defaultGroup/operational.apex.stabilityTestDefaultDomain/1.0.0</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
              <stringProp name="scriptLanguage">groovy</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="script">
if (prev.getResponseCode() == &apos;200&apos;) {
    def res = prev.getResponseDataAsString();
    vars.put(&quot;dGstatusResponse&quot;, res);

    int x =(vars.get(&quot;dg_status_check_counter&quot;)).toInteger();
    x = x + 1;
    vars.put(&quot;dg_status_check_counter&quot;, Integer.toString(x));

}</stringProp>
            </JSR223PostProcessor>
            <hashTree/>
          </hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">2000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Check PdpGroup Audit defaultGroup" enabled="true">
          <stringProp name="TestPlan.comments">Check PdpGroup Audit</stringProp>
          <intProp name="HTTPSampler.concurrentPool">6</intProp>
          <stringProp name="HTTPSampler.domain">${PAP_HOST}</stringProp>
          <stringProp name="HTTPSampler.port">${PAP_PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.path">/policy/pap/v1/policies/audit/defaultGroup</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">1</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Check PdpGroup Audit Policy (defaultGroup)" enabled="true">
          <stringProp name="TestPlan.comments">Check PdpGroup Audit</stringProp>
          <intProp name="HTTPSampler.concurrentPool">6</intProp>
          <stringProp name="HTTPSampler.domain">${PAP_HOST}</stringProp>
          <stringProp name="HTTPSampler.port">${PAP_PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.path">/policy/pap/v1/policies/audit/defaultGroup/operational.apex.stabilityTestDefaultDomain/1.0.0</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">1</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Check PdpGroup Query" enabled="true">
          <stringProp name="TestPlan.comments">Check PdpGroup Query</stringProp>
          <intProp name="HTTPSampler.concurrentPool">6</intProp>
          <stringProp name="HTTPSampler.domain">${PAP_HOST}</stringProp>
          <stringProp name="HTTPSampler.port">${PAP_PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.path">/policy/pap/v1/pdps</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">1</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
            <stringProp name="scriptLanguage">groovy</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">import groovy.json.JsonSlurper;

def res = [];
if (prev.getResponseCode() == &apos;200&apos;) {
    def jsonSlurper = new JsonSlurper();
    res = jsonSlurper.parseText(prev.getResponseDataAsString());

    assert res instanceof Map;
    assert res.groups.size == 2;

    for(int groupSize=0;groupSize&lt;res.groups.size;groupSize++){

    	 for(int subGrpSize=0;subGrpSize&lt;res.groups[groupSize].pdpSubgroups.size;subGrpSize++){
		
    	 		def pdpSubGrp=res.groups[groupSize].pdpSubgroups[subGrpSize];
    	 		if(pdpSubGrp.pdpType ==&apos;apex&apos;){
				assert pdpSubGrp.pdpInstances.size == 1; // 1 instance in defaultGroup and 1 in sampleGroup
    	 			if (res.groups[groupSize].name == &apos;defaultGroup&apos;) {
    	 					// stabilityTestDefaultDomain policy is only deployed to defaultGroup
    	 				     assert pdpSubGrp.policies.size == 1; 
						assert pdpSubGrp.policies[0].name == &apos;operational.apex.stabilityTestDefaultDomain&apos;;
				}
    	 		     else if(res.groups[groupSize].name == &apos;sampleGroup&apos; ){
    	 		      	assert pdpSubGrp.policies.size == 0;
    	 		      	//assert pdpSubGrp.policies[0].name == &apos;operational.apex.stabilityTestDefaultDomain&apos;;
    	 		     }
    	 		}
    	 	
    	 }
    }
}
</stringProp>
          </JSR223Assertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Deployment Update for sampleGroup" enabled="true">
          <intProp name="HTTPSampler.concurrentPool">6</intProp>
          <stringProp name="HTTPSampler.domain">${PAP_HOST}</stringProp>
          <stringProp name="HTTPSampler.port">${PAP_PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.path">/policy/pap/v1/pdps/deployments/batch</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;groups&quot;: [&#xd;
        {&#xd;
            &quot;name&quot;: &quot;sampleGroup&quot;,&#xd;
            &quot;deploymentSubgroups&quot;: [&#xd;
                {&#xd;
                    &quot;pdpType&quot;: &quot;apex&quot;,&#xd;
                    &quot;action&quot;: &quot;POST&quot;,&#xd;
                    &quot;policies&quot;: [&#xd;
                        {&#xd;
                            &quot;name&quot;: &quot;operational.apex.stabilityTestSampleDomain&quot;,&#xd;
                            &quot;version&quot;: &quot;1.0.0&quot;&#xd;
                        }&#xd;
                    ]&#xd;
                }&#xd;
            ]&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49588">202</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">1</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">5000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
            <stringProp name="TestPlan.comments">Set variables to use for verifying the deployment status</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">vars.put(&quot;sGstatusResponse&quot;, &quot;&quot;);
vars.put(&quot;sg_status_check_counter&quot;, &quot;0&quot;);</stringProp>
          </JSR223PostProcessor>
          <hashTree/>
        </hashTree>
        <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
          <stringProp name="WhileController.condition">${__javaScript((vars.get(&quot;sGstatusResponse&quot;) == null || vars.get(&quot;sGstatusResponse&quot;).indexOf(&quot;SUCCESS&quot;) == -1) &amp;&amp; (parseInt(vars.get(&quot;sg_status_check_counter&quot;)) &lt; 30),)}</stringProp>
          <stringProp name="TestPlan.comments">Wait until the policy is successfully deployed, retry for some time</stringProp>
        </WhileController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Check status of sampleGroup policy" enabled="true">
            <intProp name="HTTPSampler.concurrentPool">6</intProp>
            <stringProp name="HTTPSampler.domain">${PAP_HOST}</stringProp>
            <stringProp name="HTTPSampler.port">${PAP_PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.path">/policy/pap/v1/policies/status/sampleGroup/operational.apex.stabilityTestSampleDomain/1.0.0</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
              <stringProp name="scriptLanguage">groovy</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="script">
if (prev.getResponseCode() == &apos;200&apos;) {
    def res = prev.getResponseDataAsString();
    vars.put(&quot;sGstatusResponse&quot;, res);
    
    int x =(vars.get(&quot;sg_status_check_counter&quot;)).toInteger();
    x = x + 1;
    vars.put(&quot;sg_status_check_counter&quot;, Integer.toString(x));
}</stringProp>
            </JSR223PostProcessor>
            <hashTree/>
          </hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">2000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Check status of PdpGroups" enabled="true">
          <stringProp name="TestPlan.comments">Query policies status</stringProp>
          <intProp name="HTTPSampler.concurrentPool">6</intProp>
          <stringProp name="HTTPSampler.domain">${PAP_HOST}</stringProp>
          <stringProp name="HTTPSampler.port">${PAP_PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.path">/policy/pap/v1/policies/status</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">1</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Check PdpGroup Query" enabled="true">
          <stringProp name="TestPlan.comments">Check PdpGroup Query</stringProp>
          <intProp name="HTTPSampler.concurrentPool">6</intProp>
          <stringProp name="HTTPSampler.domain">${PAP_HOST}</stringProp>
          <stringProp name="HTTPSampler.port">${PAP_PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.path">/policy/pap/v1/pdps</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">1</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
            <stringProp name="scriptLanguage">groovy</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">import groovy.json.JsonSlurper;

def res = [];
if (prev.getResponseCode() == &apos;200&apos;) {
    def jsonSlurper = new JsonSlurper();
    res = jsonSlurper.parseText(prev.getResponseDataAsString());

    assert res instanceof Map;
    assert res.groups.size == 2;

    for(int groupSize=0;groupSize&lt;res.groups.size;groupSize++){

    	 for(int subGrpSize=0;subGrpSize&lt;res.groups[groupSize].pdpSubgroups.size;subGrpSize++){

    	 	def pdpSubGrp=res.groups[groupSize].pdpSubgroups[subGrpSize];
    	 		if(pdpSubGrp.pdpType == &apos;apex&apos;){
    	 			if (res.groups[groupSize].name == &apos;defaultGroup&apos;) {
	    	 				assert pdpSubGrp.policies.size == 1; 
						assert pdpSubGrp.policies[0].name == &apos;operational.apex.stabilityTestDefaultDomain&apos;;
					}else if(res.groups[groupSize].name == &apos;sampleGroup&apos; ){
						// only stabilityTestSampleDomain policy is deployed to sampleGroup
						assert pdpSubGrp.policies.size == 1; 
						assert (pdpSubGrp.policies[0].name == &apos;operational.apex.stabilityTestSampleDomain&apos;);
    	 			}
    	 		}
    	 	
    	 }
    }
}
</stringProp>
          </JSR223Assertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Check Audit sampleGroup policy" enabled="true">
          <stringProp name="TestPlan.comments">Check Audit sampleGroup policy</stringProp>
          <intProp name="HTTPSampler.concurrentPool">6</intProp>
          <stringProp name="HTTPSampler.domain">${PAP_HOST}</stringProp>
          <stringProp name="HTTPSampler.port">${PAP_PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.path">/policy/pap/v1/policies/audit/sampleGroup/operational.apex.stabilityTestSampleDomain/1.0.0</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">1</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Check Consolidated Health" enabled="true">
          <stringProp name="TestPlan.comments">Consolidated Health Check</stringProp>
          <intProp name="HTTPSampler.concurrentPool">6</intProp>
          <stringProp name="HTTPSampler.domain">${PAP_HOST}</stringProp>
          <stringProp name="HTTPSampler.port">${PAP_PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.path">/policy/pap/v1/components/healthcheck</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">1</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
            <stringProp name="scriptLanguage">groovy</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">import groovy.json.JsonSlurper;

def res = [];
if (prev.getResponseCode() == &apos;200&apos;) {
    def jsonSlurper = new JsonSlurper();
    res = jsonSlurper.parseText(prev.getResponseDataAsString());
    assert res instanceof Map;
    //assert res.pdps.xacml!=null;
    //assert res.pdps.drools!=null;
    assert res.pdps.apex!=null;
}
</stringProp>
          </JSR223Assertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Check Deployed Policies" enabled="true">
          <stringProp name="TestPlan.comments">Query Deployed policies</stringProp>
          <intProp name="HTTPSampler.concurrentPool">6</intProp>
          <stringProp name="HTTPSampler.domain">${PAP_HOST}</stringProp>
          <stringProp name="HTTPSampler.port">${PAP_PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.path">/policy/pap/v1/policies/deployed</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">1</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
            <stringProp name="scriptLanguage">groovy</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">import groovy.json.JsonSlurper;

def res = [];
if (prev.getResponseCode() == &apos;200&apos;) {
    def jsonSlurper = new JsonSlurper();
    res = jsonSlurper.parseText(prev.getResponseDataAsString());
   assert res.size &gt;1 ;

}
</stringProp>
          </JSR223Assertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Undeploy Policy in sampleGroup" enabled="true">
          <intProp name="HTTPSampler.concurrentPool">6</intProp>
          <stringProp name="HTTPSampler.domain">${PAP_HOST}</stringProp>
          <stringProp name="HTTPSampler.port">${PAP_PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.path">/policy/pap/v1/pdps/deployments/batch</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;groups&quot;: [&#xd;
        {&#xd;
            &quot;name&quot;: &quot;sampleGroup&quot;,&#xd;
            &quot;deploymentSubgroups&quot;: [&#xd;
                {&#xd;
                    &quot;pdpType&quot;: &quot;apex&quot;,&#xd;
                    &quot;action&quot;: &quot;DELETE&quot;,&#xd;
                    &quot;policies&quot;: [&#xd;
                        {&#xd;
                            &quot;name&quot;: &quot;operational.apex.stabilityTestSampleDomain&quot;,&#xd;
                            &quot;version&quot;: &quot;1.0.0&quot;&#xd;
                        }&#xd;
                    ]&#xd;
                }&#xd;
            ]&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49588">202</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">1</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Undeploy Default Policy" enabled="true">
          <intProp name="HTTPSampler.concurrentPool">6</intProp>
          <stringProp name="HTTPSampler.domain">${PAP_HOST}</stringProp>
          <stringProp name="HTTPSampler.port">${PAP_PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.path">policy/pap/v1/pdps/policies/operational.apex.stabilityTestDefaultDomain</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49588">202</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">1</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">5000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
            <stringProp name="TestPlan.comments">Set variables to use for verifying the deployment status</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">// reset with an initial value for the while loop condition in next step to pass and the status request is made atleast once
vars.put(&quot;statusResponse&quot;, &quot;operational.apex.stabilityTestDefaultDomain&quot;);
//initialize counter to 0
vars.put(&quot;status_check_counter&quot;, &quot;0&quot;);</stringProp>
          </JSR223PostProcessor>
          <hashTree/>
        </hashTree>
        <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
          <stringProp name="WhileController.condition">${__javaScript((vars.get(&quot;statusResponse&quot;).indexOf(&quot;operational.apex.stabilityTestDefaultDomain&quot;) != -1 || vars.get(&quot;statusResponse&quot;).indexOf(&quot;operational.apex.stabilityTestSampleDomain&quot;) != -1) &amp;&amp; (parseInt(vars.get(&quot;status_check_counter&quot;)) &lt; 30),)}</stringProp>
          <stringProp name="TestPlan.comments">Wait until all policies are successfully undeployed</stringProp>
        </WhileController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Check status of policies" enabled="true">
            <intProp name="HTTPSampler.concurrentPool">6</intProp>
            <stringProp name="HTTPSampler.domain">${PAP_HOST}</stringProp>
            <stringProp name="HTTPSampler.port">${PAP_PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.path">/policy/pap/v1/policies/status</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
              <stringProp name="scriptLanguage">groovy</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="script">
if (prev.getResponseCode() == &apos;200&apos;) {
    def res = prev.getResponseDataAsString();
    vars.put(&quot;statusResponse&quot;, res);

    int x =(vars.get(&quot;status_check_counter&quot;)).toInteger();
    x = x + 1;
    vars.put(&quot;status_check_counter&quot;, Integer.toString(x));
}</stringProp>
            </JSR223PostProcessor>
            <hashTree/>
          </hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">3000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Check PdpGroup Query" enabled="true">
          <stringProp name="TestPlan.comments">Check PdpGroup Query</stringProp>
          <intProp name="HTTPSampler.concurrentPool">6</intProp>
          <stringProp name="HTTPSampler.domain">${PAP_HOST}</stringProp>
          <stringProp name="HTTPSampler.port">${PAP_PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.path">/policy/pap/v1/pdps</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">1</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
            <stringProp name="scriptLanguage">groovy</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">import groovy.json.JsonSlurper;
def res = [];
if (prev.getResponseCode() == &apos;200&apos;) {
    def jsonSlurper = new JsonSlurper();
    res = jsonSlurper.parseText(prev.getResponseDataAsString());

    assert res instanceof Map;
    assert res.groups.size == 2;

    for(int groupSize=0;groupSize&lt;res.groups.size;groupSize++){

    	 for(int subGrpSize=0;subGrpSize&lt;res.groups[groupSize].pdpSubgroups.size;subGrpSize++){
		
    	 		def pdpSubGrp=res.groups[groupSize].pdpSubgroups[subGrpSize];
    	 		if(pdpSubGrp.pdpType ==&apos;apex&apos;){
				assert pdpSubGrp.pdpInstances.size == 1; // 1 instance in defaultGroup and 1 in sampleGroup
    	 			if (res.groups[groupSize].name == &apos;defaultGroup&apos;) {
    	 				     assert pdpSubGrp.policies.size == 0; 
				}
    	 		     else if(res.groups[groupSize].name == &apos;sampleGroup&apos; ){
    	 		      	assert pdpSubGrp.policies.size == 0;
    	 		     }
    	 		}
    	 	
    	 }
    }
}
</stringProp>
          </JSR223Assertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PAP Metrics after deployments" enabled="true">
          <stringProp name="TestPlan.comments">PAP Metrics after deployments</stringProp>
          <intProp name="HTTPSampler.concurrentPool">6</intProp>
          <stringProp name="HTTPSampler.domain">${PAP_HOST}</stringProp>
          <stringProp name="HTTPSampler.port">${PAP_PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.path">/policy/pap/v1/metrics</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">1</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
            <stringProp name="scriptLanguage">groovy</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">
if (prev.getResponseCode() == &apos;200&apos;) {
    def res = prev.getResponseDataAsString();

    def newDeploySuccessCount = &apos;0&apos;;
    if (res.contains(&apos;pap_policy_deployments_total{operation=&quot;deploy&quot;,status=&quot;SUCCESS&quot;,} &apos;)) {
    	newDeploySuccessCount = (res =~ /pap_policy_deployments_total\{operation=&quot;deploy&quot;,status=&quot;SUCCESS&quot;,\} ([0-9]+)?([.]*[0-9]*)?/)[0][1];
    }

    def newUndeploySuccessCount = &apos;0&apos;;
    if (res.contains(&apos;pap_policy_deployments_total{operation=&quot;undeploy&quot;,status=&quot;SUCCESS&quot;,} &apos;)) {
    	newUndeploySuccessCount = (res =~ /pap_policy_deployments_total\{operation=&quot;undeploy&quot;,status=&quot;SUCCESS&quot;,\} ([0-9]+)?([.]*[0-9]*)?/)[0][1];
    }
    
    def newDeployFailureCount = &apos;0&apos;;
    if (res.contains(&apos;pap_policy_deployments_total{operation=&quot;deploy&quot;,status=&quot;FAILURE&quot;,} &apos;)) {
    	newDeployFailureCount = (res =~ /pap_policy_deployments_total\{operation=&quot;deploy&quot;,status=&quot;FAILURE&quot;,\} ([0-9]+)?([.]*[0-9]*)?/)[0][1];
    }
    def newUndeployFailureCount =  &apos;0&apos;;
    if (res.contains(&apos;pap_policy_deployments_total{operation=&quot;undeploy&quot;,status=&quot;FAILURE&quot;,} &apos;)) {
    	newUndeployFailureCount = (res =~ /pap_policy_deployments_total\{operation=&quot;undeploy&quot;,status=&quot;FAILURE&quot;,\} ([0-9]+)?([.]*[0-9]*)?/)[0][1]
    }

    def newSimpleDeployAPICount =  &apos;0&apos;;
    if (res.contains(&apos;http_server_requests_seconds_count{error=&quot;none&quot;,exception=&quot;none&quot;,method=&quot;POST&quot;,outcome=&quot;SUCCESS&quot;,status=&quot;202&quot;,uri=&quot;/pdps/policies&quot;,} &apos;)) {
    	newSimpleDeployAPICount = (res =~ /http_server_requests_seconds_count\{error=&quot;none&quot;,exception=&quot;none&quot;,method=&quot;POST&quot;,outcome=&quot;SUCCESS&quot;,status=&quot;202&quot;,uri=&quot;\/pdps\/policies&quot;,\} ([0-9]+)?([.]*[0-9]*)?/)[0][1]
    }
    def newSimpleUndeployAPICount =  &apos;0&apos;;
    if (res.contains(&apos;http_server_requests_seconds_count{error=&quot;none&quot;,exception=&quot;none&quot;,method=&quot;DELETE&quot;,outcome=&quot;SUCCESS&quot;,status=&quot;202&quot;,uri=&quot;/pdps/policies/{name}&quot;,} &apos;)) {
    	newSimpleUndeployAPICount = (res =~ /http_server_requests_seconds_count\{error=&quot;none&quot;,exception=&quot;none&quot;,method=&quot;DELETE&quot;,outcome=&quot;SUCCESS&quot;,status=&quot;202&quot;,uri=&quot;\/pdps\/policies\/\{name\}&quot;,\} ([0-9]+)?([.]*[0-9]*)?/)[0][1]
    }
    def newBatchDeploymentAPICount =  &apos;0&apos;;
    if (res.contains(&apos;http_server_requests_seconds_count{error=&quot;none&quot;,exception=&quot;none&quot;,method=&quot;POST&quot;,outcome=&quot;SUCCESS&quot;,status=&quot;202&quot;,uri=&quot;/pdps/deployments/batch&quot;,} &apos;)) {
    	newBatchDeploymentAPICount = (res =~ /http_server_requests_seconds_count\{error=&quot;none&quot;,exception=&quot;none&quot;,method=&quot;POST&quot;,outcome=&quot;SUCCESS&quot;,status=&quot;202&quot;,uri=&quot;\/pdps\/deployments\/batch&quot;,\} ([0-9]+)?([.]*[0-9]*)?/)[0][1]
    }
    log.info(&quot;newDeploySuccessCount: &quot;+ newDeploySuccessCount);
    log.info(&quot;newUndeploySuccessCount: &quot;+ newUndeploySuccessCount);
    log.info(&quot;newBatchDeploymentAPICount: &quot;+ newBatchDeploymentAPICount);
    log.info(&quot;newSimpleDeployAPICount: &quot;+ newSimpleDeployAPICount);
    log.info(&quot;newSimpleUndeployAPICount: &quot;+ newSimpleUndeployAPICount);

    assert Long.valueOf(vars.get(&quot;deployFailureCount&quot;)) == Long.valueOf(newDeployFailureCount);
    assert Long.valueOf(vars.get(&quot;undeployFailureCount&quot;)) == Long.valueOf(newUndeployFailureCount);
    // One policy is deployed/undeployed using batch API and the other one using simple APIs
    assert (Long.valueOf(vars.get(&quot;simpleDeployAPICount&quot;))+1) &lt;= Long.valueOf(newSimpleDeployAPICount);
    assert (Long.valueOf(vars.get(&quot;simpleUndeployAPICount&quot;))+1) &lt;= Long.valueOf(newSimpleUndeployAPICount);
    assert (Long.valueOf(vars.get(&quot;batchDeploymentAPICount&quot;))+2) &lt;= Long.valueOf(newBatchDeploymentAPICount);
    assert (Long.valueOf(vars.get(&quot;deploySuccessCount&quot;))+2) &lt;= Long.valueOf(newDeploySuccessCount);
    assert (Long.valueOf(vars.get(&quot;undeploySuccessCount&quot;))+2) &lt;= Long.valueOf(newUndeploySuccessCount);

}</stringProp>
          </JSR223Assertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <PostThreadGroup guiclass="PostThreadGroupGui" testclass="PostThreadGroup" testname="tearDown Thread Group" enabled="true">
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </PostThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change sampleGroup State to PASSIVE" enabled="true">
          <intProp name="HTTPSampler.concurrentPool">6</intProp>
          <stringProp name="HTTPSampler.domain">${PAP_HOST}</stringProp>
          <stringProp name="HTTPSampler.port">${PAP_PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.path">policy/pap/v1/pdps/groups/sampleGroup?state=PASSIVE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">1</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete PdpGroup SampleGroup" enabled="true">
          <stringProp name="TestPlan.comments">Delete PdpGroup </stringProp>
          <intProp name="HTTPSampler.concurrentPool">6</intProp>
          <stringProp name="HTTPSampler.domain">${PAP_HOST}</stringProp>
          <stringProp name="HTTPSampler.port">${PAP_PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.path">/policy/pap/v1/pdps/groups/sampleGroup</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">1</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change defaultGroup State to PASSIVE" enabled="true">
          <intProp name="HTTPSampler.concurrentPool">6</intProp>
          <stringProp name="HTTPSampler.domain">${PAP_HOST}</stringProp>
          <stringProp name="HTTPSampler.port">${PAP_PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.path">policy/pap/v1/pdps/groups/defaultGroup?state=PASSIVE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">1</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete Policy defaultDomain" enabled="true">
          <intProp name="HTTPSampler.concurrentPool">6</intProp>
          <stringProp name="HTTPSampler.domain">${API_HOST}</stringProp>
          <stringProp name="HTTPSampler.port">${API_PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.path">/policy/api/v1/policytypes/onap.policies.controlloop.operational.common.Apex/versions/1.0.0/policies/operational.apex.stabilityTestDefaultDomain/versions/1.0.0</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">1</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete Policy for sampleGroup" enabled="true">
          <intProp name="HTTPSampler.concurrentPool">6</intProp>
          <stringProp name="HTTPSampler.domain">${API_HOST}</stringProp>
          <stringProp name="HTTPSampler.port">${API_PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.path">/policy/api/v1/policytypes/onap.policies.native.Apex/versions/1.0.0/policies/operational.apex.stabilityTestSampleDomain/versions/1.0.0</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">1</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete Nodetemplate metadata for sampleDomain policy" enabled="true">
          <intProp name="HTTPSampler.concurrentPool">6</intProp>
          <stringProp name="HTTPSampler.domain">${API_HOST}</stringProp>
          <stringProp name="HTTPSampler.port">${API_PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.path">/policy/api/v1/nodetemplates/apex.metadata.pnf/versions/1.0.0</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">1</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename">/home/ramesh/s3pTestResults.jtl</stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename">/home/ramesh/s3pTestResults.jtl</stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename">/home/ramesh/s3pTestResults.jtl</stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
