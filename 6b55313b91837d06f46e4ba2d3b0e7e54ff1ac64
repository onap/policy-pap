{
  "comments": [
    {
      "key": {
        "uuid": "4ee0c1a4_46cc1023",
        "filename": "main/pom.xml",
        "patchSetId": 10
      },
      "lineNbr": 73,
      "author": {
        "id": 2787
      },
      "writtenOn": "2021-12-13T12:37:36Z",
      "side": 1,
      "message": "Can you check what we did in policy/clamp here, we had loads of problems with dependency management and clashes with policy/parent? Francesco would know the details.",
      "revId": "6b55313b91837d06f46e4ba2d3b0e7e54ff1ac64",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ea4dfc88_040d42e5",
        "filename": "main/pom.xml",
        "patchSetId": 10
      },
      "lineNbr": 73,
      "author": {
        "id": 4903
      },
      "writtenOn": "2021-12-13T13:38:33Z",
      "side": 1,
      "message": "Checked with Francesco and had a look in clamp. Seems like micrometer version is specified here. Also all spring boot starter components\u0027 and versions are specified in the policy-parent. I guess we have more control this way.\nBut, just thinking which one is better. From a managing point of view isn\u0027t it better to have dependency management like this and let spring decide on versions of spring components to bring in, and we could still specify the specific version if needed in the policy-parent which should override any spring-boot managed versions.\nThoughts?",
      "parentUuid": "4ee0c1a4_46cc1023",
      "revId": "6b55313b91837d06f46e4ba2d3b0e7e54ff1ac64",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1e87978d_76551566",
        "filename": "main/pom.xml",
        "patchSetId": 10
      },
      "lineNbr": 73,
      "author": {
        "id": 2787
      },
      "writtenOn": "2021-12-13T16:43:02Z",
      "side": 1,
      "message": "I think we ran into some problems with versions of dependencies that Spring was pulling in and we were pulling in from policy/parent and also from oparent. We need to decide what to do here.....also shouldn\u0027t these dependencies be in policy-parent if we decide to go that way.",
      "parentUuid": "ea4dfc88_040d42e5",
      "revId": "6b55313b91837d06f46e4ba2d3b0e7e54ff1ac64",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c07acb84_490587c1",
        "filename": "main/pom.xml",
        "patchSetId": 10
      },
      "lineNbr": 73,
      "author": {
        "id": 4903
      },
      "writtenOn": "2021-12-13T17:06:27Z",
      "side": 1,
      "message": "If going the policy-parent way, then yes, the dependencyManagement above for spring boot can be removed and then just use whatever defined in policy-parent. I will go that way for now to be on the safe side, as I am trying to get this merged by tomorrow before I go on vacation. Lets revisit the dependency management later if that is okay.",
      "parentUuid": "1e87978d_76551566",
      "revId": "6b55313b91837d06f46e4ba2d3b0e7e54ff1ac64",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7fc502c2_17e3d23f",
        "filename": "main/src/main/java/org/onap/policy/pap/main/rest/HealthCheckRestControllerV1.java",
        "patchSetId": 10
      },
      "lineNbr": 45,
      "author": {
        "id": 7565
      },
      "writtenOn": "2021-12-13T14:41:19Z",
      "side": 1,
      "message": "(since spring framework 4.3) You no longer need to specify an explicit injection annotation in such a single-constructor scenario. This is particularly elegant for classes which otherwise do not carry any container annotations at all, for example when programmatically registered (https://spring.io/blog/2016/03/04/core-container-refinements-in-spring-framework-4-3).\nOther suggestion: @RequiredArgsConstructor lombock annotation:\n\n@RestController\n@RequestMapping(path \u003d \"/policy/pap/v1\")\n@RequiredArgsConstructor\npublic class HealthCheckRestControllerV1  extends PapRestControllerV1 {\n\n    private final HealthCheckProvider provider;\n\n..........",
      "range": {
        "startLine": 45,
        "startChar": 4,
        "endLine": 45,
        "endChar": 14
      },
      "revId": "6b55313b91837d06f46e4ba2d3b0e7e54ff1ac64",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1a386456_f920215b",
        "filename": "main/src/main/java/org/onap/policy/pap/main/rest/HealthCheckRestControllerV1.java",
        "patchSetId": 10
      },
      "lineNbr": 45,
      "author": {
        "id": 4903
      },
      "writtenOn": "2021-12-13T15:44:57Z",
      "side": 1,
      "message": "I think you are talking about constructor injection for which annotation need not be specified anymore. But I don\u0027t understand how it applies here. Could you please specify which constructor you are talking about?",
      "parentUuid": "7fc502c2_17e3d23f",
      "range": {
        "startLine": 45,
        "startChar": 4,
        "endLine": 45,
        "endChar": 14
      },
      "revId": "6b55313b91837d06f46e4ba2d3b0e7e54ff1ac64",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    }
  ]
}