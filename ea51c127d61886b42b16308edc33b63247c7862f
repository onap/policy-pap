{
  "comments": [
    {
      "key": {
        "uuid": "34d3c267_2fae0db6",
        "filename": "main/src/main/java/org/onap/policy/pap/main/rest/PolicyComponentsHealthCheckProvider.java",
        "patchSetId": 1
      },
      "lineNbr": 112,
      "author": {
        "id": 477
      },
      "writtenOn": "2020-06-22T19:47:32Z",
      "side": 1,
      "message": "could have the following to decrease one level of indentation, it may bite back with future sonars in code below:\n\nif (clients.isEmpty()) {\n   return ..\n}\n\n..",
      "revId": "ea51c127d61886b42b16308edc33b63247c7862f",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "114579c5_8892aca2",
        "filename": "main/src/main/java/org/onap/policy/pap/main/rest/PolicyComponentsHealthCheckProvider.java",
        "patchSetId": 1
      },
      "lineNbr": 112,
      "author": {
        "id": 477
      },
      "writtenOn": "2020-06-23T13:56:39Z",
      "side": 1,
      "message": "no comment, read too quickly, thought method ended in line 138.",
      "parentUuid": "34d3c267_2fae0db6",
      "revId": "ea51c127d61886b42b16308edc33b63247c7862f",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "87bf94b4_3648c249",
        "filename": "main/src/main/java/org/onap/policy/pap/main/rest/PolicyComponentsHealthCheckProvider.java",
        "patchSetId": 1
      },
      "lineNbr": 113,
      "author": {
        "id": 477
      },
      "writtenOn": "2020-06-22T19:47:32Z",
      "side": 1,
      "message": "may want to make executor a class variable so to not create one executor instance at each healthcheck invokation.",
      "revId": "ea51c127d61886b42b16308edc33b63247c7862f",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8d32f814_b927fb98",
        "filename": "main/src/main/java/org/onap/policy/pap/main/rest/PolicyComponentsHealthCheckProvider.java",
        "patchSetId": 1
      },
      "lineNbr": 113,
      "author": {
        "id": 6738
      },
      "writtenOn": "2020-06-24T10:20:16Z",
      "side": 1,
      "message": "that can be done if we are expecting continuos requests to be coming in. Also, please suggest where \u0027executor shutdown\u0027 should be done if the executor is made a class variable.",
      "parentUuid": "87bf94b4_3648c249",
      "revId": "ea51c127d61886b42b16308edc33b63247c7862f",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "75ba65e3_28601c9b",
        "filename": "main/src/main/java/org/onap/policy/pap/main/rest/PolicyComponentsHealthCheckProvider.java",
        "patchSetId": 1
      },
      "lineNbr": 113,
      "author": {
        "id": 477
      },
      "writtenOn": "2020-06-24T15:00:40Z",
      "side": 1,
      "message": "Yes, you could expect monitoring tooling to send periodic requests to check on health of the components.   For example the drools legacy healthcheck is exercised every 15 seconds if you look at the logs:\n\n[2020-06-24T14:42:01.930+00:00|qtp381930033-50]10.42.11.8 - demo@people.osaaf.org [24/Jun/2020:14:42:01 +0000] \"GET /healthcheck HTTP/1.1\" 200 190 \"-\" \"Consul Health Check\"\n[2020-06-24T14:42:16.964+00:00|qtp381930033-43]10.42.11.8 - demo@people.osaaf.org [24/Jun/2020:14:42:16 +0000] \"GET /healthcheck HTTP/1.1\" 200 190 \"-\" \"Consul Health Check\"\n[2020-06-24T14:42:32.006+00:00|qtp381930033-47]10.42.11.8 - demo@people.osaaf.org [24/Jun/2020:14:42:32 +0000] \"GET /healthcheck HTTP/1.1\" 200 190 \"-\" \"Consul Health Check\"\n\nThe other option to consider is the ForkJoinPool.commonPool() maintained by the JVM itself that works with CompletableFutures.\n\nFor the location, Jim/Ram are best to suggest a location for it.",
      "parentUuid": "8d32f814_b927fb98",
      "revId": "ea51c127d61886b42b16308edc33b63247c7862f",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "91f5a874_c4e2c0f2",
        "filename": "main/src/main/java/org/onap/policy/pap/main/rest/PolicyComponentsHealthCheckProvider.java",
        "patchSetId": 1
      },
      "lineNbr": 113,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-06-24T15:31:00Z",
      "side": 1,
      "message": "Yes, the ForkJoinPool could be used instead, but then asynchronous web calls would have to be used.  I suggested that in the abandoned review, as a future enhancement since it\u0027s a little bit more complicated.",
      "parentUuid": "75ba65e3_28601c9b",
      "revId": "ea51c127d61886b42b16308edc33b63247c7862f",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8cbc98ac_58a940cd",
        "filename": "main/src/main/java/org/onap/policy/pap/main/rest/PolicyComponentsHealthCheckProvider.java",
        "patchSetId": 1
      },
      "lineNbr": 126,
      "author": {
        "id": 477
      },
      "writtenOn": "2020-06-22T19:47:32Z",
      "side": 1,
      "message": "may want to separate InterruptedException and ExecutionException in different catches as interrupt() should only apply to InterruptedException.",
      "revId": "ea51c127d61886b42b16308edc33b63247c7862f",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b8cf3aed_7fabc247",
        "filename": "main/src/main/java/org/onap/policy/pap/main/rest/PolicyComponentsHealthCheckProvider.java",
        "patchSetId": 1
      },
      "lineNbr": 127,
      "author": {
        "id": 477
      },
      "writtenOn": "2020-06-22T19:47:32Z",
      "side": 1,
      "message": "This will be an uncaught exception in the executor\u0027s thread, may be just simply log \"e\".",
      "revId": "ea51c127d61886b42b16308edc33b63247c7862f",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a98f432d_9ce8a9a5",
        "filename": "main/src/main/java/org/onap/policy/pap/main/rest/PolicyComponentsHealthCheckProvider.java",
        "patchSetId": 1
      },
      "lineNbr": 127,
      "author": {
        "id": 477
      },
      "writtenOn": "2020-06-23T13:56:39Z",
      "side": 1,
      "message": "taking back this comment, does not apply.",
      "parentUuid": "b8cf3aed_7fabc247",
      "revId": "ea51c127d61886b42b16308edc33b63247c7862f",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    }
  ]
}