{
  "comments": [
    {
      "key": {
        "uuid": "41aa2ec0_c04a91bd",
        "filename": "main/src/main/java/org/onap/policy/pap/main/startstop/Main.java",
        "patchSetId": 2
      },
      "lineNbr": 86,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-08-07T14:56:20Z",
      "side": 1,
      "message": "occurs to me - it could just throw an exception.  That would cause a non-zero exit without causing sonar complaints or hassles in junit tests.",
      "revId": "dce1eb054f6545cd8a0e22468557862fb2e701b8",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5218cd00_910b26b7",
        "filename": "main/src/main/java/org/onap/policy/pap/main/startstop/Main.java",
        "patchSetId": 2
      },
      "lineNbr": 86,
      "author": {
        "id": 4903
      },
      "writtenOn": "2020-08-07T17:34:44Z",
      "side": 1,
      "message": "Ok, I didn\u0027t know that. I can test that and verify and then do it that way. I agree System.exit is not the right choice for sure if we are not concerned about specific exitCodes.\nHow about Jorge\u0027s comment about specific exitCodes  specific to error types? If that is needed, then we will have to stick to System.exit I think.",
      "parentUuid": "41aa2ec0_c04a91bd",
      "revId": "dce1eb054f6545cd8a0e22468557862fb2e701b8",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9e057cc0_3a34e7f2",
        "filename": "main/src/main/java/org/onap/policy/pap/main/startstop/Main.java",
        "patchSetId": 2
      },
      "lineNbr": 86,
      "author": {
        "id": 57
      },
      "writtenOn": "2020-08-07T18:28:19Z",
      "side": 1,
      "message": "We could have a specific exception in policy/common that has the enumeration in it.",
      "parentUuid": "5218cd00_910b26b7",
      "revId": "dce1eb054f6545cd8a0e22468557862fb2e701b8",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3e31c8a6_eee50fd8",
        "filename": "main/src/test/java/org/onap/policy/pap/main/startstop/TestMain.java",
        "patchSetId": 2
      },
      "lineNbr": 49,
      "author": {
        "id": 4903
      },
      "writtenOn": "2020-08-07T14:58:31Z",
      "side": 1,
      "message": "Another option is to add the below dependancy\n       \u003cdependency\u003e\n            \u003cgroupId\u003ecom.github.stefanbirkner\u003c/groupId\u003e\n            \u003cartifactId\u003esystem-rules\u003c/artifactId\u003e\n            \u003cversion\u003e1.19.0\u003c/version\u003e\n            \u003cscope\u003etest\u003c/scope\u003e\n        \u003c/dependency\u003e\nmaybe to parent pom since we will need this in all repos, and then in test classes,\ndefine a Rule:\n    @Rule\n    public final ExpectedSystemExit exit \u003d ExpectedSystemExit.none();\nand in each test case where System.exit is expected,add\n    exit.expectSystemExitWithStatus(1);\n\nI defined the SecurityManager and did the current way to avoid adding these kind of dependencies.",
      "revId": "dce1eb054f6545cd8a0e22468557862fb2e701b8",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0228f944_6e9e0bf7",
        "filename": "main/src/test/java/org/onap/policy/pap/main/startstop/TestMain.java",
        "patchSetId": 2
      },
      "lineNbr": 49,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-08-07T15:23:15Z",
      "side": 1,
      "message": "and yet another option is to wrap System.exit() in a method and then override the method in the junits so that it doesn\u0027t actually invoke exit().  The dummy method could set a flag with the exit status so that the tests could verify the value.  This avoids the permission manager altogether",
      "parentUuid": "3e31c8a6_eee50fd8",
      "revId": "dce1eb054f6545cd8a0e22468557862fb2e701b8",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "83a02614_f73bc3cc",
        "filename": "main/src/test/java/org/onap/policy/pap/main/startstop/TestMain.java",
        "patchSetId": 2
      },
      "lineNbr": 107,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-08-07T14:56:20Z",
      "side": 1,
      "message": "maybe move this to an @After method",
      "revId": "dce1eb054f6545cd8a0e22468557862fb2e701b8",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    }
  ]
}