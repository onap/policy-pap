{
  "comments": [
    {
      "key": {
        "uuid": "181505d7_831fa378",
        "filename": "main/src/main/resources/openapi/openapi.yaml",
        "patchSetId": 2
      },
      "lineNbr": 19,
      "author": {
        "id": 477
      },
      "writtenOn": "2022-07-28T14:55:38Z",
      "side": 1,
      "message": "The commit message says swagger but this is not a swagger specification (which has different structure).\nCould you clarify these aspects for me?\n1- what\u0027s the purpose of this spec?\n2- how it\u0027s generated\n3- what\u0027s the maintanence plan for this file, does it need to change, everytime somebody does development work on the REST API?  Can it be automated?\n4- how this spec will be used and with which tools, ..\nthanks Francesco!",
      "revId": "2c4b7d5737e8cacf5ec180493ae0f47452f5f69a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "57245009_7c1386f9",
        "filename": "main/src/main/resources/openapi/openapi.yaml",
        "patchSetId": 2
      },
      "lineNbr": 19,
      "author": {
        "id": 7629
      },
      "writtenOn": "2022-07-29T08:11:52Z",
      "side": 1,
      "message": "Hi Jorge this spec file is using v3 of OpenApi Specifications and it is in YAML format. For those two reasons it differs from the one you posted v2 in json.\n\n1-The purpose of the spec it\u0027s to have code generated API interfaces (using swagger-codegen-maven-plugin), the implementation will remain the same. At the moment we have annotations in the code that generate these specs, we would like to reverse this process.\n\n2-This was generated using Springfox dependency that generates the spec both in v2 or in v3. In this case: https://PAPIP:PORT/v3/api-docs\n\n3-In case of changes, this document acts as a contract and could be modified and the code would be autogenerated.\n\n4-These changes are useful for generating contract test stubs automatically.",
      "parentUuid": "181505d7_831fa378",
      "revId": "2c4b7d5737e8cacf5ec180493ae0f47452f5f69a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "15c1c39a_68fe6044",
        "filename": "main/src/main/resources/openapi/openapi.yaml",
        "patchSetId": 2
      },
      "lineNbr": 19,
      "author": {
        "id": 2787
      },
      "writtenOn": "2022-07-29T11:08:11Z",
      "side": 1,
      "message": "The approach taken in the Policy Framework so far is to generate the Swagger from annotations in the code. We are looking at reversing this, and having code generated from the Swagger (OpenAPI) specification and the OpenAPI specification becomes a source artifact. We should discuss whether this is a good idea or not.\n\nWe will present this proposal at a Policy Framework meeting in late August.\n\nFor sure, full generation of all APIs will not happen in Kohn but we were hoping to start with generating the stubs for contract testing. The approach we were thinking of taking was\n- writing and committing the hand crafted OpenAPI files (in K)\n- generating the Contract Test stubs (in K)\n\nThis creates the situation where we have 2 OpenAPI files, a hand crafted one and a file generated by the annotations. We were going to look at this issue as well and see in future releases if we can also generate the API code and replace the current code with that. Of course, this raises issues on how we do this from a design and testing point of view so for some time we might have to live with the 2 parallel OpenAPI files.",
      "parentUuid": "57245009_7c1386f9",
      "revId": "2c4b7d5737e8cacf5ec180493ae0f47452f5f69a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    }
  ]
}